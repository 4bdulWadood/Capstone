{"version":3,"file":"static/js/main.91114b62.js","mappings":"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","sources":["AddProjectPage.js","TaskToggle.js","AddNotification.js","NotificationBar.js","PMPage.js","BookRoomPage.js","AccountPage.js","TemperaturesPage.js","BottomTabNavigator.js","LoginScreen.js","RegisterScreen.js","homepage.js","OnboardScreen.js","App.js","index.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, Button, StyleSheet, TouchableOpacity } from 'react-native';\nimport axios from 'axios';\nimport DateTimePickerModal from 'react-native-modal-datetime-picker'; // This is for a modal date picker\n\nconst AddProject = () => {\n  const [projectName, setProjectName] = useState('');\n  const [percentageComplete, setPercentageComplete] = useState('');\n  const [team, setTeam] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\n  const [notification, setNotification] = useState({ visible: false, message: '', theme: 'light' });\n  const API_URL = 'https://capstone-cmml.onrender.com';\n\n  const showNotification = (message, theme = 'light') => {\n    setNotification({ visible: true, message, theme });\n    setTimeout(() => {\n      setNotification({ visible: false, message: '', theme: 'light' });\n    }, 3000); // hide after 3 seconds\n  };\n\n  const handleAddProject = async () => {\n    if (!projectName || !percentageComplete || !team || !dueDate) {\n      showNotification('TextFields cannot be empty', 'red');\n      return;\n    }\n\n    try {\n      const teamArray = team.split(',').map(item => item.trim());\n      const projectData = {\n        Name: projectName,\n        Percentage_Complete: parseFloat(percentageComplete),\n        Due_Date: dueDate,\n        Team: teamArray,\n      };\n\n      await axios.post(`${API_URL}/auth/projects`, projectData);\n      showNotification('Project successfully added!', 'green');\n    } catch (error) {\n      showNotification('Project was not added!', 'red');\n    }\n  };\n\n  const showDatePicker = () => {\n    setDatePickerVisibility(true);\n  };\n\n  const hideDatePicker = () => {\n    setDatePickerVisibility(false);\n  };\n\n  const handleConfirmDate = (date) => {\n    setDueDate(date.toISOString().split('T')[0]); // Save the formatted date\n    hideDatePicker();\n  };\n\n  const handleDateChange = (event) => {\n    setDueDate(event.target.value); // Update due date from the event\n    setShowDatePicker(false); // Hide the date picker\n  };\n\n  \n  \n  return (\n    <View style={styles.container}>\n      {notification.visible && (\n        <View style={[styles.notification, { backgroundColor: notification.theme === 'red' ? '#FFCCCC' : '#CCFFCC' }]}>\n          <Text style={styles.notificationText}>{notification.message}</Text>\n          <TouchableOpacity onPress={() => setNotification({ visible: false, message: '', theme: 'light' })}>\n            <Text style={styles.closeButton}>X</Text>\n          </TouchableOpacity>\n        </View>\n      )}\n      <Text style={styles.title}>Add New Project</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Project Name\"\n        value={projectName}\n        onChangeText={setProjectName}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Percentage Complete\"\n        keyboardType=\"numeric\"\n        value={percentageComplete}\n        onChangeText={setPercentageComplete}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Team (Comma-separated)\"\n        value={team}\n        onChangeText={setTeam}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Due Date\"\n        value={dueDate}\n        onChangeText={setDueDate}\n      />\n\n<View style={styles.datePickerRow}>\n        <TextInput\n          style={[styles.input, styles.dateInput]}\n          placeholder=\"Due Date\"\n          value={dueDate}\n          onChangeText={() => {}} // The date is set by the date picker, not manual edit\n          editable={false} // Make the text input non-editable\n        />\n        <TouchableOpacity onPress={showDatePicker} style={styles.calendarButton}>\n          <Text style={styles.calendarText}>📅</Text>\n        </TouchableOpacity>\n      </View>\n\n      <DateTimePickerModal\n        isVisible={isDatePickerVisible}\n        mode=\"date\"\n        onConfirm={handleConfirmDate}\n        onCancel={hideDatePicker}\n      />\n      <Button title=\"Add Project\" onPress={handleAddProject} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  input: {\n    width: '100%',\n    marginBottom: 10,\n    borderWidth: 1,\n    borderColor: 'gray',\n    borderRadius: 5,\n    padding: 10,\n  },\n  datePickerRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '100%',\n  },\n  dateInput: {\n    flex: 1,\n  },\n  calendarButton: {\n    borderWidth: 1,\n    borderColor: 'gray',\n    borderRadius: 5,\n    padding: 10,\n    marginLeft: 5,\n  },\n  calendarText: {\n    fontSize: 18,\n  },\n  notification: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    padding: 20,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    zIndex: 1000,\n  },\n  notificationText: {\n    color: '#000',\n  },\n  closeButton: {\n    color: '#000',\n    fontWeight: 'bold',\n  },\n});\n\nexport default AddProject;\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, Switch, StyleSheet } from 'react-native';\nimport axios from 'axios';\n\nconst TaskToggle = ({ project, taskName, taskComplete }) => {\n  useEffect(() => {\n    console.log(project);\n    \n  }, []);\n\n  const [isComplete, setIsComplete] = useState(taskComplete);\n \n  const onToggleSwitch = async() => {\n    setIsComplete((prevValue) => !prevValue);\n    console.log(project)\n    await axios.post('https://capstone-cmml.onrender.com/auth/tasktoggle', {\n      project: project, \n      taskName: taskName,\n      taskComplete: !isComplete\n    })\n    .then(response => {\n      console.log(response);\n    })\n    .catch(error => {\n      console.error('Error updating task completion status:', error);\n    });\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.label}>{isComplete ? 'Status: Complete' : 'Status: Incomplete'}</Text>\n      <Switch\n        trackColor={{ false: '#FF6B6B', true: '#4ECDC4' }}\n        thumbColor={isComplete ? '#FFFFFF' : '#FFFFFF'}\n        ios_backgroundColor=\"#3e3e3e\"\n        onValueChange={onToggleSwitch}\n        value={isComplete}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: '#FFFFFF',\n    borderRadius: 6,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    marginVertical: 4,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 1,\n    elevation: 3,\n  },\n  label: {\n    fontWeight: 'bold',\n    color: '#344955',\n    flex: 1,\n  },\n  statusText: {\n    marginLeft: 10,\n  },\n});\n\nexport default TaskToggle;","import React, { useState, Alert } from 'react';\nimport { View, Text, TextInput, Button, StyleSheet } from 'react-native';\nimport axios from 'axios';\nimport { useNavigation } from '@react-navigation/native';\nimport NotificationBar from './NotificationBar';\n\nconst AddNotification = () => {\n  const [title, setTitle] = useState('');\n  const [message, setMessage] = useState('');\n  const [time, setTime] = useState('');\n  const [employees, setEmployees] = useState('');\n  const navigation = useNavigation();\n  const url = 'https://capstone-cmml.onrender.com'\n\n  const handleAddNotification = async () => {\n   \n    if (!title || !message || !employees || !time) {\n      Alert.alert('Fields cannot be empty');\n      return;\n    }\n\n    try {\n      const teamArray = employees.split(',').map(item => item.trim());\n      const notificationData = {\n        title,\n        message,\n        targetEmployeeIds: teamArray,\n        createdAt: time,\n      };\n\n      await axios.post(`${url}/auth/addnotifications`, notificationData);\n      console.log('Notification sent successfully!')\n      navigation.navigate('NotificationBar')\n    } catch (error) {\n      console.error('Error adding notification:', error);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Add Notification</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Title\"\n        value={title}\n        onChangeText={setTitle}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Message\"\n        value={message}\n        onChangeText={setMessage}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Target Employee ID's (Comma-separated)\"\n        value={employees}\n        onChangeText={setEmployees}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Created At (mm/dd/yyyy)\"\n        value={time}\n        onChangeText={setTime}\n      />\n      <Button title=\"Send Notification\" onPress={handleAddNotification} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16,\n  },\n  input: {\n    height: 40,\n    width: '100%',\n    borderColor: '#3498db',\n    borderBottomWidth: 1,\n    marginBottom: 16,\n    paddingLeft: 8,\n  },\n});\n\nexport default AddNotification;\n","// Import the necessary modules\nimport React, { useState, useEffect } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport axios from 'axios';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport AddNotification from './AddNotification';\nimport { useNavigation } from '@react-navigation/native';\n\n// Define the NotificationBar component\nconst NotificationBar = ({ route }) => {\n  const [notifications, setNotifications] = useState([]);\n  const { employeeId } = route.params;\n  const navigation = useNavigation();\n  const url = 'https://capstone-cmml.onrender.com'\n\n  // Function to fetch notifications\n  const fetchNotifications = async () => {\n    try {\n      const response = await axios.get(`${url}/auth/notifications?employeeID=${employeeId}`);\n      setNotifications(response.data); // Update notifications state with fetched data\n    } catch (error) {\n      console.error('Error fetching notifications:', error);\n    }\n  };\n\n  // useEffect hook to fetch notifications when component mounts or employeeId changes\n  useEffect(() => {\n    fetchNotifications();\n  }, [employeeId]);\n\n  // Function to mark a notification as read\n  const markAsRead = async (notificationTitle) => {\n    try {\n      await axios.patch(`${url}/auth/notifications/read?title=${notificationTitle}&employeeID=${employeeId}`);\n      // Immediately reflect the change in the UI\n      setNotifications(notifications.map(n =>\n        n.title === notificationTitle && !n.readBy.includes(employeeId)\n          ? { ...n, readBy: [...n.readBy, employeeId] }\n          : n\n      ));\n    } catch (error) {\n      console.error('Error marking notification as read:', error);\n    }\n  };\n\n  // Function to delete a notification\n  const deleteNotification = async (notificationTitle) => {\n    try {\n      await axios.delete(`${url}/auth/notifications/delete?title=${notificationTitle}`);\n      // Immediately reflect the change in the UI\n      setNotifications(notifications.filter(n => n.title !== notificationTitle));\n    } catch (error) {\n      console.error('Error deleting notification:', error);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      {/* Header */}\n      <Text style={styles.header}>Notifications</Text>\n      \n      {/* Refresh Button */}\n      <TouchableOpacity onPress={fetchNotifications} style={styles.refreshButton}>\n        <Icon name=\"refresh\" size={20} color=\"#3498db\" />\n      </TouchableOpacity>\n      \n      {/* Add Notification Button */}\n      <TouchableOpacity onPress={() => navigation.navigate('AddNotification')} style={styles.addNotificationButton}>\n        <Icon name=\"add-alert\" size={30} color=\"#3498db\" />\n      </TouchableOpacity>\n      \n      {/* Render notifications */}\n      {notifications.map((notification, index) => (\n        <View key={index} style={[styles.card, notification.readBy.includes(employeeId) ? styles.cardRead : styles.cardUnread]}>\n          {/* Title and Delete Button */}\n          <View style={styles.titleRow}>\n            <Text style={styles.cardTitle}>{notification.title}</Text>\n            <TouchableOpacity onPress={() => deleteNotification(notification.title)} style={styles.deleteButton}>\n              <Icon name=\"delete\" size={24} color=\"#f00\" />\n            </TouchableOpacity>\n          </View>\n          \n          {/* Message and Time */}\n          <Text style={styles.cardMessage}>{notification.message}</Text>\n          <Text style={styles.cardTime}>{new Date(notification.createdAt).toLocaleString()}</Text>\n          \n          {/* Mark as Read Button */}\n          <TouchableOpacity onPress={() => markAsRead(notification.title)} style={styles.markAsReadButton}>\n            <Text style={styles.markAsReadButtonText}>Mark as Read</Text>\n          </TouchableOpacity>\n        </View>\n      ))}\n    </View>\n  );\n};\n\n// Styles\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#f0f0f0',\n    padding: 10,\n  },\n  header: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  cardUnread: {\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n    elevation: 3,\n  },\n  cardTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  cardMessage: {\n    fontSize: 14,\n  },\n  cardTime: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 5,\n  },\n  markAsReadButton: {\n    marginTop: 10,\n    backgroundColor: '#4CAF50',\n    padding: 10,\n    borderRadius: 5,\n  },\n  markAsReadButtonText: {\n    color: '#fff',\n    textAlign: 'center',\n  },\n  cardRead: {\n    opacity: 0.5, // Or use backgroundColor to dim the card\n  },\n  titleRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between', // This spreads out the title and the delete button on both ends\n    alignItems: 'center', // This centers them vertically in case they have different heights\n    width: '100%', // Ensure the row takes up the full width of the card\n  },\n  deleteButton: {\n    // You might want to adjust padding or margin based on your layout needs\n    padding: 5,\n    marginLeft: 10, // Add some space between the title and the button if needed\n  },\n  refreshButton: {\n    alignSelf: 'flex-end',\n    marginTop: -30,\n    marginRight: 50,\n  },\n  addNotificationButton: {\n    alignSelf: 'flex-end',\n    marginTop: -30,\n    marginRight: 10,\n    marginBottom: 5,\n  },\n});\n\nexport default NotificationBar;\n","import React, { useState, useEffect } from 'react';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport {\n  View,\n  Text,\n  FlatList,\n  TouchableOpacity,\n  StyleSheet,\n  ScrollView,\n  Modal,\n  TextInput,\n  Button,\n} from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport { useNavigation } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport axios from 'axios';\nimport { BarChart } from 'react-native-chart-kit';\nimport { Dimensions } from 'react-native';\nimport AddProjectPage from './AddProjectPage'; // Adjust the import path as needed\nimport TaskToggle from './TaskToggle'; // Import the TaskToggle component\nimport NotificationBar from './NotificationBar';\nimport CircularProgress from '@mui/material/CircularProgress';\n\n// const API_URL = 'https://capstone-cmml.onrender.com'; // Define your API URL here\nconst API_URL = 'http://localhost:3001'; // Define your API URL here\n\n\n\nconst Tab = createMaterialTopTabNavigator();\nconst Stack = createStackNavigator();\n\n\nconst PHASES = [\n  { name: 'Planning', percentage: Math.floor(Math.random() * 100) },\n  { name: 'Implementation', percentage: Math.floor(Math.random() * 100) },\n  { name: 'Testing', percentage: Math.floor(Math.random() * 100) },\n  { name: 'Deployment', percentage: Math.floor(Math.random() * 100) },\n];\n\nconst renderPhaseCard = (navigation, phase, projectName, project) => {\n  var count = 0, count2 = 0;\n  project.Tasks.forEach(item =>{\n    if(phase.name === item.taskPhase){\n      count++;\n    }\n\n    if(phase.name === item.taskPhase && item.taskComplete){\n      count2++;\n    }\n  })\n \n  console.log(count, count2);\n  var percentage = (count2 / count) * 100;\n\n  if(isNaN(percentage)){\n    percentage = 0;\n  }\n\n//   return (\n//     <TouchableOpacity onPress={() => navigation.navigate('Tasks', { phase, projectName })}>\n//       <View style={styles.phaseCard}>\n//         <Text style={styles.cardTitle}>{phase.name}</Text>\n//         <Text style={styles.cardPercentage}>{`${percentage}% Completed`}</Text>\n//       </View>\n//     </TouchableOpacity>\n//   );\n// };\n\nreturn (\n  <TouchableOpacity onPress={() => navigation.navigate('Tasks', { phase, projectName })}>\n    <View style={styles.phaseCardContainer}>\n      <View style={styles.phaseCard}>\n        <Text style={styles.cardTitle}>{phase.name}</Text>\n        <View style={styles.progressBarBackground}>\n          <View style={[styles.progressBar, { width: `${percentage}%` }]} />\n        </View>\n        <Text style={styles.cardPercentage}>{`${percentage}% Completed`}</Text>\n      </View>\n    </View>\n  </TouchableOpacity>\n);\n};\n\n\n\nconst PMPage = ({ route }) => {\n  const { employeeId, employeeName} = route.params;\n  console.log(employeeId, employeeName);\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    \n    navigation.setOptions({\n      headerRight: () => (\n        <View style={{ flexDirection: 'row', marginRight: 10 }}>\n          {employeeId === 'admin' && (\n            <TouchableOpacity\n              style={{ marginRight: 20 }}\n              onPress={() => navigation.navigate('AddProjectPage')}\n            >\n              <Icon name=\"add-box\" size={30} color='#a832ff' />\n            </TouchableOpacity>\n          )}\n          <TouchableOpacity\n            onPress={() => navigation.navigate('NotificationBar')}\n          >\n            <Icon name=\"notifications\" size={30} color='#a832ff' />\n          </TouchableOpacity>\n        </View>\n      ),\n    });\n  }, [navigation, employeeId]);\n\n  return (\n    <Stack.Navigator initialRouteName=\"PMTopTabNavigator\" headerMode=\"none\">\n      <Stack.Screen name=\"PMTopTabNavigator\" component={PMTopTabNavigator} initialParams={{ employeeId: employeeId, employeeName: employeeName }} />\n      <Stack.Screen name=\"ProjectDetails\" component={ProjectDetailsScreen} />\n      <Stack.Screen name=\"Tasks\" component={TasksPage} initialParams={{ employeeId: employeeId }}/>\n      <Stack.Screen name=\"AddProjectPage\" component={AddProjectPage} />\n      <Stack.Screen name=\"NotificationBar\" component={NotificationBar} initialParams={{ employeeId: employeeId }}/>\n    </Stack.Navigator>\n  );\n};\n\n\nconst renderTaskCard = (task, projectName) => {\n\nreturn (\n  <TouchableOpacity onPress={() => {/* handle task card press */}}>\n    <View style={styles.phaseCardContainer}>\n      <View style={styles.phaseCard}>\n        <Text style={styles.cardTitle}>{task.taskName}</Text>\n        <Text style={styles.phase}>{`Phase: ${task.taskPhase}`}</Text>\n        {/* Include the TaskToggle component here */}\n        \n        <TaskToggle project={projectName} taskName={task.taskName} taskComplete={task.taskComplete} />\n        \n        <Text style={styles.employees}>\n          Employees: {task.employees ? task.employees.join(', ') : 'None'}\n        </Text>\n      </View>\n    </View>\n  </TouchableOpacity>\n);\n};\n\n\nconst TasksPage = ({ route }) => {\n  const { phase, projectName, employeeId } = route.params;\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [newTaskName, setNewTaskName] = useState('');\n  const [newTaskPhase, setNewTaskPhase] = useState('');\n  const [newTaskSize, setNewTaskSize] = useState('');\n  const [newTaskNumEmployees, setNewTaskNumEmployees] = useState(1);\n  const [newTaskEmployees, setNewTaskEmployees] = useState([]);\n  const [employeeInputs, setEmployeeInputs] = useState([\"\"]);\n\n  const [projectTasks, setProjectTasks] = useState([]);\n  const [newProjectName, setNewProjectName] = useState();\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/auth/projects`);\n        console.log(response);\n        const project = response.data.find((p) => p.Name === projectName);\n  \n        if (project) {\n          const tasksForPhase = project.Tasks.filter((t) => t.taskPhase === phase.name);\n          setProjectTasks(tasksForPhase);\n        }\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      }\n    };\n  \n    fetchTasks();\n    setNewProjectName(projectName); // Automatically set the project name\n    setNewTaskPhase(phase.name)\n  }, [phase.name, projectName]);\n\n  const handleUpdateSampleEmployees = async () => {\n    if (!newTaskName) {\n      console.log('Please enter a task name before updating sample employees.');\n      return;\n    }\n\n    try {\n      const response = await axios.get(`${API_URL}/auth/users`);\n      const user_Data = await axios.post(`${API_URL}/auth/get-suggestions.py`, {\n        user_data: response.data,\n        new_task_name: newTaskName,\n      });\n\n      const val = convertStringToJson();\n      const val_json = JSON.parse(val);\n\n      setNewTaskEmployees(val_json.map((name) => name.EmployeeName));\n\n      function convertStringToJson() {\n        const lines = user_Data.data.trim().split('\\n');\n        lines.shift();\n        const employees = lines.map((line) => {\n          const [id, ...nameParts] = line.trim().split(' ');\n          const name = nameParts.join(' ');\n          return { id: parseInt(id, 10), EmployeeName: name };\n        });\n        return JSON.stringify(employees, null, 2);\n      }\n\n      const jsonOutput = convertStringToJson(user_Data.data);\n      console.log(jsonOutput);\n    } catch (error) {\n      console.error('Error fetching sample users:', error);\n    }\n  };\n\n  const handleAddTask = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleSaveTask = async () => {\n    // Assuming you have states for task name, due date, and possibly other details\n    // Prepare the task details including the employee inputs\n    const taskDetails = {\n      project: newProjectName,\n      taskName: newTaskName,\n      taskPhase: newTaskPhase,\n      taskSize: newTaskSize, \n      employees: employeeInputs.filter(input => input.trim() !== ''), // Filter out any empty strings\n      taskSize: newTaskSize,\n      employees: employeeInputs.filter((input) => input.trim() !== ''),\n    };\n\n    try {\n      // Make the API call to submit the task details\n      // Adjust the URL and request payload according to your backend API\n       await axios.post(`${API_URL}/auth/addtask`, taskDetails);\n       console.log('Task successfully added with employees');\n\n      await axios.post(`${API_URL}/auth/addtasktoproject`, taskDetails);\n      console.log('Task successfully added to project data');\n  \n      // Handle any post-save actions, like closing the modal or clearing the form\n      setIsModalVisible(false);\n    } catch (error) {\n      console.error('Error adding task with employees:', error);\n    }\n  };\n\n  const handleCloseModal = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleNumEmployeesChange = (numEmployees) => {\n    const clampedNumEmployees = Math.max(1, Math.min(5, numEmployees));\n    setNewTaskNumEmployees(clampedNumEmployees);\n    setEmployeeInputs(\n      employeeInputs.slice(0, clampedNumEmployees).concat(Array(Math.max(clampedNumEmployees - employeeInputs.length, 0)).fill(''))\n    );\n  };\n\n  const handleEmployeeInputChange = (text, index) => {\n    const updatedInputs = [...employeeInputs];\n    updatedInputs[index] = text;\n    setEmployeeInputs(updatedInputs);\n  };\n\n  const renderEmployeeInputs = () => {\n    return Array.from({ length: newTaskNumEmployees }, (_, index) => (\n      <TextInput\n        key={index}\n        style={styles.inputField}\n        placeholder={`Employee ${index + 1}`}\n        value={employeeInputs[index]}\n        onChangeText={(text) => handleEmployeeInputChange(text, index)}\n      />\n    ));\n  };\n\n  return (\n    <View>\n      <View style={styles.header}>\n      <View>\n  <Text style={styles.projectCardTitle}>{projectName}</Text>\n</View>\n   \n          {employeeId === 'admin' && (\n          <TouchableOpacity onPress={handleAddTask} style={styles.addButton}>\n            <Text style={styles.addButtonText}>Add Task</Text>\n          </TouchableOpacity>\n)}\n\n      </View>\n      <FlatList\n        data={projectTasks}\n        keyExtractor={(item, index) => index.toString()}\n        renderItem={({ item }) => renderTaskCard(item, projectName)}\n      />\n\n      <Modal\n        visible={isModalVisible}\n        animationType=\"slide\"\n        transparent={true}\n        onRequestClose={handleCloseModal}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.splitScreenContainer}>\n            <View style={styles.leftSide}>\n              <Text style={styles.modalTitle}>Add Task</Text>\n              <TextInput\n              style={styles.inputField}\n              placeholder=\"Project Name\"\n              value={newProjectName} // Set the value to newProjectName state\n              editable={false} // Make the TextInput non-editable\n              />\n\n              <TextInput\n                style={styles.inputField}\n                placeholder=\"Task Name\"\n                onChangeText={(text) => setNewTaskName(text)}\n              />\n              <TextInput\n                style={styles.inputField}\n                placeholder=\"Phase\"\n                onChangeText={(text) => setNewTaskPhase(text)}\n                value={newTaskPhase} // Set the value to newProjectName state\n                editable={false} // Make the TextInput non-editable\n              />\n              <TextInput\n                style={styles.inputField}\n                placeholder=\"Task Size\"\n                onChangeText={(text) => setNewTaskSize(text)}\n              />\n              <TextInput\n                style={styles.inputField}\n                placeholder=\"Number of Employees\"\n                onChangeText={(text) => setNewTaskNumEmployees(parseInt(text) || 0)}\n              />\n              <TouchableOpacity onPress={handleUpdateSampleEmployees} style={styles.updateButton}>\n                <Text style={styles.addButtonText}>Generate AI suggestions</Text>\n              </TouchableOpacity>\n              <TextInput\n                style={styles.inputField}\n                placeholder=\"Number of Employees\"\n                keyboardType=\"numeric\"\n                value={String(newTaskNumEmployees)}\n                onChangeText={(text) => handleNumEmployeesChange(parseInt(text) || 1)}\n              />\n              {renderEmployeeInputs()}\n            </View>\n            <View style={styles.rightSide}>\n              <Text style={styles.modalTitle}> AI Suggestion</Text>\n              <FlatList\n                data={newTaskEmployees}\n                keyExtractor={(item, index) => index.toString()}\n                renderItem={({ item }) => (\n                  <Text style={styles.sampleEmployee}>{item}</Text>\n                )}\n              />\n            </View>\n          </View>\n          <View style={styles.modalButtons}>\n            <View style={styles.buttonWrapper}>\n              <Button title=\"Save\" onPress={handleSaveTask} />\n            </View>\n            <View style={[styles.buttonWrapper]}>\n              <Button title=\"Cancel\" onPress={handleCloseModal} />\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n};\n\n// to calculate projectCompletion\nconst calculateProjectCompletion = (project) => {\n  let numCompletedTasks = 0;\n  project.Tasks.forEach((task) => {\n    if (task.taskComplete) {\n      numCompletedTasks++;\n    }\n  });\n\n  let percentageCompleted = Math.round((numCompletedTasks / project.Tasks.length) * 100);\n  return isNaN(percentageCompleted) ? 0 : percentageCompleted;\n};\n\nconst renderProjectCard = (navigation, project) => {\n  const teamText = project.Team ? `Team: ${project.Team.join(', ')}` : 'Team: N/A';\n  \n  //Use the project.Name to calculate the Percentage_Complete for a project, need to go through all tasks in every phase. Display that instead of Percentage_Complete. \n  var num = 0;\n  project.Tasks.forEach((val)=>{\n      console.log(val)\n      val.taskComplete ? num++ : null;\n  })\n\n  var percentage = Math.round((num/project.Tasks.length)*100);\n  \n  if(isNaN(percentage)){\n    percentage = 0;\n  }\n\n  let color = '#2ecc71'; // Default color: green\n\n  if (percentage < 35) {\n    color = '#ff5c5c'; // Red color for less than 35%\n  } else if (percentage >= 35 && percentage < 70) {\n    color = '#f1c40f'; // Yellow color for 35% to 70%\n  }\n\nreturn (\n  <TouchableOpacity\n    onPress={() => navigation.navigate('ProjectDetails', { project, navigation })}\n    style={styles.projectCard}\n  >\n    <View style={styles.leftContent}>\n      <Text style={styles.projectTitle}>{project.Name}</Text>\n      <Text style={styles.projectSubtitle}>Agile Development</Text>\n      <View style={styles.dueDate}>\n        <Icon name=\"event\" size={12} style={styles.dueDateIcon} />\n        <Text style={styles.dueDateText}>Due {project.Due_Date}</Text>\n      </View>\n      <View style={styles.taskCounter}>\n        <Icon name=\"list\" size={12} style={styles.taskIcon} />\n        <Text style={styles.taskCounterText}>{project.Tasks.length} Tasks</Text>\n      </View>\n    </View>\n    <View style={styles.rightContent}>\n      <CircularProgress\n        variant=\"determinate\"\n        value={percentage}\n        color=\"secondary\"\n        thickness={5}\n        size={80} // Adjust size based on your layout\n        style={styles.progressCircle}\n      />\n      <Text style={styles.percentageText}>{`${percentage}%`}</Text>\n    </View>\n  </TouchableOpacity>\n);\n};\n\n\n\nconst ProjectDetailsScreen = ({ route }) => {\n  const { project, navigation } = route.params;\n  \n  const chartConfig = {\n    backgroundGradientFrom: \"#fff\",\n    backgroundGradientTo: \"#fff\",\n    color: (opacity = 1) => `rgba(0, 0, 255, ${opacity})`,\n    labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\n    barPercentage: 0.5, // Adjust the width of the bars, default is 0.4\n    //barRadius: 5, // Adjust the corner radius of the bars\n    barStyle: {\n      borderRadius: 10, // Additional styling for the bars, if needed\n    },\n    backgroundGradientFromOpacity: 0,\n    backgroundGradientToOpacity: 0,\n    fillShadowGradient: '#a832ff', // Or any other color you use in your app\n    fillShadowGradientOpacity: 1,\n    formatYLabel: label => label + '%',\n  };\n  \n\n  const screenWidth = Dimensions.get(\"window\").width;\n  // const screenWidth = Dimensions.get(\"window\").width;\n  const chartWidth = screenWidth - 5; \n\n  const data = {\n    labels: PHASES.map(phase => phase.name), //yAxisLabel: 'Percentage Complete',\n    datasets: [{\n      data: PHASES.map(phase => {\n        var count = 0, count2 = 0;\n    \n        project.Tasks.forEach(item =>{\n          if(phase.name === item.taskPhase){\n            count++;\n          }\n      \n          if(phase.name === item.taskPhase && item.taskComplete){\n            count2++;\n          }\n        })\n    \n        var percentage = (count2 / count) * 100;\n        if(isNaN(percentage)){\n          percentage = 0;\n        }\n    \n        return percentage;\n      })\n    }]\n  };\n\n  //Calculate phase and phase percentage data by querying the backend, for the projects just like before, and setting the value for the PHASE variable.\n  console.log(project)\n\n  return (\n    <ScrollView>\n      <View>\n        <Text style={styles.mytext}>Project Phases</Text>\n        <FlatList\n          data={PHASES}\n          keyExtractor={(item) => item.name}\n          renderItem={({ item }) => renderPhaseCard(navigation, item, project.Name, project)}\n          scrollEnabled={false} // Disables scrolling for the FlatList, since it's inside a ScrollView\n        />\n        <Text style={styles.mytext}>Progress Chart</Text>\n        <BarChart\n          data={data}\n          width={chartWidth}\n          height={220}\n          yAxisLabel=\"\"\n          chartConfig={chartConfig}\n          verticalLabelRotation={0}\n          style={styles.chartStyle}\n        />\n         \n      </View>\n    </ScrollView>\n  );\n};\n\nconst AllScreen = ({route}) => {\n  const navigation = useNavigation();\n  const [projects, setProjects] = useState([]);\n  const [error, setError] = useState(null);\n  const {employeeName} = route.params;\n\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/auth/assignedprojects?employeeName=${employeeName}`);\n\n      setProjects(response.data);\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n      setError('Error fetching projects');\n    }\n  };\n\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n\n  console.log(projects)\n\n  return (\n    <ScrollView>\n      <View>\n        <Text style={styles.mytext}>All Projects</Text>\n        <TouchableOpacity onPress={fetchProjects} style={{ alignSelf: 'flex-end', marginTop: -10 }}>\n          <Icon name=\"refresh\" size={20} color='#a832ff' style={{ marginRight: 20, marginTop: -20, marginBottom: 5 }} />\n        </TouchableOpacity>\n\n        <FlatList\n          style={{ flex: 1 }}\n          data={projects}\n          keyExtractor={(item) => item.Name}\n          renderItem={({ item }) => renderProjectCard(navigation, item)}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst OngoingScreen = ({ route }) => {\n  const navigation = useNavigation();\n  const [projects, setProjects] = useState([]);\n  const { employeeName } = route.params;\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/auth/assignedprojects?employeeName=${employeeName}`);\n        const filteredProjects = response.data.filter((project) => calculateProjectCompletion(project) < 100);\n        setProjects(filteredProjects);\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      }\n    };\n    fetchProjects();\n  }, []);\n\n  return (\n    <ScrollView>\n      <View>\n        <Text style={styles.mytext}>Ongoing Projects</Text>\n        <FlatList\n          data={projects}\n          keyExtractor={(item) => item.Name}\n          renderItem={({ item }) => renderProjectCard(navigation, item)}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst CompletedScreen = ({ route }) => {\n  const navigation = useNavigation();\n  const [projects, setProjects] = useState([]);\n  const { employeeName } = route.params;\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/auth/assignedprojects?employeeName=${employeeName}`);\n        const filteredProjects = response.data.filter((project) => calculateProjectCompletion(project) === 100);\n        setProjects(filteredProjects);\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      }\n    };\n    fetchProjects();\n  }, []);\n\n  return (\n    <ScrollView>\n      <View>\n        <Text style={styles.mytext}>Completed Projects</Text>\n        <FlatList\n          data={projects}\n          keyExtractor={(item) => item.Name}\n          renderItem={({ item }) => renderProjectCard(navigation, item)}\n        />\n      </View>\n    </ScrollView>\n  );\n};\nconst PMTopTabNavigator = ({ route }) => {\n  // Destructuring employeeId and employeeName from route.params\n  const { employeeId, employeeName } = route.params;\n\n  return (\n    <Tab.Navigator>\n      <Tab.Screen name=\"All\" component={AllScreen} initialParams={{ employeeName: employeeName }} />\n      <Tab.Screen name=\"Ongoing\" component={OngoingScreen} initialParams={{ employeeName: employeeName }} />\n      <Tab.Screen name=\"Completed\" component={CompletedScreen} initialParams={{ employeeName: employeeName }} />\n    </Tab.Navigator>\n  );\n};\nconst styles = StyleSheet.create({\n  projectCard: {\n    backgroundColor: '#ffffff',\n    borderRadius: 20,\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    flexDirection: 'row',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  projectCardTitle: {\n    backgroundColor: '#F0EBE3',\n    borderRadius: 20,\n    padding: 15,\n    marginVertical: 8,\n    marginLeft: 2,\n    marginRight: 6,\n    flexDirection: 'row',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n    fontWeight: 'bold'\n  },\n  leftContent: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  rightContent: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  projectTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 4,\n    color: '#333',\n  },\n  projectSubtitle: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 16,\n  },\n  dueDate: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  dueDateIcon: {\n    marginRight: 8,\n    color: '#666',\n  },\n  dueDateText: {\n    fontSize: 12,\n    color: '#666',\n  },\n  taskCounter: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  taskIcon: {\n    marginRight: 8,\n    color: '#666',\n  },\n  taskCounterText: {\n    fontSize: 12,\n    color: '#666',\n  },\n  percentageText: {\n    fontWeight: 'bold',\n    fontSize: 18,\n    color: '#333',\n    position: 'absolute',\n    textAlign: 'center',\n  },\n  phaseCardContainer: {\n    backgroundColor: '#111',\n    borderRadius: 20,\n    margin: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 2,\n    flex: 1,\n    marginVertical: 8,\n    marginHorizontal: 16,\n\n  },\n \n  phaseText: {\n    fontSize: 16,\n    color: '#555',\n  },\n  taskCard: {\n    backgroundColor: 'white',\n    padding: 10,\n    margin: 5,\n    marginLeft: 2,\n    borderRadius: 10,\n    borderWidth: 3,\n    borderColor: '#a832ff', // Neon-ish purple border color\n    marginBottom: 12,\n  },\n  taskName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  phase: {\n    color: '#555',\n    marginBottom: 8,\n  },\n  completionStatus: {\n    fontWeight: 'bold',\n    fontSize: 16,\n    color: '#2ecc71',\n  },\n  \n  // cardTitle: {\n  //   fontSize: 15,\n  //   fontWeight: 'bold',\n  //   marginBottom: 8,\n  //   fontFamily: 'sans-serif'\n  // },\n  cardText: {\n    fontSize: 14,\n    fontFamily: 'sans-serif',\n    marginBottom: 6,\n    color: '#000000'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    backgroundColor: '#fff',\n    borderBottomWidth: 1,\n    borderBottomColor: '#ddd',\n  },\n  addButton: {\n    backgroundColor: '#a832ff',\n    padding: 7,\n    borderRadius: 5,\n  },\n  updateButton: {\n    backgroundColor: '#2ecc71', // Green background color\n    padding: 12,\n    borderRadius: 8,\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  addButtonText: {\n    color: '#ffffff',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)', // Semi-transparent black background\n  },\n  modalContent: {\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    overflow: 'hidden', // Ensure border-radius works as expected\n    width: '80%', // Adjust the width as needed\n    maxWidth: 400, // Maximum width for the modal\n    elevation: 5,\n  },\n  modalTitle: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    padding: 4,\n    backgroundColor: '#3498db', // Header background color\n    color: '#fff', // Header text color\n    textAlign: 'center',\n  },\n  inputField: {\n    height: 40,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingHorizontal: 10,\n    borderRadius: 5,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between', // or 'space-around' based on your preference\n    marginHorizontal: 20, // Adjust the margin as needed\n    marginTop: 20,\n    width: \"150%\"\n  },\n \n  saveButton: {\n    backgroundColor: '#3498db',\n    padding: 12,\n    borderRadius: 8,\n    marginRight: 10, // Add margin to the right of \"Save\" button\n  },\n\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 10,\n    marginBottom: 10,\n    width: \"150%\" \n  },\n  buttonWrapper: {\n    flex: 2,\n    marginHorizontal: 10, // Add margin to each button\n    width: \"100px\",\n    backgroundColor: 'red'\n  },\n  cancelButton: {\n    padding: 12,\n    borderRadius: 8,\n    marginLeft: 10, // Add margin to the left of \"Cancel\" button\n  },\n  buttonText: {\n    color: '#ffffff',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n\n  splitScreenContainer: {\n    flexDirection: 'row',\n    flex: 1,\n  },\n  leftSide: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#f0f0f0',\n  },\n  rightSide: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#e0e0e0',\n  },\n  sampleEmployee: {\n    fontSize: 16,\n    marginBottom: 10,\n  },\n  employees: {\n    fontSize: 16,\n    color: '#555',\n    marginBottom: 8,\n  },\n\n  mytext: {\n    fontWeight: 'bold',\n    fontSize: 15,\n    margin: 5,\n    marginRight: 5\n  },\n\n  // Add the new styles\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 10,\n  },\n \n\n \n\n  phaseText: {\n    marginTop: 10,\n    color: '#3498db',\n  },\n\n  taskName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  phase: {\n    marginVertical: 5,\n  },\n  completionStatus: {\n    marginVertical: 5,\n    color: '#3498db',\n  },\n  employees: {\n    marginVertical: 5,\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  splitScreenContainer: {\n    flexDirection: 'row',\n    width: '80%',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    overflow: 'hidden',\n  },\n  leftSide: {\n    padding: 20,\n    width: '60%',\n  },\n  rightSide: {\n    padding: 20,\n    width: '40%',\n    backgroundColor: '#ecf0f1',\n  },\n  inputField: {\n    borderWidth: 1,\n    borderColor: '#bdc3c7',\n    borderRadius: 5,\n    padding: 10,\n    marginVertical: 5,\n  },\n  updateButton: {\n    backgroundColor: '#3498db',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10,\n  },\n  sampleEmployee: {\n    marginBottom: 5,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    marginTop: 20,\n  },\n  chart: {\n    marginTop: 10, // Add margin top\n    marginBottom: 10,\n    borderRadius: 20, // Add border radius\n    borderWidth: 2, // Add border width if needed\n    borderColor: '#000', // Add border color if needed\n    \n  },\n  \n  leftContent: {\n    flex: 1,\n  },\n  rightContent: {\n    marginLeft: 10,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 5,\n    marginBottom: 5,\n  },\n  percentText:{\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  separator: {\n    width: 1, // Width of the separator line\n    height: '80%', // Height of the separator line, adjust as needed\n    backgroundColor: '#888', // Grey color of the separator line\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 5,\n    marginBottom: 5,\n    shadowColor: '#000', // Color of the shadow\n    shadowOffset: {\n      width: 0, // No horizontal shadow offset\n      height: 3, // Adjust the vertical shadow offset\n    },\n    shadowOpacity: 0.6, // Opacity of the shadow\n    shadowRadius: 3, // Radius of the shadow\n  },\n\n  duedate:{\n    color: '#FF5C5C',\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n\n  // phaseCard: {\n  //   flexDirection: 'row',\n  //   justifyContent: 'space-between',\n  //   alignItems: 'center',\n  //   backgroundColor: 'white',\n  //   borderRadius: 20,\n  //   padding: 20,\n  //   marginVertical: 8,\n  //   marginHorizontal: 16,\n  //   shadowColor: '#000',\n  //   shadowOffset: { width: 0, height: 2 },\n  //   shadowOpacity: 0.1,\n  //   shadowRadius: 2,\n  //   elevation: 3,\n  // },\n  phaseCard: {\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 20,\n    // shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 3,\n  },\n  cardTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  cardPercentage: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    textAlign: 'right',\n  },\n  chartStyle: {\n    borderRadius: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    backgroundColor: 'white',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 3,\n    marginTop: 25\n  },\n  progressBarContainer: {\n    height: 10,\n    width: '100%',\n    backgroundColor: '#e0e0e0',\n    borderRadius: 5,\n    marginTop: 5,\n    overflow: 'hidden',\n  },\n  progressBarBackground: {\n    height: 10,\n    backgroundColor: '#e0e0e0',\n    borderRadius: 5,\n    overflow: 'hidden',\n    // This will ensure the progressBar doesn't go outside the bounds of the card\n    marginVertical: 10, // Add some vertical margin if you want space around the bar\n  },\n  progressBar: {\n    height: '100%',\n    backgroundColor: '#4caf50',\n    borderRadius: 5, // Optional if you want the bar to have rounded corners\n  },\n  cardDetailText: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 5,\n  },\n  // container: {\n  //   flex: 1,\n  //   alignItems: 'center', // Center items horizontally in the container\n  //   justifyContent: 'flex-start', // Align items to the top of the container\n  //   paddingTop: 20, // Space from the top of the container\n  //   backgroundColor: '#FFFFFF', // Background color of the overall screen\n  // },\n\n});\n\n\n\nexport default PMPage;","import React, { useState, useEffect } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TouchableOpacity,\n  Alert,\n  Modal,\n  Picker,\n  Button,\n  ScrollView,\n} from 'react-native';\nimport axios from 'axios';\n\nconst BookRoomPage = () => {\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [selectedTime, setSelectedTime] = useState('');\n  const [notification, setNotification] = useState({ visible: false, message: '', theme: 'light' });\n  const API_URL = 'https://capstone-cmml.onrender.com';\n  \n  const showNotification = (message, theme = 'light') => {\n    setNotification({ visible: true, message, theme });\n    setTimeout(() => {\n      setNotification({ visible: false, message: '', theme: 'light' });\n    }, 3000); // hide after 3 seconds\n  };\n\n  const onRoomClick = (roomId) => {\n    console.log('room clicked');\n    var roomName = document.getElementById(roomId).getAttribute('data-room');\n    setSelectedRoom(roomName);\n    setModalVisible(true);\n  };\n\n  // method to check if room is available or not\n  const fetchRoomData = async (room, time) => {\n    try {\n      const response = await axios.get(`${API_URL}/auth/rooms/${room}/times/${time}`);\n      console.log(response.data);\n\n      // Return the relevant data, e.g., response.data.booked\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching ${room} data:`, error);\n      // Handle error appropriately\n      return false; // Return false in case of an error\n    }\n  };\n\n  const attachRoomClickListeners = () => {\n    const rooms = [\n      'meeting-room-1',\n      'meeting-room-2',\n      'conference-room',\n      'cafeteria',\n      'meeting-room-3',\n      'meeting-room-4',\n      'open-workspace',\n      'meeting-room-5',\n      'meeting-room-6',\n      'meeting-room-7',\n    ];\n\n    rooms.forEach((roomId) => {\n      const roomElement = document.getElementById(roomId);\n      roomElement.addEventListener('click', () => onRoomClick(roomId));\n    });\n  };\n\n  useEffect(() => {\n    attachRoomClickListeners();\n  }, []);\n\n  const handleConfirmBooking = async (room, time) => {\n    try {\n      const { booked } = await fetchRoomData(room, time);\n\n      if (booked) {\n        console.log('Room is available for booking at this time');\n        setModalVisible(false);\n        await updateBookingStatus(room, time, false);\n        showNotification(`You have successfully booked ${room} for ${time}!`, 'green');\n\n        // Set a timeout to revert booking status after 1 minute\n        setTimeout(async () => {\n        await updateBookingStatus(room, time, true); // Revert to available\n        console.log(`Booking status reverted for ${room} at ${time}`);\n      }, 60000); // 60000 milliseconds = 1 minute\n\n\n      } else {\n        console.log('Not available for this time');\n        setModalVisible(false);\n        showNotification(`Booking UnSuccessful for ${room} at ${time}. Please book another timeslot!`, 'red');\n        Alert.alert(\n          'Booking UnSuccessful',\n          'Room is not available for booking at this time.',\n          [{ text: 'OK', onPress: () => console.log('OK Pressed') }],\n          { cancelable: false }\n        );\n      }\n    } catch (error) {\n      console.error('Error handling booking:', error);\n      showNotification('An error occurred while processing your booking. Please try again.', 'red');\n    }\n  };\n\n // Update to include a 'booked' parameter to control booking status\nconst updateBookingStatus = async (room, time, booked) => {\n  try {\n    // Update the request to reflect the desired status based on the 'booked' parameter\n    await axios.put(`${API_URL}/auth/rooms/${room}/times/${time}`, { booked });\n  } catch (error) {\n    console.error(`Error updating booking status for ${room} at ${time}:`, error);\n  }\n};\n  return (\n    <ScrollView\n      style={{ flex: 1 }}\n      horizontal={true}\n      contentContainerStyle={styles.contentContainerStyle}\n    >\n      <View style={styles.svgContainer}>\n        {/* SVG floor plan */}\n        <svg width=\"800\" height=\"600\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect x=\"10\" y=\"10\" width=\"780\" height=\"580\" fill=\"lightgrey\" stroke=\"black\" stroke-width=\"2\"/>\n\n\n<rect id=\"meeting-room-1\" data-room=\"Meeting Room 1\" x=\"20\" y=\"20\" width=\"150\" height=\"100\" fill=\"lightblue\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"30\" y=\"70\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 1</text>\n\n<rect id=\"meeting-room-2\" data-room=\"Meeting Room 2\" x=\"20\" y=\"130\" width=\"150\" height=\"100\" fill=\"lightblue\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"30\" y=\"180\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 2</text>\n\n<rect id=\"conference-room\" data-room=\"Conference Room\" x=\"180\" y=\"20\" width=\"250\" height=\"150\" fill=\"lightgreen\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"190\" y=\"95\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Conference Room</text>\n\n<rect id=\"cafeteria\" data-room=\"Cafeteria\" x=\"450\" y=\"20\" width=\"150\" height=\"100\" fill=\"peachpuff\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"460\" y=\"70\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Cafeteria</text>\n\n<rect id=\"meeting-room-3\" data-room=\"Meeting Room 3\" x=\"620\" y=\"20\" width=\"150\" height=\"100\" fill=\"lightcoral\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"630\" y=\"70\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 3</text>\n\n<rect id=\"meeting-room-4\" data-room=\"Meeting Room 4\" x=\"620\" y=\"130\" width=\"150\" height=\"100\" fill=\"lightcoral\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"630\" y=\"180\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 4</text>\n\n<rect id=\"open-workspace\" data-room=\"Open Workspace\" x=\"180\" y=\"200\" width=\"400\" height=\"150\" fill=\"khaki\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"190\" y=\"275\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Open Workspace</text>\n\n<rect id=\"meeting-room-5\" data-room=\"Meeting Room 5\" x=\"20\" y=\"450\" width=\"150\" height=\"100\" fill=\"lightcoral\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"30\" y=\"490\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 5</text>\n\n<rect id=\"meeting-room-6\" data-room=\"Meeting Room 6\" x=\"200\" y=\"450\" width=\"150\" height=\"100\" fill=\"lightcoral\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"210\" y=\"490\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 6</text>\n\n<rect id=\"meeting-room-7\" data-room=\"Meeting Room 7\" x=\"380\" y=\"450\" width=\"150\" height=\"100\" fill=\"lightcoral\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"390\" y=\"490\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 7</text>\n        </svg>\n\n\n        {/* Modal for Booking */}\n        <Modal\n          animationType=\"slide\"\n          transparent={true}\n          visible={modalVisible}\n          onRequestClose={() => {\n            setModalVisible(!modalVisible);\n          }}\n        >\n          <View style={styles.modalContainer}>\n            <Text style={styles.modalText}>Room Name: {selectedRoom}</Text>\n            <Text>Select Time:</Text>\n            <View style={styles.pickerContainer}>\n              <Picker\n                selectedValue={selectedTime}\n                onValueChange={(itemValue) => setSelectedTime(itemValue)}\n                style={styles.pickerStyle}\n              >\n                 <Picker.Item label=\"9:00 AM - 10:00 AM\" value=\"9:00 AM - 10:00 AM\" />\n                <Picker.Item label=\"10:00 AM - 11:00 AM\" value=\"10:00 AM - 11:00 AM\" />\n                <Picker.Item label=\"11:00 AM - 12:00 PM\" value=\"11:00 AM - 12:00 PM\" />\n                <Picker.Item label=\"12:00 PM - 1:00 PM\" value=\"12:00 PM - 1:00 PM\" />\n                <Picker.Item label=\"1:00 PM - 2:00 PM\" value=\"1:00 PM - 2:00 PM\" />\n                <Picker.Item label=\"2:00 PM - 3:00 PM\" value=\"2:00 PM - 3:00 PM\" />\n                <Picker.Item label=\"3:00 PM - 4:00 PM\" value=\"3:00 PM - 4:00 PM\" />\n                <Picker.Item label=\"4:00 PM - 5:00 PM\" value=\"4:00 PM - 5:00 PM\" />\n            \n              </Picker>\n            </View>\n            <Button title=\"Confirm Booking\" onPress={() => handleConfirmBooking(selectedRoom, selectedTime)} />\n          </View>\n        </Modal>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  contentContainerStyle: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  svgContainer: {\n    width: 800, // Width of your SVG\n    height: 600, // Height of your SVG\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  // Add other styles here as previously defined\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    margin: 10,\n  },\n  modalText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: 'white',\n  },\n  pickerContainer: {\n    width: '100%',\n    marginBottom: 10,\n  },\n  pickerStyle: {\n    height: 50,\n    width: '100%',\n    backgroundColor: 'white',\n    color: 'black',\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: 'gray',\n    paddingLeft: 10,\n    paddingRight: 10,\n  },\n  selectedRoomContainer: {\n    marginTop: 16,\n  },\n  selectedRoomText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'green',\n  },\n  button: {\n    marginTop: 8,\n    backgroundColor: 'blue',\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n  },\n  notification: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    padding: 20,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    zIndex: 1000,\n  },\n  notificationText: {\n    color: '#000',\n  },\n  closeButton: {\n    color: '#000',\n    fontWeight: 'bold',\n  },\n});\n\nexport default BookRoomPage;","import React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { Avatar } from 'react-native-paper';\n\nconst AccountPage = ({route}) => {\n  const navigation = useNavigation();\n  const {employeeName, employeePic} = route.params;\n  const joinDate = 'January 5, 2020';\n  const lastLogin = 'March 28, 2024, 3:42 PM';\n  const location = 'New York, USA';\n\n  const handleLogout = () => {\n    // Logout logic here\n    navigation.navigate('Home');\n  };\n\n   return (\n    <View style={styles.container}>\n      <View style={styles.profileHeader}>\n        <Avatar.Image\n          size={80}\n          source={{ uri: employeePic }}\n          style={styles.profilePic}\n        />\n        <Text style={styles.profileName}>{employeeName}</Text>\n        <Text style={styles.profileEmail}>{employeeName}@deskSynergy.com</Text>\n      </View>\n\n      <View style={styles.actionsContainer}>\n        <TouchableOpacity style={styles.actionButton} onPress={() => {/* Change password logic */}}>\n          <Text style={styles.actionText}>Change Password</Text>\n        </TouchableOpacity>\n        <TouchableOpacity style={styles.actionButton} onPress={handleLogout}>\n          <Text style={styles.actionText}>Logout</Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* Additional user details */}\n      <View style={styles.detailsContainer}>\n        <Text style={styles.detailsTitle}>Details</Text>\n        <Text style={styles.detailItem}>Join Date: {joinDate}</Text>\n        <Text style={styles.detailItem}>Last Login: {lastLogin}</Text>\n        <Text style={styles.detailItem}>Location: {location}</Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f0f0f0', // Light background color\n    padding: 20,\n  },\n  profileHeader: {\n    alignItems: 'center',\n    marginBottom: 30,\n  },\n  profilePic: {\n    backgroundColor: '#e0e0e0', // Placeholder background color for profile pic\n  },\n  profileName: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    marginTop: 8,\n    color: '#333', // Dark text for light background\n  },\n  profileEmail: {\n    fontSize: 16,\n    color: '#555', // Dimmed text color\n  },\n  actionsContainer: {\n    backgroundColor: '#ffffff', // Light color for action buttons background\n    borderRadius: 10,\n    padding: 16,\n    marginBottom: 20,\n    shadowColor: '#000', // Shadow to lift the container\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 2,\n  },\n  actionButton: {\n    backgroundColor: '#e7e7e7', // White button background for a cleaner look\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    borderRadius: 25, // Rounded corners for a modern look\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 12,\n    borderWidth: 1, // Slight border for definition\n    borderColor: '#dddddd', // Light grey border color\n    shadowColor: '#000', // Shadow for depth\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 2,\n  },\n  actionText: {\n    fontSize: 16,\n    fontWeight: '500', // Medium text weight\n    color: '#333', // Dark grey text for better readability\n  },\n  detailsContainer: {\n    padding: 16,\n    backgroundColor: '#ffffff',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 2,\n  },\n  detailsTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    color: '#333', // Dark text for light background\n  },\n  detailItem: {\n    fontSize: 16,\n    color: '#555', // Dimmed text color\n    marginBottom: 4,\n  },\n});\n\nexport default AccountPage;\n","import React, { useState, useEffect } from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\nimport axios from \"axios\";\n\nconst TemperaturesPage = ({ route }) => {\n  const [tempValue, setTempValue] = useState(10);\n  const [tempColor, setTempColor] = useState(\"cold\");\n  const empid = route.params.employeeId;\n\n  useEffect(() => {\n    getTemperature();\n  }, []);\n\n  const url = 'https://capstone-cmml.onrender.com'\n\n  const getTemperature = async () => {\n    try {\n      const response = await axios.get(`${url}/auth/temperature`);\n      setTempValue(response.data);\n      if (response.data >= 15) {\n        setTempColor(\"hot\");\n      } else {\n        setTempColor(\"cold\");\n      }\n    } catch (error) {\n      console.error(`Error fetching temperature: ${error}`);\n    }\n  };\n\n  const increaseTemp = () => {\n    if (tempValue < 30) {\n      const newTemp = tempValue + 1;\n      setTempValue(newTemp);\n      if (newTemp > 14) {\n        setTempColor(\"hot\");\n      }\n    }\n  };\n\n  const decreaseTemp = () => {\n    if (tempValue > 1) {\n      const newTemp = tempValue - 1;\n      setTempValue(newTemp);\n      if (newTemp < 15) {\n        setTempColor(\"cold\");\n      }\n    }\n  };\n\n  const saveTemp = async (currentTemp) => {\n    try {\n      const response = await axios.post(`${url}/savetemperature`, { temperature: currentTemp });\n      setTempValue(response.data.temperature);\n    } catch (error) {\n      console.error(`Error saving temperature: ${error}`);\n    }\n  };\n\n  return (\n    <View style={styles.appContainer}>\n      <View style={styles.temperatureDisplayContainer}>\n        <View style={[styles.temperatureDisplay, tempColor === \"hot\" ? styles.hot : styles.cold]}>\n          <Text style={styles.temperatureText}>{tempValue}</Text>\n        </View>\n      </View>\n      {empid === \"admin\" && (\n        <>\n          <View style={styles.buttonContainer}>\n            <TouchableOpacity style={[styles.circularButton, { backgroundColor: 'white' }]} onPress={increaseTemp}>\n              <Text style={styles.buttonText}>+</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={[styles.circularButton, { backgroundColor: 'white' }]} onPress={decreaseTemp}>\n              <Text style={styles.buttonText}>-</Text>\n            </TouchableOpacity>\n          </View>\n          <View style={styles.buttonContainer}>\n            <TouchableOpacity style={[styles.button, { backgroundColor: 'white' }]} onPress={() => saveTemp(tempValue)}>\n              <Text style={[styles.buttonText, styles.maintainButton]}>Maintain</Text>\n            </TouchableOpacity>\n          </View>\n        </>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  appContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  temperatureDisplayContainer: {\n    alignItems: \"center\",\n    marginBottom: 20,\n  },\n  temperatureDisplay: {\n    borderRadius: 110,\n    height: 220,\n    width: 220,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: 48,\n    color: \"#04040A\",\n  },\n  temperatureText: {\n    fontSize: 48,\n    color: \"#04040A\",\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginTop: 30, // Adjust the margin top to control the spacing between button containers\n  },\n  button: {\n    paddingVertical: 10, // Adjust padding to make the buttons bigger\n    paddingHorizontal: 20,\n    marginHorizontal: 20, // Adjust horizontal margin for better spacing between buttons\n    borderWidth: 2,\n    borderColor: '#a832ff', // Neon-ish purple border color\n    shadowColor: '#a832ff', // Neon-ish purple shadow color\n    shadowOffset: { width: 0, height: 3 }, // Adjust shadow offset\n    shadowOpacity: 0.5, // Adjust shadow opacity\n    shadowRadius: 5, // Adjust shadow radius\n    elevation: 5,\n    borderRadius: 20\n  },\n  circularButton: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 60, // Make the circular button width and height same\n    height: 60,\n    borderRadius: 30, // Make border radius half of the width and height to make it circular\n    borderWidth: 2,\n    borderColor: '#a832ff', // Neon-ish purple border color\n    shadowColor: '#a832ff', // Neon-ish purple shadow color\n    shadowOffset: { width: 0, height: 3 }, // Adjust shadow offset\n    shadowOpacity: 0.5, // Adjust shadow opacity\n    shadowRadius: 5, // Adjust shadow radius\n    elevation: 5, // Android elevation for shadow effect\n    marginHorizontal: 20,\n  },\n\n  buttonText: {\n    fontSize: 24, // Adjust the font size for the button text\n    fontWeight: 'bold'\n  },\n  cold: {\n    shadowColor: \"#3737CD\",\n    shadowOffset: { width: 5, height: 10 },\n    shadowRadius: 75,\n    shadowOpacity: 1,\n  },\n  hot: {\n    shadowColor: \"#ff0000\",\n    shadowOffset: { width: 5, height: 10 },\n    shadowRadius: 75,\n    shadowOpacity: 1,\n  },\n  maintainButton: {\n    fontSize: 20, // Adjust the font size for the Maintain button text\n  },\n});\n\nexport default TemperaturesPage;\n","import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport PMPage from './PMPage';\nimport BookRoomPage from './BookRoomPage';\nimport AccountPage from './AccountPage';\nimport TemperaturesPage from './TemperaturesPage'; // Import TemperaturesPage\n\nconst Tab = createBottomTabNavigator();\n\nconst BottomTabNavigator = ({ route }) => {\n  const { employeeId, employeeName, employeePic } = route.params;\n\n  console.log(\"Employee pic:\", employeePic);\n\n  return (\n    <Tab.Navigator\n      tabBarOptions={{\n        activeTintColor: '#3498db',\n        inactiveTintColor: 'gray',\n        labelStyle: {\n          fontSize: 14,\n          fontWeight: 'bold',\n        },\n        style: {\n          backgroundColor: '#f2f2f2',\n        },\n      }}\n    >\n      <Tab.Screen\n        name=\"PM Tracking\"\n        component={PMPage}\n        initialParams={{ employeeId: employeeId, employeeName: employeeName }}\n        options={{\n          tabBarIcon: ({ color, size }) => <Icon name=\"track-changes\" size={size} color={color} />,\n        }}\n      />\n      <Tab.Screen\n        name=\"Book a Room\"\n        component={BookRoomPage}\n        options={{\n          tabBarIcon: ({ color, size }) => <Icon name=\"event-available\" size={size} color={color} />,\n        }}\n      />\n      <Tab.Screen\n        name=\"Temperatures\" // New screen name for TemperaturesPage\n        component={TemperaturesPage} // Link to TemperaturesPage component\n        initialParams={{employeeId: employeeId}}\n        options={{\n          tabBarIcon: ({ color, size }) => <Icon name=\"thermostat\" size={size} color={color} />, // Example icon\n        }}\n      />\n      <Tab.Screen\n        name=\"Account\"\n        component={AccountPage}\n        initialParams={{ employeeName: employeeName, employeePic: employeePic }}\n        options={{\n          tabBarIcon: ({ color, size }) => <Icon name=\"account-circle\" size={size} color={color} />,\n        }}\n      />\n    </Tab.Navigator>\n  );\n};\n\nexport default BottomTabNavigator;\n","import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity,Platform, TextInput, StyleSheet } from 'react-native';\nimport { Button, Card, Title, Paragraph, IconButton } from 'react-native-paper';\nimport BottomTabNavigator from './BottomTabNavigator';\nimport { useNavigation } from '@react-navigation/native';\nimport axios from 'axios';\nimport colors from './colors';  // Assuming colors.js is in the same directory\n\n\nconst LoginScreen = ({ navigation }) => {\n  const [employeeId, setEmployeeId] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [error, setError] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  // const url = 'https://capstone-cmml.onrender.com'\n  const url = 'http://localhost:3001'; // Define your API URL here\n  \n  const handleLogin = async () => {\n    try {\n      const loginData = { employeeId, password };\n      const response = await axios.post(`${url}/auth/login`, loginData);\n\n      if (employeeId === 'admin' && password === 'admin') {\n        navigation.navigate('Account', { employeeID: employeeId });\n        setIsAdmin(true);\n      }\n\n      console.log(response);\n      console.log('Login successful:', response.data);\n      setLoggedIn(true);\n      \n       // Extracting employeeId and employeeName directly from response.data\n       const { id, name: employeeName, pic: employeePic } = response.data;\n\n       // Logging the extracted values\n       console.log('Employee ID:', id);\n       console.log('Employee Name:', employeeName);\n \n       // Navigating to BottomTabNav with employeeId and employeeName as parameters\n       navigation.navigate('BottomTabNav', { employeeId: id, employeeName: employeeName, employeePic: employeePic });\n \n\n    } catch (error) {\n      console.error('Error logging in:', error);\n      setError('Incorrect user information. Please try again.');\n    }\n  };\n\n  \n\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Welcome, Glad to see you!</Text>\n      <TextInput\n        style={styles.input}\n        onChangeText={setEmployeeId}\n        value={employeeId}\n        placeholder=\"EMP ID\"\n        keyboardType=\"email-address\"\n      />\n      <TextInput\n        style={styles.input}\n        secureTextEntry\n        onChangeText={setPassword}\n        value={password}\n        placeholder=\"Password\"\n      />\n      <TouchableOpacity onPress={handleLogin} style={styles.loginButton}>\n        <Text style={styles.loginButtonText}>Login</Text>\n      </TouchableOpacity>\n      <Text style={styles.registerText}>\n        Don't have an account?{' '}\n        <Text onPress={() => navigation.navigate('Register')} style={styles.registerLink}>\n          Sign Up Now\n        </Text>\n      </Text>\n      {error !== '' && <Text style={styles.error}>{error}</Text>}\n    </View>\n  );\n};\n\n\n// Determine the background style based on the platform\nconst backgroundStyle = Platform.select({\n  web: {\n    backgroundImage: 'linear-gradient(180deg, #94B3FD 0%, #B983FF 100%)',\n  },\n  default: {},\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n    // This background should be set only if Platform.OS === 'web'\n    ...backgroundStyle,\n  },\n  title: {\n    fontSize: 26,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 30,\n  },\n  input: {\n    width: '80%',\n    padding: 16,\n    marginBottom: 10,\n    borderRadius: 25,\n    borderWidth: 1,\n    borderColor: '#fff',\n    backgroundColor: '#fff',\n    color: '#000',\n    fontSize: 16,\n  },\n  loginButton: {\n    width: '80%',\n    backgroundColor: '#ffffff',\n    padding: 16,\n    borderRadius: 25,\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  loginButtonText: {\n    fontSize: 18,\n    color: '#8E2DE2', // Adjusted to match your gradient colors\n    fontWeight: 'bold',\n  },\n  registerText: {\n    color: '#fff',\n    fontSize: 16,\n  },\n  registerLink: {\n    textDecorationLine: 'underline',\n  },\n  error: {\n    color: 'red',\n    marginTop: 10,\n  },\n});\nexport default LoginScreen;\n","import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, Platform, TextInput, StyleSheet } from 'react-native';\nimport axios from 'axios';\nimport { Button, Card, Title, IconButton } from 'react-native-paper';\n\n\nconst RegisterScreen = ({ navigation }) => {\n  const [employeeName, setEmployeeName] = useState('');\n  const [employeeId, setEmployeeId] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  // const url = 'https://capstone-cmml.onrender.com'\n  const url = 'http://localhost:3001'\n\n  const handleHome = () => {\n    navigation.navigate('Home');\n  };\n\n  const handleRegister = async () => {\n    try {\n      const registrationData = { employeeName, employeeId, password };\n      const response = await axios.post(`${url}/auth/register`, registrationData);\n      console.log('User registered successfully:', response.data);\n      navigation.navigate('Login');\n    } catch (error) {\n      console.error('Error registering user:', error);\n      setError('Registration failed. Please try again.');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Create Account</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Full Name\"\n        value={employeeName}\n        onChangeText={setEmployeeName}\n        placeholderTextColor=\"#6b7280\"\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Employee ID\"\n        value={employeeId}\n        onChangeText={setEmployeeId}\n        placeholderTextColor=\"#6b7280\"\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        secureTextEntry\n        value={password}\n        onChangeText={setPassword}\n        placeholderTextColor=\"#6b7280\"\n      />\n      <TouchableOpacity onPress={handleRegister} style={styles.button}>\n        <Text style={styles.buttonText}>Register</Text>\n      </TouchableOpacity>\n      <Text style={styles.signInText}>\n        Already have an account?{' '}\n        <Text onPress={() => navigation.navigate('Login')} style={styles.signInLink}>\n          Sign In\n        </Text>\n      </Text>\n      {error !== '' && <Text style={styles.error}>{error}</Text>}\n    </View>\n  );\n};\n\n// Determine the background style based on the platform\nconst backgroundStyle = Platform.select({\n  web: {\n    backgroundImage: 'linear-gradient(180deg, #94B3FD 0%, #B983FF 100%)',\n  },\n  default: {},\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n    ...backgroundStyle,\n  },\n  title: {\n    fontSize: 26,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 30,\n  },\n  input: {\n    width: '80%',\n    padding: 16,\n    marginBottom: 10,\n    borderRadius: 25,\n    borderWidth: 1,\n    borderColor: '#fff',\n    backgroundColor: '#fff',\n    color: '#000',\n    fontSize: 16,\n  },\n  button: {\n    width: '80%',\n    backgroundColor: '#ffffff',\n    padding: 16,\n    borderRadius: 25,\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  buttonText: {\n    fontSize: 18,\n    color: '#8E2DE2',\n    fontWeight: 'bold',\n  },\n  signInText: {\n    color: '#fff',\n    fontSize: 16,\n  },\n  signInLink: {\n    textDecorationLine: 'underline',\n  },\n  error: {\n    color: 'red',\n    marginTop: 10,\n  },\n});\n\nexport default RegisterScreen;\n","import React from 'react';\nimport { View, Text, Image, TouchableOpacity, StyleSheet, Platform } from 'react-native';\n\nconst Homepage = ({ navigation }) => {\n  const handleLoginClick = () => {\n    navigation.navigate('Login');\n  };\n\n  const handleRegisterClick = () => {\n    navigation.navigate('Register');\n  };\n\n  // Style object for container with gradient background\n  const containerStyle = Platform.select({\n    web: {\n      // For web: use backgroundImage with a horizontal gradient\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100vh',\n      width: '100%',\n      backgroundImage: 'linear-gradient(#94B3FD, #B983FF)',\n    },\n    default: {\n      // For native: use styles.container which will have LinearGradient component\n      ...styles.container,\n    },\n  });\n\n  return (\n    <View style={containerStyle}>\n      <Image\n        source={require('./images/desk-synergy.png')} // Adjust the path based on your project structure\n        style={styles.logo}\n      />\n      <Text style={styles.title}>DeskSynergy</Text>\n      <TouchableOpacity style={styles.button} onPress={handleLoginClick}>\n        <Text style={styles.buttonText}>Login</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={styles.button} onPress={handleRegisterClick}>\n        <Text style={styles.buttonText}>Sign Up</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: Platform.select({\n    web: {\n      // Web-specific gradient styling\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 16,\n      height: '100vh', // Take full height of the viewport\n      background: 'linear-gradient(to right, #94B3FD, #B983FF)',\n    },\n    default: {\n      // Native uses these styles with LinearGradient component\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 16,\n    },\n  }),\n  logo: {\n    width: 200,\n    height: 200,\n    marginBottom: 20,\n  },\n  title: {\n    fontSize: 24,\n    color: '#ffffff',\n    marginBottom: 30,\n    fontWeight: 'bold',\n  },\n  button: {\n    width: '80%',\n    backgroundColor: '#ffffff',\n    padding: 15,\n    borderRadius: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 15,\n    borderWidth: 1,\n    borderColor: '#ffffff',\n  },\n  buttonText: {\n    color: '#8E2DE2',\n    fontWeight: 'bold',\n  },\n  guestText: {\n    color: '#ffffff',\n    marginTop: 15,\n  },\n});\n\nexport default Homepage;\n","import React from 'react';\nimport { View, Text, StyleSheet, Dimensions } from 'react-native';\nimport Onboarding from 'react-native-onboarding-swiper';\nimport LottieView from 'lottie-react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nconst { width } = Dimensions.get('window');\n\nexport default function OnboardScreen() {\n  const navigation = useNavigation();\n\n  const handleDone = () => {\n    navigation.navigate('Home');\n  };\n\n  return (\n    <View style={styles.container}>\n      <Onboarding\n        onDone={handleDone}\n        onSkip={handleDone}\n        //nextLabel={handleDone}\n        containerStyles={{ paddingHorizontal: 15 }}\n        pages={[\n\n          {\n            backgroundColor: '#40E0D0',\n            image: (\n              <View style={styles.lottieContainer}>\n                <LottieView source={require('./animations/arrow.json')} autoPlay loop />\n                <Text style={styles.titleText}>Welcome to DeskSynergy</Text>\n              </View>\n            ),\n          },\n          {\n            backgroundColor: '#40E0D0',\n            \n            image: (\n              <View style={styles.lottieContainer}>\n                <LottieView source={require('./animations/happy.json')} autoPlay loop />\n                <Text style={styles.titleText}>Boost Productivity</Text>\n                <Text style={styles.smallText}>Have seamless workforce collaborataion</Text>\n              </View>\n            ),\n          },\n          {\n            backgroundColor: '#fef37c',\n            image: (\n              <View style={styles.lottieContainer}>\n                <LottieView source={require('./animations/WorkEnvironment.json')} autoPlay loop />\n                <Text style={styles.titleText}>Work Seemingly</Text>\n                <Text style={styles.smallText}>Handle office functions in one place</Text>\n              </View>\n            ),\n          },\n          {\n            backgroundColor: \"#800080\",\n            image: (\n              <View style={styles.lottieContainer}>\n                <LottieView source={require('./animations/rocket.json')} autoPlay loop />\n                <Text style={styles.titleText}>Achieve Higher Goals</Text>\n                <Text style={styles.smallText}>Manage Better, Perform Better!</Text>\n              </View>\n            ),\n          },\n          \n        ]}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n  },\n  lottieContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  titleText: {\n    marginTop: 20,\n    fontSize: 27,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  smallText: {\n    marginTop: 10, // Adjust the spacing as needed\n    fontSize: 21, // Adjust the font size as needed\n    color: 'white',\n  },\n  title: {\n    marginTop: 10,\n    fontSize: 21,\n    color: 'white',\n  }\n});","// App.js\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LoginScreen from './LoginScreen';\nimport RegisterScreen from './RegisterScreen';\nimport homepage from './homepage';\nimport PMPage from './PMPage';\nimport BottomTabNavigator from './BottomTabNavigator';\nimport BookRoomPage from './BookRoomPage';\nimport OnboardingScreen from './OnboardScreen'; // Import the OnboardingScreen component\nimport AccountPage from './AccountPage';\nimport AddProject from './AddProjectPage';\nimport AddNotification from './AddNotification';\n\n\nconst Stack = createStackNavigator();\n// const stylesCss = Asset.fromModule(require('./App.css')).uri;\n\nconst App = () => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Login\">\n        <Stack.Screen\n          name=\"Onboarding\"\n          component={OnboardingScreen}\n          options={{ headerShown: false }}\n        />\n\n        <Stack.Screen\n          name=\"Register\"\n          component={RegisterScreen}\n          options={{ headerShown: false }}\n        />\n\n        <Stack.Screen\n          name=\"Login\"\n          component={LoginScreen}\n          options={{ headerShown: false }}\n        />\n\n        <Stack.Screen\n          name=\"Home\"\n          component={homepage}\n          options={{ headerShown: false }}\n        />\n\n        <Stack.Screen\n          name=\"PMPage\"\n          component={PMPage}\n          options={{ headerShown: false }}\n        />\n\n        <Stack.Screen\n          name=\"BottomTabNav\"\n          component={BottomTabNavigator}\n          options={{ headerShown: false }}\n        />\n\n        <Stack.Screen\n          name=\"BookRoomPage\"\n          component={BookRoomPage}\n          options={{ headerShown: true }}\n        />\n\n        <Stack.Screen\n          name=\"AccountPage\"\n          component={AccountPage} // Use a WebView component for home.html\n          options={{ headerShown: true }}\n        />\n\n      <Stack.Screen\n          name=\"AddNotification\"\n          component={AddNotification} // Use a WebView component for home.html\n          options={{ headerShown: true }}\n        />  \n        \n\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default App;","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [469], () => (__webpack_require__(8378)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["styles","StyleSheet","create","container","flex","alignItems","justifyContent","padding","title","fontSize","fontWeight","marginBottom","input","width","borderWidth","borderColor","borderRadius","datePickerRow","flexDirection","dateInput","calendarButton","marginLeft","calendarText","notification","position","top","left","right","zIndex","notificationText","color","closeButton","_useState","useState","_useState2","_slicedToArray","projectName","setProjectName","_useState3","_useState4","percentageComplete","setPercentageComplete","_useState5","_useState6","team","setTeam","_useState7","_useState8","dueDate","setDueDate","_useState9","_useState10","isDatePickerVisible","setDatePickerVisibility","_useState11","visible","message","theme","_useState12","setNotification","showNotification","arguments","length","undefined","setTimeout","handleAddProject","_ref","_asyncToGenerator","teamArray","split","map","item","trim","projectData","Name","Percentage_Complete","parseFloat","Due_Date","Team","axios","post","error","apply","hideDatePicker","_jsxs","View","style","children","backgroundColor","_jsx","Text","TouchableOpacity","onPress","TextInput","placeholder","value","onChangeText","keyboardType","editable","DateTimePickerModal","isVisible","mode","onConfirm","date","toISOString","onCancel","Button","paddingVertical","paddingHorizontal","marginVertical","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","label","statusText","project","taskName","taskComplete","useEffect","console","log","isComplete","setIsComplete","onToggleSwitch","_ref2","prevValue","then","response","catch","Switch","trackColor","false","true","thumbColor","ios_backgroundColor","onValueChange","borderBottomWidth","paddingLeft","setTitle","setMessage","time","setTime","employees","setEmployees","navigation","useNavigation","handleAddNotification","notificationData","targetEmployeeIds","createdAt","navigate","Alert","header","cardUnread","cardTitle","cardMessage","cardTime","marginTop","markAsReadButton","markAsReadButtonText","textAlign","cardRead","opacity","titleRow","deleteButton","refreshButton","alignSelf","marginRight","addNotificationButton","route","notifications","setNotifications","employeeId","params","url","fetchNotifications","get","data","markAsRead","_ref3","notificationTitle","patch","n","readBy","includes","_objectSpread","concat","_toConsumableArray","_x","deleteNotification","_ref4","delete","filter","_x2","Icon","name","size","index","card","Date","toLocaleString","API_URL","Tab","createMaterialTopTabNavigator","Stack","createStackNavigator","PHASES","percentage","Math","floor","random","TasksPage","_route$params2","phase","isModalVisible","setIsModalVisible","newTaskName","setNewTaskName","newTaskPhase","setNewTaskPhase","newTaskSize","setNewTaskSize","newTaskNumEmployees","setNewTaskNumEmployees","newTaskEmployees","setNewTaskEmployees","_useState13","_useState14","employeeInputs","setEmployeeInputs","_useState15","_useState16","projectTasks","setProjectTasks","_useState17","_useState18","newProjectName","setNewProjectName","fetchTasks","find","p","tasksForPhase","Tasks","t","taskPhase","handleUpdateSampleEmployees","user_Data","user_data","new_task_name","val","convertStringToJson","val_json","JSON","parse","lines","shift","line","_line$trim$split","_line$trim$split2","_toArray","id","slice","join","parseInt","EmployeeName","stringify","jsonOutput","handleSaveTask","_ref5","taskDetails","taskSize","handleCloseModal","projectCardTitle","addButton","addButtonText","FlatList","keyExtractor","toString","renderItem","_ref6","task","phaseCardContainer","phaseCard","TaskToggle","renderTaskCard","Modal","animationType","transparent","onRequestClose","modalContainer","splitScreenContainer","leftSide","modalTitle","inputField","text","updateButton","String","numEmployees","clampedNumEmployees","max","min","Array","fill","handleNumEmployeesChange","from","_","updatedInputs","handleEmployeeInputChange","rightSide","_ref7","sampleEmployee","modalButtons","buttonWrapper","calculateProjectCompletion","numCompletedTasks","forEach","percentageCompleted","round","isNaN","renderProjectCard","num","projectCard","leftContent","projectTitle","projectSubtitle","dueDateIcon","dueDateText","taskCounter","taskIcon","taskCounterText","rightContent","CircularProgress","variant","thickness","progressCircle","percentageText","ProjectDetailsScreen","_ref8","_route$params3","chartConfig","backgroundGradientFrom","backgroundGradientTo","labelColor","barPercentage","barStyle","backgroundGradientFromOpacity","backgroundGradientToOpacity","fillShadowGradient","fillShadowGradientOpacity","formatYLabel","chartWidth","Dimensions","labels","datasets","count","count2","ScrollView","mytext","_ref9","progressBarBackground","progressBar","cardPercentage","renderPhaseCard","scrollEnabled","BarChart","yAxisLabel","verticalLabelRotation","chartStyle","AllScreen","_ref10","_useState19","_useState20","projects","setProjects","_useState21","_useState22","setError","employeeName","fetchProjects","_ref11","_ref12","OngoingScreen","_ref13","_useState23","_useState24","_ref14","filteredProjects","_ref15","CompletedScreen","_ref16","_useState25","_useState26","_ref17","_ref18","PMTopTabNavigator","_ref19","_route$params4","Navigator","Screen","component","initialParams","marginHorizontal","margin","phaseText","taskCard","completionStatus","cardText","fontFamily","borderBottomColor","modalContent","overflow","maxWidth","saveButton","cancelButton","buttonText","chart","display","percentText","separator","duedate","progressBarContainer","cardDetailText","_route$params","setOptions","headerRight","initialRouteName","headerMode","AddProjectPage","NotificationBar","contentContainerStyle","flexGrow","svgContainer","modalText","pickerContainer","pickerStyle","paddingRight","selectedRoomContainer","selectedRoomText","button","selectedRoom","setSelectedRoom","modalVisible","setModalVisible","selectedTime","setSelectedTime","fetchRoomData","room","attachRoomClickListeners","roomId","document","getElementById","addEventListener","roomName","getAttribute","onRoomClick","handleConfirmBooking","booked","updateBookingStatus","alert","cancelable","_x3","_x4","put","_x5","_x6","_x7","horizontal","xmlns","x","y","stroke","Picker","selectedValue","itemValue","Item","profileHeader","profilePic","profileName","profileEmail","actionsContainer","actionButton","actionText","detailsContainer","detailsTitle","detailItem","employeePic","Avatar","source","uri","appContainer","temperatureDisplayContainer","temperatureDisplay","temperatureText","buttonContainer","circularButton","cold","hot","maintainButton","tempValue","setTempValue","tempColor","setTempColor","empid","getTemperature","saveTemp","currentTemp","temperature","_Fragment","newTemp","createBottomTabNavigator","tabBarOptions","activeTintColor","inactiveTintColor","labelStyle","PMPage","options","tabBarIcon","BookRoomPage","TemperaturesPage","AccountPage","backgroundStyle","Platform","select","web","backgroundImage","default","loginButton","loginButtonText","registerText","registerLink","textDecorationLine","setEmployeeId","password","setPassword","setLoggedIn","setIsAdmin","handleLogin","loginData","employeeID","_response$data","pic","secureTextEntry","signInText","signInLink","setEmployeeName","handleRegister","registrationData","placeholderTextColor","background","logo","guestText","containerStyle","Image","require","OnboardScreen","handleDone","Onboarding","onDone","onSkip","containerStyles","pages","image","lottieContainer","LottieView","autoPlay","loop","titleText","smallText","NavigationContainer","OnboardingScreen","headerShown","RegisterScreen","LoginScreen","homepage","BottomTabNavigator","AddNotification","registerRootComponent","App","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","this","ns","def","current","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","g","globalThis","Function","e","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}