{"version":3,"file":"static/js/main.26af5edf.js","mappings":"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","sources":["AddProjectPage.js","TaskToggle.js","AddNotification.js","NotificationBar.js","PMPage.js","BookRoomPage.js","AccountPage.js","TemperaturesPage.js","BottomTabNavigator.js","LoginScreen.js","RegisterScreen.js","homepage.js","OnboardScreen.js","App.js","index.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, Button, StyleSheet, TouchableOpacity } from 'react-native';\nimport axios from 'axios';\nimport DateTimePickerModal from 'react-native-modal-datetime-picker'; // This is for a modal date picker\n\nconst AddProject = () => {\n  const [projectName, setProjectName] = useState('');\n  const [percentageComplete, setPercentageComplete] = useState('');\n  const [team, setTeam] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\n  const [notification, setNotification] = useState({ visible: false, message: '', theme: 'light' });\n  const API_URL = 'https://capstone-cmml.onrender.com';\n\n  const showNotification = (message, theme = 'light') => {\n    setNotification({ visible: true, message, theme });\n    setTimeout(() => {\n      setNotification({ visible: false, message: '', theme: 'light' });\n    }, 3000); // hide after 3 seconds\n  };\n\n  const handleAddProject = async () => {\n    if (!projectName || !percentageComplete || !team || !dueDate) {\n      showNotification('TextFields cannot be empty', 'red');\n      return;\n    }\n\n    try {\n      const teamArray = team.split(',').map(item => item.trim());\n      const projectData = {\n        Name: projectName,\n        Percentage_Complete: parseFloat(percentageComplete),\n        Due_Date: dueDate,\n        Team: teamArray,\n      };\n\n      await axios.post(`${API_URL}/auth/projects`, projectData);\n      showNotification('Project successfully added!', 'green');\n    } catch (error) {\n      showNotification('Project was not added!', 'red');\n    }\n  };\n\n  const showDatePicker = () => {\n    setDatePickerVisibility(true);\n  };\n\n  const hideDatePicker = () => {\n    setDatePickerVisibility(false);\n  };\n\n  const handleConfirmDate = (date) => {\n    setDueDate(date.toISOString().split('T')[0]); // Save the formatted date\n    hideDatePicker();\n  };\n\n  const handleDateChange = (event) => {\n    setDueDate(event.target.value); // Update due date from the event\n    setShowDatePicker(false); // Hide the date picker\n  };\n\n  \n  \n  return (\n    <View style={styles.container}>\n      {notification.visible && (\n        <View style={[styles.notification, { backgroundColor: notification.theme === 'red' ? '#FFCCCC' : '#CCFFCC' }]}>\n          <Text style={styles.notificationText}>{notification.message}</Text>\n          <TouchableOpacity onPress={() => setNotification({ visible: false, message: '', theme: 'light' })}>\n            <Text style={styles.closeButton}>X</Text>\n          </TouchableOpacity>\n        </View>\n      )}\n      <Text style={styles.title}>Add New Project</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Project Name\"\n        value={projectName}\n        onChangeText={setProjectName}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Percentage Complete\"\n        keyboardType=\"numeric\"\n        value={percentageComplete}\n        onChangeText={setPercentageComplete}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Team (Comma-separated)\"\n        value={team}\n        onChangeText={setTeam}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Due Date\"\n        value={dueDate}\n        onChangeText={setDueDate}\n      />\n\n<View style={styles.datePickerRow}>\n        <TextInput\n          style={[styles.input, styles.dateInput]}\n          placeholder=\"Due Date\"\n          value={dueDate}\n          onChangeText={() => {}} // The date is set by the date picker, not manual edit\n          editable={false} // Make the text input non-editable\n        />\n        <TouchableOpacity onPress={showDatePicker} style={styles.calendarButton}>\n          <Text style={styles.calendarText}>📅</Text>\n        </TouchableOpacity>\n      </View>\n\n      <DateTimePickerModal\n        isVisible={isDatePickerVisible}\n        mode=\"date\"\n        onConfirm={handleConfirmDate}\n        onCancel={hideDatePicker}\n      />\n      <Button title=\"Add Project\" onPress={handleAddProject} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  input: {\n    width: '100%',\n    marginBottom: 10,\n    borderWidth: 1,\n    borderColor: 'gray',\n    borderRadius: 5,\n    padding: 10,\n  },\n  datePickerRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '100%',\n  },\n  dateInput: {\n    flex: 1,\n  },\n  calendarButton: {\n    borderWidth: 1,\n    borderColor: 'gray',\n    borderRadius: 5,\n    padding: 10,\n    marginLeft: 5,\n  },\n  calendarText: {\n    fontSize: 18,\n  },\n  notification: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    padding: 20,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    zIndex: 1000,\n  },\n  notificationText: {\n    color: '#000',\n  },\n  closeButton: {\n    color: '#000',\n    fontWeight: 'bold',\n  },\n});\n\nexport default AddProject;\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, Switch, StyleSheet } from 'react-native';\nimport axios from 'axios';\n\nconst TaskToggle = ({ project, taskName, taskComplete }) => {\n  useEffect(() => {\n    console.log(project);\n    \n  }, []);\n\n  const [isComplete, setIsComplete] = useState(taskComplete);\n \n  const onToggleSwitch = async() => {\n    setIsComplete((prevValue) => !prevValue);\n    console.log(project)\n    await axios.post('https://capstone-cmml.onrender.com/auth/tasktoggle', {\n      project: project, \n      taskName: taskName,\n      taskComplete: !isComplete\n    })\n    .then(response => {\n      console.log(response);\n    })\n    .catch(error => {\n      console.error('Error updating task completion status:', error);\n    });\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.label}>Task Status</Text>\n      <Switch\n        trackColor={{ false: '#767577', true: '#81b0ff' }}\n        thumbColor={isComplete ? '#f5dd4b' : '#f4f3f4'}\n        ios_backgroundColor=\"#3e3e3e\"\n        onValueChange={onToggleSwitch}\n        value={isComplete}\n      />\n      <Text style={styles.statusText}>{isComplete ? 'Complete' : 'Incomplete'}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 20,\n  },\n  label: {\n    marginRight: 10,\n  },\n  statusText: {\n    marginLeft: 10,\n  },\n});\n\nexport default TaskToggle;","import React, { useState, Alert } from 'react';\nimport { View, Text, TextInput, Button, StyleSheet } from 'react-native';\nimport axios from 'axios';\nimport { useNavigation } from '@react-navigation/native';\nimport NotificationBar from './NotificationBar';\n\nconst AddNotification = () => {\n  const [title, setTitle] = useState('');\n  const [message, setMessage] = useState('');\n  const [time, setTime] = useState('');\n  const [employees, setEmployees] = useState('');\n  const navigation = useNavigation();\n  const url = 'https://capstone-cmml.onrender.com'\n\n  const handleAddNotification = async () => {\n   \n    if (!title || !message || !employees || !time) {\n      Alert.alert('Fields cannot be empty');\n      return;\n    }\n\n    try {\n      const teamArray = employees.split(',').map(item => item.trim());\n      const notificationData = {\n        title,\n        message,\n        targetEmployeeIds: teamArray,\n        createdAt: time,\n      };\n\n      await axios.post(`${url}/auth/addnotifications`, notificationData);\n      console.log('Notification sent successfully!')\n      navigation.navigate('NotificationBar')\n    } catch (error) {\n      console.error('Error adding notification:', error);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Add Notification</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Title\"\n        value={title}\n        onChangeText={setTitle}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Message\"\n        value={message}\n        onChangeText={setMessage}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Target Employee ID's (Comma-separated)\"\n        value={employees}\n        onChangeText={setEmployees}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Created At (mm/dd/yyyy)\"\n        value={time}\n        onChangeText={setTime}\n      />\n      <Button title=\"Send Notification\" onPress={handleAddNotification} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16,\n  },\n  input: {\n    height: 40,\n    width: '100%',\n    borderColor: '#3498db',\n    borderBottomWidth: 1,\n    marginBottom: 16,\n    paddingLeft: 8,\n  },\n});\n\nexport default AddNotification;\n","// Import the necessary modules\nimport React, { useState, useEffect } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport axios from 'axios';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport AddNotification from './AddNotification';\nimport { useNavigation } from '@react-navigation/native';\n\n// Define the NotificationBar component\nconst NotificationBar = ({ route }) => {\n  const [notifications, setNotifications] = useState([]);\n  const { employeeId } = route.params;\n  const navigation = useNavigation();\n  const url = 'https://capstone-cmml.onrender.com'\n\n  // Function to fetch notifications\n  const fetchNotifications = async () => {\n    try {\n      const response = await axios.get(`${url}/auth/notifications?employeeID=${employeeId}`);\n      setNotifications(response.data); // Update notifications state with fetched data\n    } catch (error) {\n      console.error('Error fetching notifications:', error);\n    }\n  };\n\n  // useEffect hook to fetch notifications when component mounts or employeeId changes\n  useEffect(() => {\n    fetchNotifications();\n  }, [employeeId]);\n\n  // Function to mark a notification as read\n  const markAsRead = async (notificationTitle) => {\n    try {\n      await axios.patch(`${url}/auth/notifications/read?title=${notificationTitle}&employeeID=${employeeId}`);\n      // Immediately reflect the change in the UI\n      setNotifications(notifications.map(n =>\n        n.title === notificationTitle && !n.readBy.includes(employeeId)\n          ? { ...n, readBy: [...n.readBy, employeeId] }\n          : n\n      ));\n    } catch (error) {\n      console.error('Error marking notification as read:', error);\n    }\n  };\n\n  // Function to delete a notification\n  const deleteNotification = async (notificationTitle) => {\n    try {\n      await axios.delete(`${url}/auth/notifications/delete?title=${notificationTitle}`);\n      // Immediately reflect the change in the UI\n      setNotifications(notifications.filter(n => n.title !== notificationTitle));\n    } catch (error) {\n      console.error('Error deleting notification:', error);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      {/* Header */}\n      <Text style={styles.header}>Notifications</Text>\n      \n      {/* Refresh Button */}\n      <TouchableOpacity onPress={fetchNotifications} style={styles.refreshButton}>\n        <Icon name=\"refresh\" size={20} color=\"#3498db\" />\n      </TouchableOpacity>\n      \n      {/* Add Notification Button */}\n      <TouchableOpacity onPress={() => navigation.navigate('AddNotification')} style={styles.addNotificationButton}>\n        <Icon name=\"add-alert\" size={30} color=\"#3498db\" />\n      </TouchableOpacity>\n      \n      {/* Render notifications */}\n      {notifications.map((notification, index) => (\n        <View key={index} style={[styles.card, notification.readBy.includes(employeeId) ? styles.cardRead : styles.cardUnread]}>\n          {/* Title and Delete Button */}\n          <View style={styles.titleRow}>\n            <Text style={styles.cardTitle}>{notification.title}</Text>\n            <TouchableOpacity onPress={() => deleteNotification(notification.title)} style={styles.deleteButton}>\n              <Icon name=\"delete\" size={24} color=\"#f00\" />\n            </TouchableOpacity>\n          </View>\n          \n          {/* Message and Time */}\n          <Text style={styles.cardMessage}>{notification.message}</Text>\n          <Text style={styles.cardTime}>{new Date(notification.createdAt).toLocaleString()}</Text>\n          \n          {/* Mark as Read Button */}\n          <TouchableOpacity onPress={() => markAsRead(notification.title)} style={styles.markAsReadButton}>\n            <Text style={styles.markAsReadButtonText}>Mark as Read</Text>\n          </TouchableOpacity>\n        </View>\n      ))}\n    </View>\n  );\n};\n\n// Styles\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#f0f0f0',\n    padding: 10,\n  },\n  header: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  cardUnread: {\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n    elevation: 3,\n  },\n  cardTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  cardMessage: {\n    fontSize: 14,\n  },\n  cardTime: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 5,\n  },\n  markAsReadButton: {\n    marginTop: 10,\n    backgroundColor: '#4CAF50',\n    padding: 10,\n    borderRadius: 5,\n  },\n  markAsReadButtonText: {\n    color: '#fff',\n    textAlign: 'center',\n  },\n  cardRead: {\n    opacity: 0.5, // Or use backgroundColor to dim the card\n  },\n  titleRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between', // This spreads out the title and the delete button on both ends\n    alignItems: 'center', // This centers them vertically in case they have different heights\n    width: '100%', // Ensure the row takes up the full width of the card\n  },\n  deleteButton: {\n    // You might want to adjust padding or margin based on your layout needs\n    padding: 5,\n    marginLeft: 10, // Add some space between the title and the button if needed\n  },\n  refreshButton: {\n    alignSelf: 'flex-end',\n    marginTop: -30,\n    marginRight: 50,\n  },\n  addNotificationButton: {\n    alignSelf: 'flex-end',\n    marginTop: -30,\n    marginRight: 10,\n    marginBottom: 5,\n  },\n});\n\nexport default NotificationBar;\n","import React, { useState, useEffect } from 'react';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport {\n  View,\n  Text,\n  FlatList,\n  TouchableOpacity,\n  StyleSheet,\n  ScrollView,\n  Modal,\n  TextInput,\n  Button,\n} from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport { useNavigation } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport axios from 'axios';\nimport { BarChart } from 'react-native-chart-kit';\nimport { Dimensions } from 'react-native';\nimport AddProjectPage from './AddProjectPage'; // Adjust the import path as needed\nimport TaskToggle from './TaskToggle'; // Import the TaskToggle component\nimport NotificationBar from './NotificationBar';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst API_URL = 'https://capstone-cmml.onrender.com'; // Define your API URL here\n\n\n\nconst Tab = createMaterialTopTabNavigator();\nconst Stack = createStackNavigator();\n\n\nconst PHASES = [\n  { name: 'Planning', percentage: Math.floor(Math.random() * 100) },\n  { name: 'Implementation', percentage: Math.floor(Math.random() * 100) },\n  { name: 'Testing', percentage: Math.floor(Math.random() * 100) },\n  { name: 'Deployment', percentage: Math.floor(Math.random() * 100) },\n];\n\nconst renderPhaseCard = (navigation, phase, projectName, project) => {\n  var count = 0, count2 = 0;\n  project.Tasks.forEach(item =>{\n    if(phase.name === item.taskPhase){\n      count++;\n    }\n\n    if(phase.name === item.taskPhase && item.taskComplete){\n      count2++;\n    }\n  })\n \n  console.log(count, count2);\n  var percentage = (count2 / count) * 100;\n\n  if(isNaN(percentage)){\n    percentage = 0;\n  }\n\n  return (\n      <TouchableOpacity\n        onPress={() => navigation.navigate('Tasks', { phase, projectName })}\n      >\n        <View style={styles.projectCard}>\n            <Text style={styles.cardTitle}>{phase.name}</Text>\n            <Text style={styles.cardText}>{percentage}% Completed</Text>\n        </View>\n      </TouchableOpacity>\n  )\n} \n\nconst PMPage = ({ route }) => {\n  const { employeeId, employeeName} = route.params;\n  console.log(employeeId, employeeName);\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    \n    navigation.setOptions({\n      headerRight: () => (\n        <View style={{ flexDirection: 'row', marginRight: 10 }}>\n          {employeeId === 'admin' && (\n            <TouchableOpacity\n              style={{ marginRight: 20 }}\n              onPress={() => navigation.navigate('AddProjectPage')}\n            >\n              <Icon name=\"add-box\" size={30} color='#a832ff' />\n            </TouchableOpacity>\n          )}\n          <TouchableOpacity\n            onPress={() => navigation.navigate('NotificationBar')}\n          >\n            <Icon name=\"notifications\" size={30} color='#a832ff' />\n          </TouchableOpacity>\n        </View>\n      ),\n    });\n  }, [navigation, employeeId]);\n\n  return (\n    <Stack.Navigator initialRouteName=\"PMTopTabNavigator\" headerMode=\"none\">\n      <Stack.Screen name=\"PMTopTabNavigator\" component={PMTopTabNavigator} initialParams={{ employeeId: employeeId, employeeName: employeeName }} />\n      <Stack.Screen name=\"ProjectDetails\" component={ProjectDetailsScreen} />\n      <Stack.Screen name=\"Tasks\" component={TasksPage} initialParams={{ employeeId: employeeId }}/>\n      <Stack.Screen name=\"AddProjectPage\" component={AddProjectPage} />\n      <Stack.Screen name=\"NotificationBar\" component={NotificationBar} initialParams={{ employeeId: employeeId }}/>\n    </Stack.Navigator>\n  );\n};\n\n\nconst renderTaskCard = (task, projectName) => {\n  // If you need to log the task, do it inside the function body before the return statement.\n  console.log('task', task);\n\n  return (\n    <View style={styles.taskCard}>\n      <Text style={styles.taskName}>Task Name: {task.taskName}</Text>\n      <Text style={styles.phase}>Phase: {task.taskPhase}</Text>\n      \n      {/* Include the TaskToggle component here */}\n      <TaskToggle project={projectName} taskName={task.taskName} taskComplete={task.taskComplete} />\n\n      <Text style={styles.completionStatus}>\n        Completion Status: {task.taskComplete ? 'Complete' : 'Incomplete'}\n      </Text>\n      <Text style={styles.employees}>\n        Employees: {task.employees ? task.employees.join(', ') : 'None'}\n      </Text>\n    </View>\n  );\n};\n\nconst TasksPage = ({ route }) => {\n  const { phase, projectName, employeeId } = route.params;\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [newTaskName, setNewTaskName] = useState('');\n  const [newTaskPhase, setNewTaskPhase] = useState('');\n  const [newTaskSize, setNewTaskSize] = useState('');\n  const [newTaskNumEmployees, setNewTaskNumEmployees] = useState(1);\n  const [newTaskEmployees, setNewTaskEmployees] = useState([]);\n  const [employeeInputs, setEmployeeInputs] = useState([\"\"]);\n\n  const [projectTasks, setProjectTasks] = useState([]);\n  const [newProjectName, setNewProjectName] = useState();\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/auth/projects`);\n        console.log(response);\n        const project = response.data.find((p) => p.Name === projectName);\n  \n        if (project) {\n          const tasksForPhase = project.Tasks.filter((t) => t.taskPhase === phase.name);\n          setProjectTasks(tasksForPhase);\n        }\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      }\n    };\n  \n    fetchTasks();\n    setNewProjectName(projectName); // Automatically set the project name\n    setNewTaskPhase(phase.name)\n  }, [phase.name, projectName]);\n\n  const handleUpdateSampleEmployees = async () => {\n    if (!newTaskName) {\n      console.log('Please enter a task name before updating sample employees.');\n      return;\n    }\n\n    try {\n      const response = await axios.get(`${API_URL}/auth/users`);\n      const user_Data = await axios.post(`${API_URL}/auth/get-suggestions.py`, {\n        user_data: response.data,\n        new_task_name: newTaskName,\n      });\n\n      const val = convertStringToJson();\n      const val_json = JSON.parse(val);\n\n      setNewTaskEmployees(val_json.map((name) => name.EmployeeName));\n\n      function convertStringToJson() {\n        const lines = user_Data.data.trim().split('\\n');\n        lines.shift();\n        const employees = lines.map((line) => {\n          const [id, ...nameParts] = line.trim().split(' ');\n          const name = nameParts.join(' ');\n          return { id: parseInt(id, 10), EmployeeName: name };\n        });\n        return JSON.stringify(employees, null, 2);\n      }\n\n      const jsonOutput = convertStringToJson(user_Data.data);\n      console.log(jsonOutput);\n    } catch (error) {\n      console.error('Error fetching sample users:', error);\n    }\n  };\n\n  const handleAddTask = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleSaveTask = async () => {\n    // Assuming you have states for task name, due date, and possibly other details\n    // Prepare the task details including the employee inputs\n    const taskDetails = {\n      project: newProjectName,\n      taskName: newTaskName,\n      taskPhase: newTaskPhase,\n      taskSize: newTaskSize, \n      employees: employeeInputs.filter(input => input.trim() !== ''), // Filter out any empty strings\n      taskSize: newTaskSize,\n      employees: employeeInputs.filter((input) => input.trim() !== ''),\n    };\n\n    try {\n      // Make the API call to submit the task details\n      // Adjust the URL and request payload according to your backend API\n       await axios.post(`${API_URL}/auth/addtask`, taskDetails);\n       console.log('Task successfully added with employees');\n\n      await axios.post(`${API_URL}/auth/addtasktoproject`, taskDetails);\n      console.log('Task successfully added to project data');\n  \n      // Handle any post-save actions, like closing the modal or clearing the form\n      setIsModalVisible(false);\n    } catch (error) {\n      console.error('Error adding task with employees:', error);\n    }\n  };\n\n  const handleCloseModal = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleNumEmployeesChange = (numEmployees) => {\n    const clampedNumEmployees = Math.max(1, Math.min(5, numEmployees));\n    setNewTaskNumEmployees(clampedNumEmployees);\n    setEmployeeInputs(\n      employeeInputs.slice(0, clampedNumEmployees).concat(Array(Math.max(clampedNumEmployees - employeeInputs.length, 0)).fill(''))\n    );\n  };\n\n  const handleEmployeeInputChange = (text, index) => {\n    const updatedInputs = [...employeeInputs];\n    updatedInputs[index] = text;\n    setEmployeeInputs(updatedInputs);\n  };\n\n  const renderEmployeeInputs = () => {\n    return Array.from({ length: newTaskNumEmployees }, (_, index) => (\n      <TextInput\n        key={index}\n        style={styles.inputField}\n        placeholder={`Employee ${index + 1}`}\n        value={employeeInputs[index]}\n        onChangeText={(text) => handleEmployeeInputChange(text, index)}\n      />\n    ));\n  };\n\n  return (\n    <View>\n      <View style={styles.header}>\n        {/* <Text style={styles.mytext}>{phase.name}</Text> */}\n        <Text style={styles.mytext}>{projectName}</Text>\n          {employeeId === 'admin' && (\n          <TouchableOpacity onPress={handleAddTask} style={styles.addButton}>\n            <Text style={styles.addButtonText}>Add Task</Text>\n          </TouchableOpacity>\n)}\n\n      </View>\n      <FlatList\n        data={projectTasks}\n        keyExtractor={(item, index) => index.toString()}\n        renderItem={({ item }) => renderTaskCard(item, projectName)}\n      />\n\n      <Modal\n        visible={isModalVisible}\n        animationType=\"slide\"\n        transparent={true}\n        onRequestClose={handleCloseModal}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.splitScreenContainer}>\n            <View style={styles.leftSide}>\n              <Text style={styles.modalTitle}>Add Task</Text>\n              <TextInput\n              style={styles.inputField}\n              placeholder=\"Project Name\"\n              value={newProjectName} // Set the value to newProjectName state\n              editable={false} // Make the TextInput non-editable\n              />\n\n              <TextInput\n                style={styles.inputField}\n                placeholder=\"Task Name\"\n                onChangeText={(text) => setNewTaskName(text)}\n              />\n              <TextInput\n                style={styles.inputField}\n                placeholder=\"Phase\"\n                onChangeText={(text) => setNewTaskPhase(text)}\n                value={newTaskPhase} // Set the value to newProjectName state\n                editable={false} // Make the TextInput non-editable\n              />\n              <TextInput\n                style={styles.inputField}\n                placeholder=\"Task Size\"\n                onChangeText={(text) => setNewTaskSize(text)}\n              />\n              <TextInput\n                style={styles.inputField}\n                placeholder=\"Number of Employees\"\n                onChangeText={(text) => setNewTaskNumEmployees(parseInt(text) || 0)}\n              />\n              <TouchableOpacity onPress={handleUpdateSampleEmployees} style={styles.updateButton}>\n                <Text style={styles.addButtonText}>Generate AI suggestions</Text>\n              </TouchableOpacity>\n              <TextInput\n                style={styles.inputField}\n                placeholder=\"Number of Employees\"\n                keyboardType=\"numeric\"\n                value={String(newTaskNumEmployees)}\n                onChangeText={(text) => handleNumEmployeesChange(parseInt(text) || 1)}\n              />\n              {renderEmployeeInputs()}\n            </View>\n            <View style={styles.rightSide}>\n              <Text style={styles.modalTitle}> AI Suggestion</Text>\n              <FlatList\n                data={newTaskEmployees}\n                keyExtractor={(item, index) => index.toString()}\n                renderItem={({ item }) => (\n                  <Text style={styles.sampleEmployee}>{item}</Text>\n                )}\n              />\n            </View>\n          </View>\n          <View style={styles.modalButtons}>\n            <View style={styles.buttonWrapper}>\n              <Button title=\"Save\" onPress={handleSaveTask} />\n            </View>\n            <View style={[styles.buttonWrapper]}>\n              <Button title=\"Cancel\" onPress={handleCloseModal} />\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n};\n\n// to calculate projectCompletion\nconst calculateProjectCompletion = (project) => {\n  let numCompletedTasks = 0;\n  project.Tasks.forEach((task) => {\n    if (task.taskComplete) {\n      numCompletedTasks++;\n    }\n  });\n\n  let percentageCompleted = Math.round((numCompletedTasks / project.Tasks.length) * 100);\n  return isNaN(percentageCompleted) ? 0 : percentageCompleted;\n};\n\nconst renderProjectCard = (navigation, project) => {\n  const teamText = project.Team ? `Team: ${project.Team.join(', ')}` : 'Team: N/A';\n  \n  //Use the project.Name to calculate the Percentage_Complete for a project, need to go through all tasks in every phase. Display that instead of Percentage_Complete. \n  var num = 0;\n  project.Tasks.forEach((val)=>{\n      console.log(val)\n      val.taskComplete ? num++ : null;\n  })\n\n  var percentage = Math.round((num/project.Tasks.length)*100);\n  \n  if(isNaN(percentage)){\n    percentage = 0;\n  }\n\n  let color = '#2ecc71'; // Default color: green\n\n  if (percentage < 35) {\n    color = '#ff5c5c'; // Red color for less than 35%\n  } else if (percentage >= 35 && percentage < 70) {\n    color = '#f1c40f'; // Yellow color for 35% to 70%\n  }\n\n  return (\n    <TouchableOpacity\n      onPress={() => navigation.navigate('ProjectDetails', { project, navigation })}\n    >\n      <View style={styles.projectCard}>\n        <View style={styles.leftContent}>\n          <Text style={styles.cardTitle}>{project.Name}</Text>\n          <Text style={styles.duedate}>Due Date: {project.Due_Date}</Text>\n          {/* <Text style={styles.cardText}>Tasks: {project.Tasks ? project.Tasks.join(', ') : 'N/A'}</Text> */}\n          <Text style={styles.cardText}>{teamText}</Text>\n        </View>\n        <View style={styles.separator}></View>\n        <View style={styles.rightContent}>\n          <Text style={styles.percentText}>Percentage: {percentage}%</Text>\n          <CircularProgress thickness='8'  variant=\"determinate\" value={percentage} color=\"secondary\"/>\n        </View>\n      </View> \n    </TouchableOpacity>\n  );\n};\n\n\n\nconst ProjectDetailsScreen = ({ route }) => {\n  const { project, navigation } = route.params;\n  \n\n  const chartConfig = {\n    backgroundGradientFrom: \"#fff\",\n    backgroundGradientTo: \"#fff\",\n    color: (opacity = 1) => `rgba(0, 0, 255, ${opacity})`,\n    labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\n    barPercentage: 0.5, // Adjust the width of the bars, default is 0.4\n    //barRadius: 5, // Adjust the corner radius of the bars\n    barStyle: {\n      borderRadius: 10, // Additional styling for the bars, if needed\n    },\n    formatYLabel: label => label + '%',\n  };\n  \n\n  const screenWidth = Dimensions.get(\"window\").width;\n  // const screenWidth = Dimensions.get(\"window\").width;\n  const chartWidth = screenWidth - 5; \n\n  const data = {\n    labels: PHASES.map(phase => phase.name), //yAxisLabel: 'Percentage Complete',\n    datasets: [{\n      data: PHASES.map(phase => {\n        var count = 0, count2 = 0;\n    \n        project.Tasks.forEach(item =>{\n          if(phase.name === item.taskPhase){\n            count++;\n          }\n      \n          if(phase.name === item.taskPhase && item.taskComplete){\n            count2++;\n          }\n        })\n    \n        var percentage = (count2 / count) * 100;\n        if(isNaN(percentage)){\n          percentage = 0;\n        }\n    \n        return percentage;\n      })\n    }]\n  };\n\n  //Calculate phase and phase percentage data by querying the backend, for the projects just like before, and setting the value for the PHASE variable.\n  console.log(project)\n\n  return (\n    <ScrollView>\n      <View>\n        <Text style={styles.mytext}>Project Phases</Text>\n        <FlatList\n          data={PHASES}\n          keyExtractor={(item) => item.name}\n          renderItem={({ item }) => renderPhaseCard(navigation, item, project.Name, project)}\n          scrollEnabled={false} // Disables scrolling for the FlatList, since it's inside a ScrollView\n        />\n        <Text style={styles.mytext}>Progress Chart</Text>\n        <BarChart\n          data={data}\n          width={chartWidth}\n          height={220}\n          yAxisLabel=\"\"\n          chartConfig={chartConfig}\n          verticalLabelRotation={0}\n          style={styles.chart}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst AllScreen = ({route}) => {\n  const navigation = useNavigation();\n  const [projects, setProjects] = useState([]);\n  const [error, setError] = useState(null);\n  const {employeeName} = route.params;\n\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/auth/assignedprojects?employeeName=${employeeName}`);\n\n      setProjects(response.data);\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n      setError('Error fetching projects');\n    }\n  };\n\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n\n  console.log(projects)\n\n  return (\n    <ScrollView>\n      <View>\n        <Text style={styles.mytext}>All Projects</Text>\n        <TouchableOpacity onPress={fetchProjects} style={{ alignSelf: 'flex-end', marginTop: -10 }}>\n          <Icon name=\"refresh\" size={20} color='#a832ff' style={{ marginRight: 20, marginTop: -20, marginBottom: 5 }} />\n        </TouchableOpacity>\n\n        <FlatList\n          style={{ flex: 1 }}\n          data={projects}\n          keyExtractor={(item) => item.Name}\n          renderItem={({ item }) => renderProjectCard(navigation, item)}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst OngoingScreen = ({ route }) => {\n  const navigation = useNavigation();\n  const [projects, setProjects] = useState([]);\n  const { employeeName } = route.params;\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/auth/assignedprojects?employeeName=${employeeName}`);\n        const filteredProjects = response.data.filter((project) => calculateProjectCompletion(project) < 100);\n        setProjects(filteredProjects);\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      }\n    };\n    fetchProjects();\n  }, []);\n\n  return (\n    <ScrollView>\n      <View>\n        <Text style={styles.mytext}>Ongoing Projects</Text>\n        <FlatList\n          data={projects}\n          keyExtractor={(item) => item.Name}\n          renderItem={({ item }) => renderProjectCard(navigation, item)}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst CompletedScreen = ({ route }) => {\n  const navigation = useNavigation();\n  const [projects, setProjects] = useState([]);\n  const { employeeName } = route.params;\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/auth/assignedprojects?employeeName=${employeeName}`);\n        const filteredProjects = response.data.filter((project) => calculateProjectCompletion(project) === 100);\n        setProjects(filteredProjects);\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      }\n    };\n    fetchProjects();\n  }, []);\n\n  return (\n    <ScrollView>\n      <View>\n        <Text style={styles.mytext}>Completed Projects</Text>\n        <FlatList\n          data={projects}\n          keyExtractor={(item) => item.Name}\n          renderItem={({ item }) => renderProjectCard(navigation, item)}\n        />\n      </View>\n    </ScrollView>\n  );\n};\nconst PMTopTabNavigator = ({ route }) => {\n  // Destructuring employeeId and employeeName from route.params\n  const { employeeId, employeeName } = route.params;\n\n  return (\n    <Tab.Navigator>\n      <Tab.Screen name=\"All\" component={AllScreen} initialParams={{ employeeName: employeeName }} />\n      <Tab.Screen name=\"Ongoing\" component={OngoingScreen} initialParams={{ employeeName: employeeName }} />\n      <Tab.Screen name=\"Completed\" component={CompletedScreen} initialParams={{ employeeName: employeeName }} />\n    </Tab.Navigator>\n  );\n};\nconst styles = StyleSheet.create({\n  // ... your existing styles\n  phaseCardContainer: {\n    backgroundColor: '#111',\n    borderRadius: 8,\n    margin: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 2,\n    flex: 1,\n  },\n  phaseCard: {\n    padding: 16,\n  },\n  // phaseTitle: {\n  //   fontSize: 18,\n  //   fontWeight: 'bold',\n  //   marginBottom: 8,\n  // },\n  phaseText: {\n    fontSize: 16,\n    color: '#555',\n  },\n  taskCard: {\n    backgroundColor: 'white',\n    padding: 10,\n    margin: 5,\n    marginLeft: 2,\n    borderRadius: 10,\n    borderWidth: 3,\n    borderColor: '#a832ff', // Neon-ish purple border color\n    marginBottom: 12,\n  },\n  taskName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  phase: {\n    color: '#555',\n    marginBottom: 8,\n  },\n  completionStatus: {\n    fontWeight: 'bold',\n    fontSize: 16,\n    color: '#2ecc71',\n  },\n  projectCard: {\n    backgroundColor: 'white',\n    padding: 10,\n    margin: 5,\n    marginLeft: 2,\n    borderRadius: 10,\n    borderWidth: 3,\n    borderColor: '#a832ff', // Neon-ish purple border color\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 12,\n  },\n  \n  \n  cardTitle: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    fontFamily: 'sans-serif'\n  },\n  cardText: {\n    fontSize: 14,\n    fontFamily: 'sans-serif',\n    marginBottom: 6,\n    color: '#000000'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    backgroundColor: '#fff',\n    borderBottomWidth: 1,\n    borderBottomColor: '#ddd',\n  },\n  addButton: {\n    backgroundColor: '#3498db',\n    padding: 10,\n    borderRadius: 5,\n  },\n  updateButton: {\n    backgroundColor: '#2ecc71', // Green background color\n    padding: 12,\n    borderRadius: 8,\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  addButtonText: {\n    color: '#ffffff',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)', // Semi-transparent black background\n  },\n  modalContent: {\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    overflow: 'hidden', // Ensure border-radius works as expected\n    width: '80%', // Adjust the width as needed\n    maxWidth: 400, // Maximum width for the modal\n    elevation: 5,\n  },\n  modalTitle: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    padding: 4,\n    backgroundColor: '#3498db', // Header background color\n    color: '#fff', // Header text color\n    textAlign: 'center',\n  },\n  inputField: {\n    height: 40,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingHorizontal: 10,\n    borderRadius: 5,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between', // or 'space-around' based on your preference\n    marginHorizontal: 20, // Adjust the margin as needed\n    marginTop: 20,\n    width: \"150%\"\n  },\n \n  saveButton: {\n    backgroundColor: '#3498db',\n    padding: 12,\n    borderRadius: 8,\n    marginRight: 10, // Add margin to the right of \"Save\" button\n  },\n\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 10,\n    marginBottom: 10,\n    width: \"150%\" \n  },\n  buttonWrapper: {\n    flex: 2,\n    marginHorizontal: 10, // Add margin to each button\n    width: \"100px\",\n    backgroundColor: 'red'\n  },\n  cancelButton: {\n    padding: 12,\n    borderRadius: 8,\n    marginLeft: 10, // Add margin to the left of \"Cancel\" button\n  },\n  buttonText: {\n    color: '#ffffff',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n\n  splitScreenContainer: {\n    flexDirection: 'row',\n    flex: 1,\n  },\n  leftSide: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#f0f0f0',\n  },\n  rightSide: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#e0e0e0',\n  },\n  sampleEmployee: {\n    fontSize: 16,\n    marginBottom: 10,\n  },\n  employees: {\n    fontSize: 16,\n    color: '#555',\n    marginBottom: 8,\n  },\n\n  mytext: {\n    fontWeight: 'bold',\n    fontSize: 15,\n    margin: 5,\n    marginRight: 5\n  },\n\n  // Add the new styles\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 10,\n  },\n  addButton: {\n    backgroundColor: '#3498db',\n    padding: 10,\n    borderRadius: 5,\n  },\n  addButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  phaseCardContainer: {\n    padding: 10,\n  },\n  phaseCard: {\n    backgroundColor: '#ecf0f1',\n    padding: 20,\n    borderRadius: 10,\n  },\n  phaseTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    fontFamily: 'AvenirNext-BoldItalic'\n  },\n  phaseText: {\n    marginTop: 10,\n    color: '#3498db',\n  },\n\n  taskName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  phase: {\n    marginVertical: 5,\n  },\n  completionStatus: {\n    marginVertical: 5,\n    color: '#3498db',\n  },\n  employees: {\n    marginVertical: 5,\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  splitScreenContainer: {\n    flexDirection: 'row',\n    width: '80%',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    overflow: 'hidden',\n  },\n  leftSide: {\n    padding: 20,\n    width: '60%',\n  },\n  rightSide: {\n    padding: 20,\n    width: '40%',\n    backgroundColor: '#ecf0f1',\n  },\n  inputField: {\n    borderWidth: 1,\n    borderColor: '#bdc3c7',\n    borderRadius: 5,\n    padding: 10,\n    marginVertical: 5,\n  },\n  updateButton: {\n    backgroundColor: '#3498db',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10,\n  },\n  sampleEmployee: {\n    marginBottom: 5,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    marginTop: 20,\n  },\n  chart: {\n    marginTop: 10, // Add margin top\n    marginBottom: 10,\n    borderRadius: 20, // Add border radius\n    borderWidth: 2, // Add border width if needed\n    borderColor: '#000', // Add border color if needed\n  },\n  \n  leftContent: {\n    flex: 1,\n  },\n  rightContent: {\n    marginLeft: 10,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 5,\n    marginBottom: 5,\n  },\n  percentText:{\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  separator: {\n    width: 1, // Width of the separator line\n    height: '80%', // Height of the separator line, adjust as needed\n    backgroundColor: '#888', // Grey color of the separator line\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 5,\n    marginBottom: 5,\n    shadowColor: '#000', // Color of the shadow\n    shadowOffset: {\n      width: 0, // No horizontal shadow offset\n      height: 3, // Adjust the vertical shadow offset\n    },\n    shadowOpacity: 0.6, // Opacity of the shadow\n    shadowRadius: 3, // Radius of the shadow\n  },\n\n  duedate:{\n    color: '#FF5C5C',\n    fontWeight: 'bold',\n    marginBottom: 8,\n  }\n  \n\n});\n\nexport default PMPage;","import React, { useState, useEffect } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TouchableOpacity,\n  Alert,\n  Modal,\n  Picker,\n  Button,\n  ScrollView,\n} from 'react-native';\nimport axios from 'axios';\n\nconst BookRoomPage = () => {\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [selectedTime, setSelectedTime] = useState('');\n  const [notification, setNotification] = useState({ visible: false, message: '', theme: 'light' });\n  const API_URL = 'https://capstone-cmml.onrender.com';\n  \n  const showNotification = (message, theme = 'light') => {\n    setNotification({ visible: true, message, theme });\n    setTimeout(() => {\n      setNotification({ visible: false, message: '', theme: 'light' });\n    }, 3000); // hide after 3 seconds\n  };\n\n  const onRoomClick = (roomId) => {\n    console.log('room clicked');\n    var roomName = document.getElementById(roomId).getAttribute('data-room');\n    setSelectedRoom(roomName);\n    setModalVisible(true);\n  };\n\n  // method to check if room is available or not\n  const fetchRoomData = async (room, time) => {\n    try {\n      const response = await axios.get(`${API_URL}/auth/rooms/${room}/times/${time}`);\n      console.log(response.data);\n\n      // Return the relevant data, e.g., response.data.booked\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching ${room} data:`, error);\n      // Handle error appropriately\n      return false; // Return false in case of an error\n    }\n  };\n\n  const attachRoomClickListeners = () => {\n    const rooms = [\n      'meeting-room-1',\n      'meeting-room-2',\n      'conference-room',\n      'cafeteria',\n      'meeting-room-3',\n      'meeting-room-4',\n      'open-workspace',\n      'meeting-room-5',\n      'meeting-room-6',\n      'meeting-room-7',\n    ];\n\n    rooms.forEach((roomId) => {\n      const roomElement = document.getElementById(roomId);\n      roomElement.addEventListener('click', () => onRoomClick(roomId));\n    });\n  };\n\n  useEffect(() => {\n    attachRoomClickListeners();\n  }, []);\n\n  const handleConfirmBooking = async (room, time) => {\n    try {\n      const { booked } = await fetchRoomData(room, time);\n\n      if (booked) {\n        console.log('Room is available for booking at this time');\n        setModalVisible(false);\n        await updateBookingStatus(room, time, false);\n        showNotification(`You have successfully booked ${room} for ${time}!`, 'green');\n\n        // Set a timeout to revert booking status after 1 minute\n        setTimeout(async () => {\n        await updateBookingStatus(room, time, true); // Revert to available\n        console.log(`Booking status reverted for ${room} at ${time}`);\n      }, 60000); // 60000 milliseconds = 1 minute\n\n\n      } else {\n        console.log('Not available for this time');\n        setModalVisible(false);\n        showNotification(`Booking UnSuccessful for ${room} at ${time}. Please book another timeslot!`, 'red');\n        Alert.alert(\n          'Booking UnSuccessful',\n          'Room is not available for booking at this time.',\n          [{ text: 'OK', onPress: () => console.log('OK Pressed') }],\n          { cancelable: false }\n        );\n      }\n    } catch (error) {\n      console.error('Error handling booking:', error);\n      showNotification('An error occurred while processing your booking. Please try again.', 'red');\n    }\n  };\n\n // Update to include a 'booked' parameter to control booking status\nconst updateBookingStatus = async (room, time, booked) => {\n  try {\n    // Update the request to reflect the desired status based on the 'booked' parameter\n    await axios.put(`${API_URL}/auth/rooms/${room}/times/${time}`, { booked });\n  } catch (error) {\n    console.error(`Error updating booking status for ${room} at ${time}:`, error);\n  }\n};\n  return (\n    <ScrollView\n      style={{ flex: 1 }}\n      horizontal={true}\n      contentContainerStyle={styles.contentContainerStyle}\n    >\n      <View style={styles.svgContainer}>\n        {/* SVG floor plan */}\n        <svg width=\"800\" height=\"600\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect x=\"10\" y=\"10\" width=\"780\" height=\"580\" fill=\"lightgrey\" stroke=\"black\" stroke-width=\"2\"/>\n\n\n<rect id=\"meeting-room-1\" data-room=\"Meeting Room 1\" x=\"20\" y=\"20\" width=\"150\" height=\"100\" fill=\"lightblue\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"30\" y=\"70\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 1</text>\n\n<rect id=\"meeting-room-2\" data-room=\"Meeting Room 2\" x=\"20\" y=\"130\" width=\"150\" height=\"100\" fill=\"lightblue\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"30\" y=\"180\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 2</text>\n\n<rect id=\"conference-room\" data-room=\"Conference Room\" x=\"180\" y=\"20\" width=\"250\" height=\"150\" fill=\"lightgreen\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"190\" y=\"95\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Conference Room</text>\n\n<rect id=\"cafeteria\" data-room=\"Cafeteria\" x=\"450\" y=\"20\" width=\"150\" height=\"100\" fill=\"peachpuff\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"460\" y=\"70\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Cafeteria</text>\n\n<rect id=\"meeting-room-3\" data-room=\"Meeting Room 3\" x=\"620\" y=\"20\" width=\"150\" height=\"100\" fill=\"lightcoral\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"630\" y=\"70\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 3</text>\n\n<rect id=\"meeting-room-4\" data-room=\"Meeting Room 4\" x=\"620\" y=\"130\" width=\"150\" height=\"100\" fill=\"lightcoral\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"630\" y=\"180\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 4</text>\n\n<rect id=\"open-workspace\" data-room=\"Open Workspace\" x=\"180\" y=\"200\" width=\"400\" height=\"150\" fill=\"khaki\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"190\" y=\"275\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Open Workspace</text>\n\n<rect id=\"meeting-room-5\" data-room=\"Meeting Room 5\" x=\"20\" y=\"450\" width=\"150\" height=\"100\" fill=\"lightcoral\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"30\" y=\"490\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 5</text>\n\n<rect id=\"meeting-room-6\" data-room=\"Meeting Room 6\" x=\"200\" y=\"450\" width=\"150\" height=\"100\" fill=\"lightcoral\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"210\" y=\"490\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 6</text>\n\n<rect id=\"meeting-room-7\" data-room=\"Meeting Room 7\" x=\"380\" y=\"450\" width=\"150\" height=\"100\" fill=\"lightcoral\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"390\" y=\"490\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 7</text>\n        </svg>\n\n\n        {/* Modal for Booking */}\n        <Modal\n          animationType=\"slide\"\n          transparent={true}\n          visible={modalVisible}\n          onRequestClose={() => {\n            setModalVisible(!modalVisible);\n          }}\n        >\n          <View style={styles.modalContainer}>\n            <Text style={styles.modalText}>Room Name: {selectedRoom}</Text>\n            <Text>Select Time:</Text>\n            <View style={styles.pickerContainer}>\n              <Picker\n                selectedValue={selectedTime}\n                onValueChange={(itemValue) => setSelectedTime(itemValue)}\n                style={styles.pickerStyle}\n              >\n                 <Picker.Item label=\"9:00 AM - 10:00 AM\" value=\"9:00 AM - 10:00 AM\" />\n                <Picker.Item label=\"10:00 AM - 11:00 AM\" value=\"10:00 AM - 11:00 AM\" />\n                <Picker.Item label=\"11:00 AM - 12:00 PM\" value=\"11:00 AM - 12:00 PM\" />\n                <Picker.Item label=\"12:00 PM - 1:00 PM\" value=\"12:00 PM - 1:00 PM\" />\n                <Picker.Item label=\"1:00 PM - 2:00 PM\" value=\"1:00 PM - 2:00 PM\" />\n                <Picker.Item label=\"2:00 PM - 3:00 PM\" value=\"2:00 PM - 3:00 PM\" />\n                <Picker.Item label=\"3:00 PM - 4:00 PM\" value=\"3:00 PM - 4:00 PM\" />\n                <Picker.Item label=\"4:00 PM - 5:00 PM\" value=\"4:00 PM - 5:00 PM\" />\n            \n              </Picker>\n            </View>\n            <Button title=\"Confirm Booking\" onPress={() => handleConfirmBooking(selectedRoom, selectedTime)} />\n          </View>\n        </Modal>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  contentContainerStyle: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  svgContainer: {\n    width: 800, // Width of your SVG\n    height: 600, // Height of your SVG\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  // Add other styles here as previously defined\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    margin: 10,\n  },\n  modalText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: 'white',\n  },\n  pickerContainer: {\n    width: '100%',\n    marginBottom: 10,\n  },\n  pickerStyle: {\n    height: 50,\n    width: '100%',\n    backgroundColor: 'white',\n    color: 'black',\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: 'gray',\n    paddingLeft: 10,\n    paddingRight: 10,\n  },\n  selectedRoomContainer: {\n    marginTop: 16,\n  },\n  selectedRoomText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'green',\n  },\n  button: {\n    marginTop: 8,\n    backgroundColor: 'blue',\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n  },\n  notification: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    padding: 20,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    zIndex: 1000,\n  },\n  notificationText: {\n    color: '#000',\n  },\n  closeButton: {\n    color: '#000',\n    fontWeight: 'bold',\n  },\n});\n\nexport default BookRoomPage;","import React from 'react';\nimport { Image, View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { Avatar } from 'react-native-paper';\n\nconst AccountPage = ({route}) => {\n  const navigation = useNavigation();\n  const {employeeName, employeePic} = route.params;\n  console.log(employeePic)\n\n  const handleLogout = () => {\n    navigation.navigate('Home');\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.header}>Account Page</Text>\n\n      <View style={styles.contentContainer}>\n        <View style={styles.section}>\n          <Text style={styles.sectionTitle}>User Information</Text>\n          <Text>Email: {employeeName}@deskSynergy.com</Text>\n          {/* Add more user-related information here */}\n        </View>\n\n        <View style={styles.avatarContainer}>\n          <Avatar.Image\n            size={90}\n            // source={{ uri: 'https://avataaars.io/?avatarStyle=Transparent&topType=LongHairStraight&accessoriesType=Blank&hairColor=BrownDark&facialHairType=Blank&clotheType=BlazerShirt&eyeType=Default&eyebrowType=Default&mouthType=Default&skinColor=Light' }}\n            source={{ uri: employeePic }}\n\n          />\n        </View>\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.sectionTitle}>Account Actions</Text>\n        <TouchableOpacity style={styles.button}>\n          <Text style={styles.buttonText}>Change Password</Text>\n        </TouchableOpacity>\n        <TouchableOpacity style={styles.logoutButton} onPress={handleLogout}>\n          <Text style={styles.buttonText}>Logout</Text>\n        </TouchableOpacity>\n        {/* Add more account-related actions here */}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n  contentContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 16,\n  },\n  header: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16,\n  },\n  section: {\n    flex: 1,\n    marginRight: 16,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  avatarContainer: {\n    marginRight: 20,\n    marginTop: -10,\n  },\n  button: {\n    backgroundColor: '#3498db',\n    padding: 12,\n    borderRadius: 8,\n    marginTop: 8,\n  },\n  logoutButton: {\n    backgroundColor: 'red',\n    padding: 12,\n    borderRadius: 8,\n    marginTop: 8,\n  },\n  buttonText: {\n    color: '#ffffff',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n});\n\nexport default AccountPage;\n","import React, { useState, useEffect } from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\nimport axios from \"axios\";\n\nconst TemperaturesPage = ({ route }) => {\n  const [tempValue, setTempValue] = useState(10);\n  const [tempColor, setTempColor] = useState(\"cold\");\n  const empid = route.params.employeeId;\n\n  useEffect(() => {\n    getTemperature();\n  }, []);\n\n  const url = 'https://capstone-cmml.onrender.com'\n\n  const getTemperature = async () => {\n    try {\n      const response = await axios.get(`${url}/auth/temperature`);\n      setTempValue(response.data);\n      if (response.data >= 15) {\n        setTempColor(\"hot\");\n      } else {\n        setTempColor(\"cold\");\n      }\n    } catch (error) {\n      console.error(`Error fetching temperature: ${error}`);\n    }\n  };\n\n  const increaseTemp = () => {\n    if (tempValue < 30) {\n      const newTemp = tempValue + 1;\n      setTempValue(newTemp);\n      if (newTemp > 14) {\n        setTempColor(\"hot\");\n      }\n    }\n  };\n\n  const decreaseTemp = () => {\n    if (tempValue > 1) {\n      const newTemp = tempValue - 1;\n      setTempValue(newTemp);\n      if (newTemp < 15) {\n        setTempColor(\"cold\");\n      }\n    }\n  };\n\n  const saveTemp = async (currentTemp) => {\n    try {\n      const response = await axios.post(`${url}/savetemperature`, { temperature: currentTemp });\n      setTempValue(response.data.temperature);\n    } catch (error) {\n      console.error(`Error saving temperature: ${error}`);\n    }\n  };\n\n  return (\n    <View style={styles.appContainer}>\n      <View style={styles.temperatureDisplayContainer}>\n        <View style={[styles.temperatureDisplay, tempColor === \"hot\" ? styles.hot : styles.cold]}>\n          <Text style={styles.temperatureText}>{tempValue}</Text>\n        </View>\n      </View>\n      {empid === \"admin\" && (\n        <>\n          <View style={styles.buttonContainer}>\n            <TouchableOpacity style={[styles.circularButton, { backgroundColor: 'white' }]} onPress={increaseTemp}>\n              <Text style={styles.buttonText}>+</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={[styles.circularButton, { backgroundColor: 'white' }]} onPress={decreaseTemp}>\n              <Text style={styles.buttonText}>-</Text>\n            </TouchableOpacity>\n          </View>\n          <View style={styles.buttonContainer}>\n            <TouchableOpacity style={[styles.button, { backgroundColor: 'white' }]} onPress={() => saveTemp(tempValue)}>\n              <Text style={[styles.buttonText, styles.maintainButton]}>Maintain</Text>\n            </TouchableOpacity>\n          </View>\n        </>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  appContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  temperatureDisplayContainer: {\n    alignItems: \"center\",\n    marginBottom: 20,\n  },\n  temperatureDisplay: {\n    borderRadius: 110,\n    height: 220,\n    width: 220,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: 48,\n    color: \"#04040A\",\n  },\n  temperatureText: {\n    fontSize: 48,\n    color: \"#04040A\",\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginTop: 30, // Adjust the margin top to control the spacing between button containers\n  },\n  button: {\n    paddingVertical: 10, // Adjust padding to make the buttons bigger\n    paddingHorizontal: 20,\n    marginHorizontal: 20, // Adjust horizontal margin for better spacing between buttons\n    borderWidth: 2,\n    borderColor: '#a832ff', // Neon-ish purple border color\n    shadowColor: '#a832ff', // Neon-ish purple shadow color\n    shadowOffset: { width: 0, height: 3 }, // Adjust shadow offset\n    shadowOpacity: 0.5, // Adjust shadow opacity\n    shadowRadius: 5, // Adjust shadow radius\n    elevation: 5,\n    borderRadius: 20\n  },\n  circularButton: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 60, // Make the circular button width and height same\n    height: 60,\n    borderRadius: 30, // Make border radius half of the width and height to make it circular\n    borderWidth: 2,\n    borderColor: '#a832ff', // Neon-ish purple border color\n    shadowColor: '#a832ff', // Neon-ish purple shadow color\n    shadowOffset: { width: 0, height: 3 }, // Adjust shadow offset\n    shadowOpacity: 0.5, // Adjust shadow opacity\n    shadowRadius: 5, // Adjust shadow radius\n    elevation: 5, // Android elevation for shadow effect\n    marginHorizontal: 20,\n  },\n\n  buttonText: {\n    fontSize: 24, // Adjust the font size for the button text\n    fontWeight: 'bold'\n  },\n  cold: {\n    shadowColor: \"#3737CD\",\n    shadowOffset: { width: 5, height: 10 },\n    shadowRadius: 75,\n    shadowOpacity: 1,\n  },\n  hot: {\n    shadowColor: \"#ff0000\",\n    shadowOffset: { width: 5, height: 10 },\n    shadowRadius: 75,\n    shadowOpacity: 1,\n  },\n  maintainButton: {\n    fontSize: 20, // Adjust the font size for the Maintain button text\n  },\n});\n\nexport default TemperaturesPage;\n","import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport PMPage from './PMPage';\nimport BookRoomPage from './BookRoomPage';\nimport AccountPage from './AccountPage';\nimport TemperaturesPage from './TemperaturesPage'; // Import TemperaturesPage\n\nconst Tab = createBottomTabNavigator();\n\nconst BottomTabNavigator = ({ route }) => {\n  const { employeeId, employeeName, employeePic } = route.params;\n\n  console.log(\"Employee pic:\", employeePic);\n\n  return (\n    <Tab.Navigator\n      tabBarOptions={{\n        activeTintColor: '#3498db',\n        inactiveTintColor: 'gray',\n        labelStyle: {\n          fontSize: 14,\n          fontWeight: 'bold',\n        },\n        style: {\n          backgroundColor: '#f2f2f2',\n        },\n      }}\n    >\n      <Tab.Screen\n        name=\"PM Tracking\"\n        component={PMPage}\n        initialParams={{ employeeId: employeeId, employeeName: employeeName }}\n        options={{\n          tabBarIcon: ({ color, size }) => <Icon name=\"track-changes\" size={size} color={color} />,\n        }}\n      />\n      <Tab.Screen\n        name=\"Book a Room\"\n        component={BookRoomPage}\n        options={{\n          tabBarIcon: ({ color, size }) => <Icon name=\"event-available\" size={size} color={color} />,\n        }}\n      />\n      <Tab.Screen\n        name=\"Temperatures\" // New screen name for TemperaturesPage\n        component={TemperaturesPage} // Link to TemperaturesPage component\n        initialParams={{employeeId: employeeId}}\n        options={{\n          tabBarIcon: ({ color, size }) => <Icon name=\"thermostat\" size={size} color={color} />, // Example icon\n        }}\n      />\n      <Tab.Screen\n        name=\"Account\"\n        component={AccountPage}\n        initialParams={{ employeeName: employeeName, employeePic: employeePic }}\n        options={{\n          tabBarIcon: ({ color, size }) => <Icon name=\"account-circle\" size={size} color={color} />,\n        }}\n      />\n    </Tab.Navigator>\n  );\n};\n\nexport default BottomTabNavigator;\n","import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, TextInput, StyleSheet } from 'react-native';\nimport { Button, Card, Title, Paragraph, IconButton } from 'react-native-paper';\nimport BottomTabNavigator from './BottomTabNavigator';\nimport { useNavigation } from '@react-navigation/native';\nimport axios from 'axios';\nimport colors from './colors';  // Assuming colors.js is in the same directory\n\n\nconst COLORS = {\n  primary: '#075eec',\n  secondary: '#222',\n  white: '#fff',\n};\n\nconst LoginScreen = ({ navigation }) => {\n  const [employeeId, setEmployeeId] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [error, setError] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const url = 'https://capstone-cmml.onrender.com'\n  \n  const handleLogin = async () => {\n    try {\n      const loginData = { employeeId, password };\n      const response = await axios.post(`${url}/auth/login`, loginData);\n\n      if (employeeId === 'admin' && password === 'admin') {\n        navigation.navigate('Account', { employeeID: employeeId });\n        setIsAdmin(true);\n      }\n\n      console.log(response);\n      console.log('Login successful:', response.data);\n      setLoggedIn(true);\n      \n       // Extracting employeeId and employeeName directly from response.data\n       const { id, name: employeeName, pic: employeePic } = response.data;\n\n       // Logging the extracted values\n       console.log('Employee ID:', id);\n       console.log('Employee Name:', employeeName);\n \n       // Navigating to BottomTabNav with employeeId and employeeName as parameters\n       navigation.navigate('BottomTabNav', { employeeId: id, employeeName: employeeName, employeePic: employeePic });\n \n\n    } catch (error) {\n      console.error('Error logging in:', error);\n      setError('Incorrect user information. Please try again.');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n\n    {/* Icon added above the Card */}\n    <IconButton\n        icon=\"login-variant\"\n        color={COLORS.primary}\n        size={70}\n        onPress={() => console.log('Icon pressed')}\n        style={styles.icon}\n      />\n\n      <Card style={styles.card}>\n        <Card.Content>\n          <Title style={styles.title}>Login</Title>\n          <Paragraph style={styles.subtitle}>Manage your workspace here</Paragraph>\n\n          <TextInput\n            autoCapitalize=\"none\"\n            autoCorrect={false}\n            keyboardType=\"email-address\"\n            onChangeText={(email) => setEmployeeId(email)}\n            placeholder=\"Email address\"\n            placeholderTextColor=\"#6b7280\"\n            style={styles.inputControl}\n            value={employeeId}\n          />\n\n          <TextInput\n            autoCorrect={false}\n            onChangeText={(pwd) => setPassword(pwd)}\n            placeholder=\"Password\"\n            placeholderTextColor=\"#6b7280\"\n            style={styles.inputControl}\n            secureTextEntry={true}\n            value={password}\n          />\n\n          <Button\n            mode=\"contained\"\n            onPress={handleLogin}\n            style={styles.btn}\n            labelStyle={styles.btnText}\n          >\n            Sign in\n          </Button>\n\n          <TouchableOpacity onPress={() => navigation.navigate('Register')} style={styles.formFooter}>\n            <Text style={styles.formFooterText}>\n              Don't have an account? <Text style={styles.formFooterLink}>Sign up</Text>\n            </Text>\n          </TouchableOpacity>\n\n          {error !== '' && <Text style={styles.errorMessage}>{error}</Text>}\n        </Card.Content>\n      </Card>\n\n      \n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#e8ecf4',\n  },\n  card: {\n    width: '80%',\n    padding: 16,\n    borderRadius: 12,\n    backgroundColor: '#fff',\n    elevation: 4,\n    borderWidth: 3,\n    borderColor: '#a832ff', // Neon-ish purple border color\n    height: '65%',\n  },\n  title: {\n    fontSize: 27,\n    fontWeight: '700',\n    color: COLORS.secondary,\n    marginBottom: 6,\n    textAlign: 'center',\n  },\n  subtitle: {\n    fontSize: 15,\n    fontWeight: '500',\n    color: '#929292',\n    textAlign: 'center',\n    marginBottom: 24,\n  },\n  inputControl: {\n    height: 44,\n    backgroundColor: '#f1f5f9',\n    marginBottom: 16,\n    paddingHorizontal: 16,\n    borderRadius: 12,\n    fontSize: 15,\n    fontWeight: '500',\n    color: COLORS.secondary,\n  },\n  btn: {\n    borderRadius: 8,\n    marginBottom: 24,\n    backgroundColor: COLORS.primary,\n  },\n  btnText: {\n    fontSize: 18,\n    lineHeight: 26,\n    fontWeight: '600',\n    color: COLORS.white,\n  },\n  formFooter: {\n    marginTop: 'auto',\n    alignItems: 'center',\n  },\n  formFooterText: {\n    fontSize: 17,\n    fontWeight: '600',\n    color: COLORS.secondary,\n    textAlign: 'center',\n    letterSpacing: 0.15,\n  },\n  formFooterLink: {\n    textDecorationLine: 'underline',\n  },\n  errorMessage: {\n    color: COLORS.primary,\n    marginTop: 10,\n  },\n  icon: {\n    position: 'absolute',\n    top: 30,\n    right: 135,\n  },  \n});\n\nexport default LoginScreen;\n","import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, TextInput, StyleSheet } from 'react-native';\nimport axios from 'axios';\nimport { Button, Card, Title, IconButton } from 'react-native-paper';\n\nconst COLORS = {\n  primary: '#007aff',\n  background: '#fff',\n  text: '#222',\n  error: 'red',\n};\n\nconst RegisterScreen = ({ navigation }) => {\n  const [employeeName, setEmployeeName] = useState('');\n  const [employeeId, setEmployeeId] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const url = 'https://capstone-cmml.onrender.com'\n\n  const handleHome = () => {\n    navigation.navigate('Home');\n  };\n\n  const handleRegister = async () => {\n    try {\n      const registrationData = { employeeName, employeeId, password };\n      const response = await axios.post(`${url}/auth/register`, registrationData);\n      console.log('User registered successfully:', response.data);\n      navigation.navigate('Login');\n    } catch (error) {\n      console.error('Error registering user:', error);\n      setError('Registration failed. Please try again.');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      {/* Icon added above the Card */}\n      <IconButton\n        icon=\"account-check-outline\"\n        color={COLORS.primary}\n        size={70}\n        onPress={() => console.log('Icon pressed')}\n        style={styles.icon}\n      />\n\n      <Card style={styles.card}>\n        <Card.Content>\n          <Text style={styles.title}>Registration</Text>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Employee Name\"\n            value={employeeName}\n            onChangeText={(text) => setEmployeeName(text)}\n          />\n          <TextInput\n            style={styles.input}\n            placeholder=\"Employee ID\"\n            value={employeeId}\n            onChangeText={(text) => setEmployeeId(text)}\n          />\n          <TextInput\n            style={styles.input}\n            placeholder=\"Password\"\n            secureTextEntry\n            value={password}\n            onChangeText={(text) => setPassword(text)}\n          />\n          <TouchableOpacity style={styles.btn} onPress={handleRegister}>\n            <Text style={styles.btnText}>Register</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.btn} onPress={handleHome}>\n            <Text style={styles.btnText}>Home</Text>\n          </TouchableOpacity>\n          {error !== '' && <Text style={styles.errorMessage}>{error}</Text>}\n        </Card.Content>\n      </Card>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#e8ecf4',\n  },\n  icon: {\n    position: 'absolute',\n    top: 30,\n    right: 135,\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    alignSelf: 'center',\n    color: COLORS.text,\n    marginBottom: 20,\n  },\n  input: {\n    marginBottom: 16,\n    height: 44,\n    width: '100%', // Changed width to 100%\n    backgroundColor: '#f1f5f9',\n    paddingHorizontal: 16,\n    borderRadius: 12,\n    fontSize: 15,\n    fontWeight: '500',\n    color: COLORS.text,\n    borderColor: COLORS.primary,\n    borderBottomWidth: 1,\n  },\n  btn: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 8,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderWidth: 1,\n    backgroundColor: COLORS.primary,\n    borderColor: COLORS.primary,\n    marginBottom: 16,\n    width: '100%', // Changed width to 100%\n  },\n  btnText: {\n    fontSize: 17,\n    lineHeight: 24,\n    fontWeight: '600',\n    color: COLORS.background,\n  },\n  errorMessage: {\n    color: COLORS.error,\n    marginTop: 10,\n  },\n  card: {\n    padding: 5,\n    borderWidth: 3,\n    borderColor: '#a832ff', // Neon-ish purple border color\n  },\n});\n\nexport default RegisterScreen;\n","import React from 'react';\nimport { View, Text, Image, TouchableOpacity, StyleSheet } from 'react-native';\n\nconst COLORS = {\n  primary: '#075eec', // Adjusted primary color for consistency\n  background: '#e8ecf4', // Adjusted background color for consistency\n  text: '#1d1d1d', // Adjusted text color for consistency\n};\n\nconst Homepage = ({ navigation }) => {\n  const handleLoginClick = () => {\n    navigation.navigate('Login');\n  };\n\n  const handleRegisterClick = () => {\n    navigation.navigate('Register');\n  };\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={require('./images/desk-synergy.png')} // Adjust the path based on your project structure\n        style={styles.logo}\n      />\n      <Text style={styles.title}>DeskSynergy</Text>\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity style={styles.btn} onPress={handleLoginClick}>\n          <Text style={styles.btnText}>Login</Text>\n        </TouchableOpacity>\n        <TouchableOpacity style={styles.btn} onPress={handleRegisterClick}>\n          <Text style={styles.btnText}>Register</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: COLORS.background,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: COLORS.text,\n    marginBottom: 20,\n  },\n  logo: {\n    width: 200,\n    height: 200,\n    marginBottom: 20,\n  },\n  buttonContainer: {\n    width: '80%',\n    marginTop: 20,\n  },\n  btn: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 8,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderWidth: 1,\n    backgroundColor: COLORS.primary,\n    borderColor: COLORS.primary,\n    marginBottom: 16,\n    width: '100%',\n  },\n  btnText: {\n    fontSize: 17,\n    lineHeight: 24,\n    fontWeight: '600',\n    color: '#fff',\n  },\n});\n\nexport default Homepage;\n","import React from 'react';\nimport { View, Text, StyleSheet, Dimensions } from 'react-native';\nimport Onboarding from 'react-native-onboarding-swiper';\nimport LottieView from 'lottie-react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nconst { width } = Dimensions.get('window');\n\nexport default function OnboardScreen() {\n  const navigation = useNavigation();\n\n  const handleDone = () => {\n    navigation.navigate('Home');\n  };\n\n  return (\n    <View style={styles.container}>\n      <Onboarding\n        onDone={handleDone}\n        onSkip={handleDone}\n        //nextLabel={handleDone}\n        containerStyles={{ paddingHorizontal: 15 }}\n        pages={[\n\n          {\n            backgroundColor: '#40E0D0',\n            image: (\n              <View style={styles.lottieContainer}>\n                <LottieView source={require('./animations/arrow.json')} autoPlay loop />\n                <Text style={styles.titleText}>Welcome to DeskSynergy</Text>\n              </View>\n            ),\n          },\n          {\n            backgroundColor: '#40E0D0',\n            \n            image: (\n              <View style={styles.lottieContainer}>\n                <LottieView source={require('./animations/happy.json')} autoPlay loop />\n                <Text style={styles.titleText}>Boost Productivity</Text>\n                <Text style={styles.smallText}>Have seamless workforce collaborataion</Text>\n              </View>\n            ),\n          },\n          {\n            backgroundColor: '#fef37c',\n            image: (\n              <View style={styles.lottieContainer}>\n                <LottieView source={require('./animations/WorkEnvironment.json')} autoPlay loop />\n                <Text style={styles.titleText}>Work Seemingly</Text>\n                <Text style={styles.smallText}>Handle office functions in one place</Text>\n              </View>\n            ),\n          },\n          {\n            backgroundColor: \"#800080\",\n            image: (\n              <View style={styles.lottieContainer}>\n                <LottieView source={require('./animations/rocket.json')} autoPlay loop />\n                <Text style={styles.titleText}>Achieve Higher Goals</Text>\n                <Text style={styles.smallText}>Manage Better, Perform Better!</Text>\n              </View>\n            ),\n          },\n          \n        ]}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n  },\n  lottieContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  titleText: {\n    marginTop: 20,\n    fontSize: 27,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  smallText: {\n    marginTop: 10, // Adjust the spacing as needed\n    fontSize: 21, // Adjust the font size as needed\n    color: 'white',\n  },\n  title: {\n    marginTop: 10,\n    fontSize: 21,\n    color: 'white',\n  }\n});","// App.js\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LoginScreen from './LoginScreen';\nimport RegisterScreen from './RegisterScreen';\nimport homepage from './homepage';\nimport PMPage from './PMPage';\nimport BottomTabNavigator from './BottomTabNavigator';\nimport BookRoomPage from './BookRoomPage';\nimport OnboardingScreen from './OnboardScreen'; // Import the OnboardingScreen component\nimport AccountPage from './AccountPage';\nimport AddProject from './AddProjectPage';\nimport AddNotification from './AddNotification';\n\n\nconst Stack = createStackNavigator();\n// const stylesCss = Asset.fromModule(require('./App.css')).uri;\n\nconst App = () => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Login\">\n        <Stack.Screen\n          name=\"Onboarding\"\n          component={OnboardingScreen}\n          options={{ headerShown: false }}\n        />\n\n        <Stack.Screen\n          name=\"Register\"\n          component={RegisterScreen}\n          options={{ headerShown: false }}\n        />\n\n        <Stack.Screen\n          name=\"Login\"\n          component={LoginScreen}\n          options={{ headerShown: false }}\n        />\n\n        <Stack.Screen\n          name=\"Home\"\n          component={homepage}\n          options={{ headerShown: false }}\n        />\n\n        <Stack.Screen\n          name=\"PMPage\"\n          component={PMPage}\n          options={{ headerShown: false }}\n        />\n\n        <Stack.Screen\n          name=\"BottomTabNav\"\n          component={BottomTabNavigator}\n          options={{ headerShown: false }}\n        />\n\n        <Stack.Screen\n          name=\"BookRoomPage\"\n          component={BookRoomPage}\n          options={{ headerShown: true }}\n        />\n\n        <Stack.Screen\n          name=\"AccountPage\"\n          component={AccountPage} // Use a WebView component for home.html\n          options={{ headerShown: true }}\n        />\n\n      <Stack.Screen\n          name=\"AddNotification\"\n          component={AddNotification} // Use a WebView component for home.html\n          options={{ headerShown: true }}\n        />  \n        \n\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default App;","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [787], () => (__webpack_require__(8378)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["styles","StyleSheet","create","container","flex","alignItems","justifyContent","padding","title","fontSize","fontWeight","marginBottom","input","width","borderWidth","borderColor","borderRadius","datePickerRow","flexDirection","dateInput","calendarButton","marginLeft","calendarText","notification","position","top","left","right","zIndex","notificationText","color","closeButton","_useState","useState","_useState2","_slicedToArray","projectName","setProjectName","_useState3","_useState4","percentageComplete","setPercentageComplete","_useState5","_useState6","team","setTeam","_useState7","_useState8","dueDate","setDueDate","_useState9","_useState10","isDatePickerVisible","setDatePickerVisibility","_useState11","visible","message","theme","_useState12","setNotification","showNotification","arguments","length","undefined","setTimeout","handleAddProject","_ref","_asyncToGenerator","teamArray","split","map","item","trim","projectData","Name","Percentage_Complete","parseFloat","Due_Date","Team","axios","post","error","apply","hideDatePicker","_jsxs","View","style","children","backgroundColor","_jsx","Text","TouchableOpacity","onPress","TextInput","placeholder","value","onChangeText","keyboardType","editable","DateTimePickerModal","isVisible","mode","onConfirm","date","toISOString","onCancel","Button","marginVertical","label","marginRight","statusText","project","taskName","taskComplete","useEffect","console","log","isComplete","setIsComplete","onToggleSwitch","_ref2","prevValue","then","response","catch","Switch","trackColor","false","true","thumbColor","ios_backgroundColor","onValueChange","height","borderBottomWidth","paddingLeft","setTitle","setMessage","time","setTime","employees","setEmployees","navigation","useNavigation","handleAddNotification","notificationData","targetEmployeeIds","createdAt","navigate","Alert","header","cardUnread","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","cardTitle","cardMessage","cardTime","marginTop","markAsReadButton","markAsReadButtonText","textAlign","cardRead","opacity","titleRow","deleteButton","refreshButton","alignSelf","addNotificationButton","route","notifications","setNotifications","employeeId","params","url","fetchNotifications","get","data","markAsRead","_ref3","notificationTitle","patch","n","readBy","includes","_objectSpread","concat","_toConsumableArray","_x","deleteNotification","_ref4","delete","filter","_x2","Icon","name","size","index","card","Date","toLocaleString","API_URL","Tab","createMaterialTopTabNavigator","Stack","createStackNavigator","PHASES","percentage","Math","floor","random","TasksPage","_route$params2","phase","isModalVisible","setIsModalVisible","newTaskName","setNewTaskName","newTaskPhase","setNewTaskPhase","newTaskSize","setNewTaskSize","newTaskNumEmployees","setNewTaskNumEmployees","newTaskEmployees","setNewTaskEmployees","_useState13","_useState14","employeeInputs","setEmployeeInputs","_useState15","_useState16","projectTasks","setProjectTasks","_useState17","_useState18","newProjectName","setNewProjectName","fetchTasks","find","p","tasksForPhase","Tasks","t","taskPhase","handleUpdateSampleEmployees","user_Data","user_data","new_task_name","val","convertStringToJson","val_json","JSON","parse","lines","shift","line","_line$trim$split","_line$trim$split2","_toArray","id","slice","join","parseInt","EmployeeName","stringify","jsonOutput","handleSaveTask","_ref5","taskDetails","taskSize","handleCloseModal","mytext","addButton","addButtonText","FlatList","keyExtractor","toString","renderItem","_ref6","task","taskCard","TaskToggle","completionStatus","renderTaskCard","Modal","animationType","transparent","onRequestClose","modalContainer","splitScreenContainer","leftSide","modalTitle","inputField","text","updateButton","String","numEmployees","clampedNumEmployees","max","min","Array","fill","handleNumEmployeesChange","from","_","updatedInputs","handleEmployeeInputChange","rightSide","_ref7","sampleEmployee","modalButtons","buttonWrapper","calculateProjectCompletion","numCompletedTasks","forEach","percentageCompleted","round","isNaN","renderProjectCard","teamText","num","projectCard","leftContent","duedate","cardText","separator","rightContent","percentText","CircularProgress","thickness","variant","ProjectDetailsScreen","_ref8","_route$params3","chartConfig","backgroundGradientFrom","backgroundGradientTo","labelColor","barPercentage","barStyle","formatYLabel","chartWidth","Dimensions","labels","datasets","count","count2","ScrollView","_ref9","renderPhaseCard","scrollEnabled","BarChart","yAxisLabel","verticalLabelRotation","chart","AllScreen","_ref10","_useState19","_useState20","projects","setProjects","_useState21","_useState22","setError","employeeName","fetchProjects","_ref11","_ref12","OngoingScreen","_ref13","_useState23","_useState24","_ref14","filteredProjects","_ref15","CompletedScreen","_ref16","_useState25","_useState26","_ref17","_ref18","PMTopTabNavigator","_ref19","_route$params4","Navigator","Screen","component","initialParams","phaseCardContainer","margin","phaseCard","phaseText","fontFamily","paddingHorizontal","paddingVertical","borderBottomColor","modalContent","overflow","maxWidth","marginHorizontal","saveButton","cancelButton","buttonText","phaseTitle","display","_route$params","setOptions","headerRight","initialRouteName","headerMode","AddProjectPage","NotificationBar","contentContainerStyle","flexGrow","svgContainer","modalText","pickerContainer","pickerStyle","paddingRight","selectedRoomContainer","selectedRoomText","button","selectedRoom","setSelectedRoom","modalVisible","setModalVisible","selectedTime","setSelectedTime","fetchRoomData","room","attachRoomClickListeners","roomId","document","getElementById","addEventListener","roomName","getAttribute","onRoomClick","handleConfirmBooking","booked","updateBookingStatus","alert","cancelable","_x3","_x4","put","_x5","_x6","_x7","horizontal","xmlns","x","y","stroke","Picker","selectedValue","itemValue","Item","contentContainer","section","sectionTitle","avatarContainer","logoutButton","employeePic","Avatar","source","uri","appContainer","temperatureDisplayContainer","temperatureDisplay","temperatureText","buttonContainer","circularButton","cold","hot","maintainButton","tempValue","setTempValue","tempColor","setTempColor","empid","getTemperature","saveTemp","currentTemp","temperature","_Fragment","newTemp","createBottomTabNavigator","tabBarOptions","activeTintColor","inactiveTintColor","labelStyle","PMPage","options","tabBarIcon","BookRoomPage","TemperaturesPage","AccountPage","COLORS","subtitle","inputControl","btn","btnText","lineHeight","formFooter","formFooterText","letterSpacing","formFooterLink","textDecorationLine","errorMessage","icon","setEmployeeId","password","setPassword","setLoggedIn","setIsAdmin","handleLogin","loginData","employeeID","_response$data","pic","IconButton","Card","Content","Title","Paragraph","autoCapitalize","autoCorrect","email","placeholderTextColor","pwd","secureTextEntry","setEmployeeName","handleRegister","registrationData","logo","Image","require","OnboardScreen","handleDone","Onboarding","onDone","onSkip","containerStyles","pages","image","lottieContainer","LottieView","autoPlay","loop","titleText","smallText","NavigationContainer","OnboardingScreen","headerShown","RegisterScreen","LoginScreen","homepage","BottomTabNavigator","AddNotification","registerRootComponent","App","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","this","ns","def","current","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","g","globalThis","Function","e","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}