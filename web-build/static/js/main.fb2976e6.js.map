{"version":3,"file":"static/js/main.fb2976e6.js","mappings":"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","sources":["AddProjectPage.js","TaskToggle.js","AddNotification.js","NotificationBar.js","PMPage.js","BookRoomPage.js","AccountPage.js","TemperaturesPage.js","BottomTabNavigator.js","LoginScreen.js","RegisterScreen.js","homepage.js","OnboardScreen.js","App.js","index.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, Button, StyleSheet, TouchableOpacity } from 'react-native';\nimport axios from 'axios';\n\nconst AddProject = () => {\n  const [projectName, setProjectName] = useState('');\n  const [percentageComplete, setPercentageComplete] = useState('');\n  const [team, setTeam] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [notification, setNotification] = useState({ visible: false, message: '', theme: 'light' });\n\n  const showNotification = (message, theme = 'light') => {\n    setNotification({ visible: true, message, theme });\n    setTimeout(() => {\n      setNotification({ visible: false, message: '', theme: 'light' });\n    }, 3000); // hide after 3 seconds\n  };\n\n  const handleAddProject = async () => {\n    if (!projectName || !percentageComplete || !team || !dueDate) {\n      showNotification('TextFields cannot be empty', 'red');\n      return;\n    }\n\n    try {\n      const teamArray = team.split(',').map(item => item.trim());\n      const projectData = {\n        Name: projectName,\n        Percentage_Complete: parseFloat(percentageComplete),\n        Due_Date: dueDate,\n        Team: teamArray,\n      };\n\n      await axios.post('http://localhost:3001/auth/projects', projectData);\n      showNotification('Project successfully added!', 'green');\n    } catch (error) {\n      showNotification('Project was not added!', 'red');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      {notification.visible && (\n        <View style={[styles.notification, { backgroundColor: notification.theme === 'red' ? '#FFCCCC' : '#CCFFCC' }]}>\n          <Text style={styles.notificationText}>{notification.message}</Text>\n          <TouchableOpacity onPress={() => setNotification({ visible: false, message: '', theme: 'light' })}>\n            <Text style={styles.closeButton}>X</Text>\n          </TouchableOpacity>\n        </View>\n      )}\n      <Text style={styles.title}>Add New Project</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Project Name\"\n        value={projectName}\n        onChangeText={setProjectName}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Percentage Complete\"\n        keyboardType=\"numeric\"\n        value={percentageComplete}\n        onChangeText={setPercentageComplete}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Team (Comma-separated)\"\n        value={team}\n        onChangeText={setTeam}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Due Date\"\n        value={dueDate}\n        onChangeText={setDueDate}\n      />\n      <Button title=\"Add Project\" onPress={handleAddProject} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  input: {\n    width: '100%',\n    marginBottom: 10,\n    borderWidth: 1,\n    borderColor: 'gray',\n    borderRadius: 5,\n    padding: 10,\n  },\n  notification: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    padding: 20,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    zIndex: 1000,\n  },\n  notificationText: {\n    color: '#000',\n  },\n  closeButton: {\n    color: '#000',\n    fontWeight: 'bold',\n  },\n});\n\nexport default AddProject;\n","// import React, { useState } from 'react';\n// import { View, Text, Switch, StyleSheet } from 'react-native';\n// import axios from 'axios'; // Import axios for making HTTP requests\n\n// const TaskToggle = ({ project, taskName }) => { // Pass project and taskName as props\n//   const [isComplete, setIsComplete] = useState(false);\n\n//   const onToggleSwitch = async () => { // Make the function asynchronous to perform HTTP request\n//     try {\n//         console.log(\"In the TASK API\")\n//       // Make a POST request to the API route\n//       await axios.post('http://localhost:3001/auth/tasktoggle', {\n//         project: project,\n//         taskName: taskName,\n//         taskComplete: !isComplete // Toggle the task completion status\n//       });\n\n//       // If the request is successful, update the state\n//       setIsComplete(prevValue => !prevValue);\n//     } catch (error) {\n//       console.error('Error updating task completion status:', error);\n//       // Handle error here\n//     }\n//   };\n\n//   return (\n//     <View style={styles.container}>\n//       <Text style={styles.label}>Task Status</Text>\n//       <Switch\n//         trackColor={{ false: '#767577', true: '#81b0ff' }}\n//         thumbColor={isComplete ? '#f5dd4b' : '#f4f3f4'}\n//         ios_backgroundColor=\"#3e3e3e\"\n//         onValueChange={onToggleSwitch}\n//         value={isComplete}\n//       />\n//       <Text style={styles.statusText}>{isComplete ? 'Complete' : 'Incomplete'}</Text>\n//     </View>\n//   );\n// };\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flexDirection: 'row',\n//     alignItems: 'center',\n//     marginVertical: 20,\n//   },\n//   label: {\n//     marginRight: 10,\n//   },\n//   statusText: {\n//     marginLeft: 10,\n//   },\n// });\n\n// export default TaskToggle;\n\nimport React, { useState } from 'react';\nimport { View, Text, Switch, StyleSheet } from 'react-native';\n\nconst TaskToggle = () => {\n  const [isComplete, setIsComplete] = useState(false);\n\n  const onToggleSwitch = () => {\n    setIsComplete((prevValue) => !prevValue);\n    // Add logic to update the completion status in your backend/API\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.label}>Task Status</Text>\n      <Switch\n        trackColor={{ false: '#767577', true: '#81b0ff' }}\n        thumbColor={isComplete ? '#f5dd4b' : '#f4f3f4'}\n        ios_backgroundColor=\"#3e3e3e\"\n        onValueChange={onToggleSwitch}\n        value={isComplete}\n      />\n      <Text style={styles.statusText}>{isComplete ? 'Complete' : 'Incomplete'}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 20,\n  },\n  label: {\n    marginRight: 10,\n  },\n  statusText: {\n    marginLeft: 10,\n  },\n});\n\nexport default TaskToggle;","import React, { useState, Alert } from 'react';\nimport { View, Text, TextInput, Button, StyleSheet } from 'react-native';\nimport axios from 'axios';\nimport { useNavigation } from '@react-navigation/native';\nimport NotificationBar from './NotificationBar';\n\nconst AddNotification = () => {\n  const [title, setTitle] = useState('');\n  const [message, setMessage] = useState('');\n  const [time, setTime] = useState('');\n  const [employees, setEmployees] = useState('');\n  const navigation = useNavigation();\n  \n  const handleAddNotification = async () => {\n   \n    if (!title || !message || !employees || !time) {\n      Alert.alert('Fields cannot be empty');\n      return;\n    }\n\n    try {\n      const teamArray = employees.split(',').map(item => item.trim());\n      const notificationData = {\n        title,\n        message,\n        targetEmployeeIds: teamArray,\n        createdAt: time,\n      };\n\n      await axios.post('http://localhost:3001/auth/addnotifications', notificationData);\n      console.log('Notification sent successfully!')\n      navigation.navigate('NotificationBar')\n    } catch (error) {\n      console.error('Error adding notification:', error);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Add Notification</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Title\"\n        value={title}\n        onChangeText={setTitle}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Message\"\n        value={message}\n        onChangeText={setMessage}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Target Employee ID's (Comma-separated)\"\n        value={employees}\n        onChangeText={setEmployees}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Created At (mm/dd/yyyy)\"\n        value={time}\n        onChangeText={setTime}\n      />\n      <Button title=\"Send Notification\" onPress={handleAddNotification} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16,\n  },\n  input: {\n    height: 40,\n    width: '100%',\n    borderColor: '#3498db',\n    borderBottomWidth: 1,\n    marginBottom: 16,\n    paddingLeft: 8,\n  },\n});\n\nexport default AddNotification;\n","// Import the necessary modules\nimport React, { useState, useEffect } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport axios from 'axios';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport AddNotification from './AddNotification';\nimport { useNavigation } from '@react-navigation/native';\n\n// Define the NotificationBar component\nconst NotificationBar = ({ route }) => {\n  const [notifications, setNotifications] = useState([]);\n  const { employeeId } = route.params;\n  const navigation = useNavigation();\n\n  // Function to fetch notifications\n  const fetchNotifications = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3001/auth/notifications?employeeID=${employeeId}`);\n      setNotifications(response.data); // Update notifications state with fetched data\n    } catch (error) {\n      console.error('Error fetching notifications:', error);\n    }\n  };\n\n  // useEffect hook to fetch notifications when component mounts or employeeId changes\n  useEffect(() => {\n    fetchNotifications();\n  }, [employeeId]);\n\n  // Function to mark a notification as read\n  const markAsRead = async (notificationTitle) => {\n    try {\n      await axios.patch(`http://localhost:3001/auth/notifications/read?title=${notificationTitle}&employeeID=${employeeId}`);\n      // Immediately reflect the change in the UI\n      setNotifications(notifications.map(n =>\n        n.title === notificationTitle && !n.readBy.includes(employeeId)\n          ? { ...n, readBy: [...n.readBy, employeeId] }\n          : n\n      ));\n    } catch (error) {\n      console.error('Error marking notification as read:', error);\n    }\n  };\n\n  // Function to delete a notification\n  const deleteNotification = async (notificationTitle) => {\n    try {\n      await axios.delete(`http://localhost:3001/auth/notifications/delete?title=${notificationTitle}`);\n      // Immediately reflect the change in the UI\n      setNotifications(notifications.filter(n => n.title !== notificationTitle));\n    } catch (error) {\n      console.error('Error deleting notification:', error);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      {/* Header */}\n      <Text style={styles.header}>Notifications</Text>\n      \n      {/* Refresh Button */}\n      <TouchableOpacity onPress={fetchNotifications} style={styles.refreshButton}>\n        <Icon name=\"refresh\" size={20} color=\"#3498db\" />\n      </TouchableOpacity>\n      \n      {/* Add Notification Button */}\n      <TouchableOpacity onPress={() => navigation.navigate('AddNotification')} style={styles.addNotificationButton}>\n        <Icon name=\"add-alert\" size={30} color=\"#3498db\" />\n      </TouchableOpacity>\n      \n      {/* Render notifications */}\n      {notifications.map((notification, index) => (\n        <View key={index} style={[styles.card, notification.readBy.includes(employeeId) ? styles.cardRead : styles.cardUnread]}>\n          {/* Title and Delete Button */}\n          <View style={styles.titleRow}>\n            <Text style={styles.cardTitle}>{notification.title}</Text>\n            <TouchableOpacity onPress={() => deleteNotification(notification.title)} style={styles.deleteButton}>\n              <Icon name=\"delete\" size={24} color=\"#f00\" />\n            </TouchableOpacity>\n          </View>\n          \n          {/* Message and Time */}\n          <Text style={styles.cardMessage}>{notification.message}</Text>\n          <Text style={styles.cardTime}>{new Date(notification.createdAt).toLocaleString()}</Text>\n          \n          {/* Mark as Read Button */}\n          <TouchableOpacity onPress={() => markAsRead(notification.title)} style={styles.markAsReadButton}>\n            <Text style={styles.markAsReadButtonText}>Mark as Read</Text>\n          </TouchableOpacity>\n        </View>\n      ))}\n    </View>\n  );\n};\n\n// Styles\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#f0f0f0',\n    padding: 10,\n  },\n  header: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  cardUnread: {\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n    elevation: 3,\n  },\n  cardTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  cardMessage: {\n    fontSize: 14,\n  },\n  cardTime: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 5,\n  },\n  markAsReadButton: {\n    marginTop: 10,\n    backgroundColor: '#4CAF50',\n    padding: 10,\n    borderRadius: 5,\n  },\n  markAsReadButtonText: {\n    color: '#fff',\n    textAlign: 'center',\n  },\n  cardRead: {\n    opacity: 0.5, // Or use backgroundColor to dim the card\n  },\n  titleRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between', // This spreads out the title and the delete button on both ends\n    alignItems: 'center', // This centers them vertically in case they have different heights\n    width: '100%', // Ensure the row takes up the full width of the card\n  },\n  deleteButton: {\n    // You might want to adjust padding or margin based on your layout needs\n    padding: 5,\n    marginLeft: 10, // Add some space between the title and the button if needed\n  },\n  refreshButton: {\n    alignSelf: 'flex-end',\n    marginTop: -30,\n    marginRight: 50,\n  },\n  addNotificationButton: {\n    alignSelf: 'flex-end',\n    marginTop: -30,\n    marginRight: 10,\n    marginBottom: 5,\n  },\n});\n\nexport default NotificationBar;\n","import React, { useState, useEffect } from 'react';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport {\n  View,\n  Text,\n  FlatList,\n  TouchableOpacity,\n  StyleSheet,\n  ScrollView,\n  Modal,\n  TextInput,\n  Button,\n} from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport { useNavigation } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport axios from 'axios';\nimport { BarChart } from 'react-native-chart-kit';\nimport { Dimensions } from 'react-native';\nimport AddProjectPage from './AddProjectPage'; // Adjust the import path as needed\nimport TaskToggle from './TaskToggle'; // Import the TaskToggle component\nimport NotificationBar from './NotificationBar';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { AnimatedCircularProgress } from 'react-native-circular-progress';  \n// import Icon from 'react-native-vector-icons/FontAwesome';\n\n\nconst Tab = createMaterialTopTabNavigator();\nconst Stack = createStackNavigator();\n\nconst PHASES = [\n  { name: 'Planning', percentage: Math.floor(Math.random() * 100) },\n  { name: 'Implementation', percentage: Math.floor(Math.random() * 100) },\n  { name: 'Testing', percentage: Math.floor(Math.random() * 100) },\n  { name: 'Deployment', percentage: Math.floor(Math.random() * 100) },\n];\n\nconst renderPhaseCard = (navigation, phase, projectName) => (\n  <TouchableOpacity\n    onPress={() => navigation.navigate('Tasks', { phase, projectName })}\n  >\n    <View style={styles.projectCard}>\n        <Text style={styles.cardTitle}>{phase.name}</Text>\n        <Text style={styles.cardText}>{phase.percentage}% Completed</Text>\n    </View>\n  </TouchableOpacity>\n);\n\nconst PMPage = ({ route }) => {\n  const { employeeId, employeeName} = route.params;\n  console.log(employeeId, employeeName);\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <View style={{ flexDirection: 'row', marginRight: 10 }}>\n          {employeeId === 'admin' && (\n            <TouchableOpacity\n              style={{ marginRight: 20 }}\n              onPress={() => navigation.navigate('AddProjectPage')}\n            >\n              <Icon name=\"add-box\" size={30} color=\"#3498db\" />\n            </TouchableOpacity>\n          )}\n          <TouchableOpacity\n            onPress={() => navigation.navigate('NotificationBar')}\n          >\n            <Icon name=\"notifications\" size={30} color=\"#3498db\" />\n          </TouchableOpacity>\n        </View>\n      ),\n    });\n  }, [navigation, employeeId]);\n\n  return (\n    <Stack.Navigator initialRouteName=\"PMTopTabNavigator\" headerMode=\"none\">\n      <Stack.Screen name=\"PMTopTabNavigator\" component={PMTopTabNavigator} initialParams={{ employeeId: employeeId, employeeName: employeeName }} />\n      <Stack.Screen name=\"ProjectDetails\" component={ProjectDetailsScreen} />\n      <Stack.Screen name=\"Tasks\" component={TasksPage} initialParams={{ employeeId: employeeId }}/>\n      <Stack.Screen name=\"AddProjectPage\" component={AddProjectPage} />\n      <Stack.Screen name=\"NotificationBar\" component={NotificationBar} initialParams={{ employeeId: employeeId }}/>\n    </Stack.Navigator>\n  );\n};\n\n\nconst renderTaskCard = (task) => {\n  // If you need to log the task, do it inside the function body before the return statement.\n  console.log('task', task);\n\n  return (\n    <View style={styles.taskCard}>\n      <Text style={styles.taskName}>Task Name: {task.taskName}</Text>\n      <Text style={styles.phase}>Phase: {task.taskPhase}</Text>\n      \n      {/* Include the TaskToggle component here */}\n      <TaskToggle project={task.project} taskName={task.taskName} />\n\n      <Text style={styles.completionStatus}>\n        Completion Status: {task.taskComplete ? 'Complete' : 'Incomplete'}\n      </Text>\n      <Text style={styles.employees}>\n        Employees: {task.employees ? task.employees.join(', ') : 'None'}\n      </Text>\n    </View>\n  );\n};\n\nconst TasksPage = ({ route }) => {\n  const { phase, projectName, employeeId } = route.params;\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [newTaskName, setNewTaskName] = useState('');\n  const [newTaskPhase, setNewTaskPhase] = useState('');\n  const [newTaskSize, setNewTaskSize] = useState('');\n  const [newTaskNumEmployees, setNewTaskNumEmployees] = useState(1);\n  const [newTaskEmployees, setNewTaskEmployees] = useState([]);\n  const [employeeInputs, setEmployeeInputs] = useState([\"\"]);\n\n  const [projectTasks, setProjectTasks] = useState([]);\n  const [newProjectName, setNewProjectName] = useState();\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get('https://capstone-cmml.onrender.com/auth/projects');\n        // const response = await axios.get('http://localhost:3001/auth/projects');\n        const project = response.data.find((p) => p.Name === projectName);\n\n        if (project) {\n          const tasksForPhase = project.Tasks.filter((t) => t.taskPhase === phase.name);\n          setProjectTasks(tasksForPhase);\n        }\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      }\n    };\n\n    fetchTasks();\n  }, [phase.name, projectName]);\n\n  const handleUpdateSampleEmployees = async () => {\n    if (!newTaskName) {\n      console.log('Please enter a task name before updating sample employees.');\n      return;\n    }\n\n    try {\n      const response = await axios.get('https://capstone-cmml.onrender.com/auth/users');\n      const user_Data = await axios.post('https://capstone-cmml.onrender.com/auth/get-suggestions.py', {\n        user_data: response.data,\n        new_task_name: newTaskName,\n      });\n\n      const val = convertStringToJson();\n      const val_json = JSON.parse(val);\n\n      setNewTaskEmployees(val_json.map((name) => name.EmployeeName));\n\n      function convertStringToJson() {\n        const lines = user_Data.data.trim().split('\\n');\n        lines.shift();\n        const employees = lines.map((line) => {\n          const [id, ...nameParts] = line.trim().split(' ');\n          const name = nameParts.join(' ');\n          return { id: parseInt(id, 10), EmployeeName: name };\n        });\n        return JSON.stringify(employees, null, 2);\n      }\n\n      const jsonOutput = convertStringToJson(user_Data.data);\n      console.log(jsonOutput);\n    } catch (error) {\n      console.error('Error fetching sample users:', error);\n    }\n  };\n\n  const handleAddTask = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleSaveTask = async () => {\n    // Assuming you have states for task name, due date, and possibly other details\n    // Prepare the task details including the employee inputs\n    const taskDetails = {\n      project: newProjectName,\n      taskName: newTaskName,\n      taskPhase: newTaskPhase,\n      taskSize: newTaskSize, \n      employees: employeeInputs.filter(input => input.trim() !== ''), // Filter out any empty strings\n      taskSize: newTaskSize,\n      employees: employeeInputs.filter((input) => input.trim() !== ''),\n    };\n\n    try {\n      // Make the API call to submit the task details\n      // Adjust the URL and request payload according to your backend API\n       await axios.post('https://capstone-cmml.onrender.com/auth/addtask', taskDetails);\n       console.log('Task successfully added with employees');\n\n      await axios.post('https://capstone-cmml.onrender.com/auth/addtasktoproject', taskDetails);\n      console.log('Task successfully added to project data');\n  \n      // Handle any post-save actions, like closing the modal or clearing the form\n      setIsModalVisible(false);\n    } catch (error) {\n      console.error('Error adding task with employees:', error);\n    }\n  };\n\n  const handleCloseModal = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleNumEmployeesChange = (numEmployees) => {\n    const clampedNumEmployees = Math.max(1, Math.min(5, numEmployees));\n    setNewTaskNumEmployees(clampedNumEmployees);\n    setEmployeeInputs(\n      employeeInputs.slice(0, clampedNumEmployees).concat(Array(Math.max(clampedNumEmployees - employeeInputs.length, 0)).fill(''))\n    );\n  };\n\n  const handleEmployeeInputChange = (text, index) => {\n    const updatedInputs = [...employeeInputs];\n    updatedInputs[index] = text;\n    setEmployeeInputs(updatedInputs);\n  };\n\n  const renderEmployeeInputs = () => {\n    return Array.from({ length: newTaskNumEmployees }, (_, index) => (\n      <TextInput\n        key={index}\n        style={styles.inputField}\n        placeholder={`Employee ${index + 1}`}\n        value={employeeInputs[index]}\n        onChangeText={(text) => handleEmployeeInputChange(text, index)}\n      />\n    ));\n  };\n\n  return (\n    <View>\n      <View style={styles.header}>\n        {/* <Text style={styles.mytext}>{phase.name}</Text> */}\n        <Text style={styles.mytext}>{projectName}</Text>\n          {employeeId === 'admin' && (\n          <TouchableOpacity onPress={handleAddTask} style={styles.addButton}>\n            <Text style={styles.addButtonText}>Add Task</Text>\n          </TouchableOpacity>\n)}\n\n      </View>\n      <FlatList\n        data={projectTasks}\n        keyExtractor={(item, index) => index.toString()}\n        renderItem={({ item }) => renderTaskCard(item)}\n      />\n\n      <Modal\n        visible={isModalVisible}\n        animationType=\"slide\"\n        transparent={true}\n        onRequestClose={handleCloseModal}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.splitScreenContainer}>\n            <View style={styles.leftSide}>\n              <Text style={styles.modalTitle}>Add Task</Text>\n              <TextInput\n                style={styles.inputField}\n                placeholder=\"Project Name\"\n                onChangeText={(text) => setNewProjectName(text)}\n              />\n              <TextInput\n                style={styles.inputField}\n                placeholder=\"Task Name\"\n                onChangeText={(text) => setNewTaskName(text)}\n              />\n              <TextInput\n                style={styles.inputField}\n                placeholder=\"Phase\"\n                onChangeText={(text) => setNewTaskPhase(text)}\n              />\n              <TextInput\n                style={styles.inputField}\n                placeholder=\"Task Size\"\n                onChangeText={(text) => setNewTaskSize(text)}\n              />\n              <TextInput\n                style={styles.inputField}\n                placeholder=\"Number of Employees\"\n                onChangeText={(text) => setNewTaskNumEmployees(parseInt(text) || 0)}\n              />\n              <TouchableOpacity onPress={handleUpdateSampleEmployees} style={styles.updateButton}>\n                <Text style={styles.addButtonText}>Generate AI suggestions</Text>\n              </TouchableOpacity>\n              <TextInput\n                style={styles.inputField}\n                placeholder=\"Number of Employees\"\n                keyboardType=\"numeric\"\n                value={String(newTaskNumEmployees)}\n                onChangeText={(text) => handleNumEmployeesChange(parseInt(text) || 1)}\n              />\n              {renderEmployeeInputs()}\n            </View>\n            <View style={styles.rightSide}>\n              <Text style={styles.modalTitle}> AI Suggestion</Text>\n              <FlatList\n                data={newTaskEmployees}\n                keyExtractor={(item, index) => index.toString()}\n                renderItem={({ item }) => (\n                  <Text style={styles.sampleEmployee}>{item}</Text>\n                )}\n              />\n            </View>\n          </View>\n          <View style={styles.modalButtons}>\n            <View style={styles.buttonWrapper}>\n              <Button title=\"Save\" onPress={handleSaveTask} />\n            </View>\n            <View style={[styles.buttonWrapper]}>\n              <Button title=\"Cancel\" onPress={handleCloseModal} />\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n};\n\n\n\n\nconst renderProjectCard = (navigation, project) => {\n  const teamText = project.Team ? `Team: ${project.Team.join(', ')}` : 'Team: N/A';\n\n  return (\n    <TouchableOpacity\n      onPress={() => navigation.navigate('ProjectDetails', { project, navigation })}\n    >\n      <View style={styles.projectCard}>\n        <View style={styles.leftContent}>\n          <Text style={styles.cardTitle}>{project.Name}</Text>\n          <Text style={styles.duedate}>Due Date: {project.Due_Date}</Text>\n          {/* <Text style={styles.cardText}>Tasks: {project.Tasks ? project.Tasks.join(', ') : 'N/A'}</Text> */}\n          <Text style={styles.cardText}>{teamText}</Text>\n        </View>\n        <View style={styles.separator}></View>\n        <View style={styles.rightContent}>\n          <Text style={styles.percentText}>Percentage: {project.Percentage_Complete}%</Text>\n          <CircularProgress variant=\"determinate\" value={project.Percentage_Complete} />\n        </View>\n      </View> \n    </TouchableOpacity>\n  );\n};\n\n\n\nconst ProjectDetailsScreen = ({ route }) => {\n  const { project, navigation } = route.params;\n  \n\n  const chartConfig = {\n    backgroundGradientFrom: \"#fff\",\n    backgroundGradientTo: \"#fff\",\n    color: (opacity = 1) => `rgba(0, 0, 255, ${opacity})`,\n    labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\n    barPercentage: 0.5, // Adjust the width of the bars, default is 0.4\n    //barRadius: 5, // Adjust the corner radius of the bars\n    barStyle: {\n      borderRadius: 10, // Additional styling for the bars, if needed\n    },\n    formatYLabel: label => label + '%',\n  };\n  \n\n  const screenWidth = Dimensions.get(\"window\").width;\n  // const screenWidth = Dimensions.get(\"window\").width;\n  const chartWidth = screenWidth - 5; \n\n  const data = {\n    labels: PHASES.map(phase => phase.name), //yAxisLabel: 'Percentage Complete',\n    datasets: [{\n      data: PHASES.map(phase => phase.percentage)\n    }]\n  };\n\n  \n\n  return (\n    <ScrollView>\n      <View>\n        <Text style={styles.mytext}>Project Phases</Text>\n        <FlatList\n          data={PHASES}\n          keyExtractor={(item) => item.name}\n          renderItem={({ item }) => renderPhaseCard(navigation, item, project.Name)}\n          scrollEnabled={false} // Disables scrolling for the FlatList, since it's inside a ScrollView\n        />\n        <Text style={styles.mytext}>Progress Chart</Text>\n        <BarChart\n          data={data}\n          width={chartWidth}\n          height={220}\n          yAxisLabel=\"\"\n          chartConfig={chartConfig}\n          verticalLabelRotation={0}\n          style={styles.chart}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst AllScreen = ({route}) => {\n  const navigation = useNavigation();\n  const [projects, setProjects] = useState([]);\n  const [error, setError] = useState(null);\n  const {employeeName} = route.params;\n\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get(`https://capstone-cmml.onrender.com/auth/assignedprojects?employeeName=${employeeName}`);\n      // const response =  await axios.get(`http://localhost:3001/auth/projects`)\n      setProjects(response.data);\n      console.log(response.data)\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n      setError('Error fetching projects');\n    }\n  };\n\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n\n  return (\n    <ScrollView>\n      <View>\n        <Text style={styles.mytext}>All Projects</Text>\n        <TouchableOpacity onPress={fetchProjects} style={{ alignSelf: 'flex-end', marginTop: -10 }}>\n          <Icon name=\"refresh\" size={20} color=\"#3498db\" style={{ marginRight: 20, marginTop: -20, marginBottom: 5 }} />\n        </TouchableOpacity>\n\n        <FlatList\n          style={{ flex: 1 }}\n          data={projects}\n          keyExtractor={(item) => item.Name}\n          renderItem={({ item }) => renderProjectCard(navigation, item)}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst OngoingScreen = ({route}) => {\n  const navigation = useNavigation();\n  const [projects, setProjects] = useState([]);\n  const {employeeName} = route.params;\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const response = await axios.get(`https://capstone-cmml.onrender.com/auth/assignedprojects?employeeName=${employeeName}`);\n        // const response =  await axios.get(`http://localhost:3001/auth/projects`)\n      setProjects(response.data);\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      }\n    };\n\n    fetchProjects();\n  }, []);\n\n  const ongoingProjects = projects.filter((project) => project.Percentage_Complete < 100);\n\n  return (\n    <ScrollView>\n      <View>\n        <Text style={styles.mytext}>Ongoing Projects</Text>\n        <FlatList\n          data={ongoingProjects}\n          keyExtractor={(item) => item.Name}\n          renderItem={({ item }) => renderProjectCard(navigation, item)}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst CompletedScreen = ({route}) => {\n  const navigation = useNavigation();\n  const [projects, setProjects] = useState([]);\n  const {employeeName} = route.params;\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n       const response = await axios.get(`https://capstone-cmml.onrender.com/auth/assignedprojects?employeeName=${employeeName}`);\n     \n      setProjects(response.data);\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      }\n    };\n\n    fetchProjects();\n  }, []);\n\n  const completedProjects = projects.filter((project) => project.Percentage_Complete === 100);\n\n  return (\n    <ScrollView>\n      <View>\n        <Text style={styles.mytext}>Completed Projects</Text>\n        <FlatList\n          data={completedProjects}\n          keyExtractor={(item) => item.Name}\n          renderItem={({ item }) => renderProjectCard(navigation, item)}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst PMTopTabNavigator = ({ route }) => {\n  // Destructuring employeeId and employeeName from route.params\n  const { employeeId, employeeName } = route.params;\n\n  return (\n    <Tab.Navigator>\n      <Tab.Screen name=\"All\" component={AllScreen} initialParams={{ employeeName: employeeName }} />\n      <Tab.Screen name=\"Ongoing\" component={OngoingScreen} initialParams={{ employeeName: employeeName }} />\n      <Tab.Screen name=\"Completed\" component={CompletedScreen} initialParams={{ employeeName: employeeName }} />\n    </Tab.Navigator>\n  );\n};\nconst styles = StyleSheet.create({\n  // ... your existing styles\n  phaseCardContainer: {\n    backgroundColor: '#fff',\n    borderRadius: 8,\n    margin: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 2,\n    flex: 1,\n  },\n  phaseCard: {\n    padding: 16,\n  },\n  // phaseTitle: {\n  //   fontSize: 18,\n  //   fontWeight: 'bold',\n  //   marginBottom: 8,\n  // },\n  phaseText: {\n    fontSize: 16,\n    color: '#555',\n  },\n  taskCard: {\n    backgroundColor: '#f0ffff',\n      padding: 10,\n      margin: 3,\n      marginLeft: 2,\n      borderRadius: 5,\n      borderWidth: 1,\n      borderColor: '#000', // Black border\n  },\n  taskName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  phase: {\n    color: '#555',\n    marginBottom: 8,\n  },\n  completionStatus: {\n    fontWeight: 'bold',\n    fontSize: 16,\n    color: '#2ecc71',\n  },\n  projectCard: {\n    backgroundColor: '#f0ffff',\n    padding: 10,\n    margin: 3,\n    marginLeft: 2,\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#000', // Black border\n    flexDirection: 'row',\n    justifyContent: 'space-between',   \n    marginBottom: 12,\n  },\n  \n  cardTitle: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    fontFamily: 'Snell Roundhandlic'\n  },\n  cardText: {\n    fontSize: 14,\n    font: \"Quicksand\",\n    fontWeight: 'bold',\n    marginBottom: 6,\n    color: '#005ced'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    backgroundColor: '#fff',\n    borderBottomWidth: 1,\n    borderBottomColor: '#ddd',\n  },\n  addButton: {\n    backgroundColor: '#3498db',\n    padding: 10,\n    borderRadius: 5,\n  },\n  updateButton: {\n    backgroundColor: '#2ecc71', // Green background color\n    padding: 12,\n    borderRadius: 8,\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  addButtonText: {\n    color: '#ffffff',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)', // Semi-transparent black background\n  },\n  modalContent: {\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    overflow: 'hidden', // Ensure border-radius works as expected\n    width: '80%', // Adjust the width as needed\n    maxWidth: 400, // Maximum width for the modal\n    elevation: 5,\n  },\n  modalTitle: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    padding: 4,\n    backgroundColor: '#3498db', // Header background color\n    color: '#fff', // Header text color\n    textAlign: 'center',\n  },\n  inputField: {\n    height: 40,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingHorizontal: 10,\n    borderRadius: 5,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between', // or 'space-around' based on your preference\n    marginHorizontal: 20, // Adjust the margin as needed\n    marginTop: 20,\n    width: \"150%\"\n  },\n \n  saveButton: {\n    backgroundColor: '#3498db',\n    padding: 12,\n    borderRadius: 8,\n    marginRight: 10, // Add margin to the right of \"Save\" button\n  },\n\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 10,\n    marginBottom: 10,\n    width: \"150%\" \n  },\n  buttonWrapper: {\n    flex: 2,\n    marginHorizontal: 10, // Add margin to each button\n    width: \"100px\",\n    backgroundColor: 'red'\n  },\n  cancelButton: {\n    padding: 12,\n    borderRadius: 8,\n    marginLeft: 10, // Add margin to the left of \"Cancel\" button\n  },\n  buttonText: {\n    color: '#ffffff',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n\n  splitScreenContainer: {\n    flexDirection: 'row',\n    flex: 1,\n  },\n  leftSide: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#f0f0f0',\n  },\n  rightSide: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#e0e0e0',\n  },\n  sampleEmployee: {\n    fontSize: 16,\n    marginBottom: 10,\n  },\n  employees: {\n    fontSize: 16,\n    color: '#555',\n    marginBottom: 8,\n  },\n\n  mytext: {\n    fontWeight: 'bold',\n    fontSize: 15,\n    margin: 5,\n    marginRight: 5\n  },\n\n  // Add the new styles\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 10,\n  },\n  addButton: {\n    backgroundColor: '#3498db',\n    padding: 10,\n    borderRadius: 5,\n  },\n  addButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  phaseCardContainer: {\n    padding: 10,\n  },\n  phaseCard: {\n    backgroundColor: '#ecf0f1',\n    padding: 20,\n    borderRadius: 10,\n  },\n  phaseTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    fontFamily: 'AvenirNext-BoldItalic'\n  },\n  phaseText: {\n    marginTop: 10,\n    color: '#3498db',\n  },\n\n  taskName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  phase: {\n    marginVertical: 5,\n  },\n  completionStatus: {\n    marginVertical: 5,\n    color: '#3498db',\n  },\n  employees: {\n    marginVertical: 5,\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  splitScreenContainer: {\n    flexDirection: 'row',\n    width: '80%',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    overflow: 'hidden',\n  },\n  leftSide: {\n    padding: 20,\n    width: '60%',\n  },\n  rightSide: {\n    padding: 20,\n    width: '40%',\n    backgroundColor: '#ecf0f1',\n  },\n  inputField: {\n    borderWidth: 1,\n    borderColor: '#bdc3c7',\n    borderRadius: 5,\n    padding: 10,\n    marginVertical: 5,\n  },\n  updateButton: {\n    backgroundColor: '#3498db',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10,\n  },\n  sampleEmployee: {\n    marginBottom: 5,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    marginTop: 20,\n  },\n  chart: {\n    marginTop: 10, // Add margin top\n    marginBottom: 10,\n    borderRadius: 20, // Add border radius\n    borderWidth: 2, // Add border width if needed\n    borderColor: '#000', // Add border color if needed\n  },\n  \n  leftContent: {\n    flex: 1,\n  },\n  rightContent: {\n    marginLeft: 10,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 5,\n    marginBottom: 5,\n  },\n  percentText:{\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  separator: {\n    width: 1, // Width of the separator line\n    height: '80%', // Height of the separator line, adjust as needed\n    backgroundColor: '#888', // Grey color of the separator line\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 5,\n    marginBottom: 5,\n    shadowColor: '#000', // Color of the shadow\n    shadowOffset: {\n      width: 0, // No horizontal shadow offset\n      height: 3, // Adjust the vertical shadow offset\n    },\n    shadowOpacity: 0.6, // Opacity of the shadow\n    shadowRadius: 3, // Radius of the shadow\n  },\n\n  duedate:{\n    color: '#FF5C5C',\n    fontWeight: 'bold',\n    marginBottom: 8,\n  }\n  \n\n});\n\nexport default PMPage;","import React, { useState, useEffect } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TouchableOpacity,\n  Alert,\n  Modal,\n  Picker,\n  Button,\n  ScrollView,\n} from 'react-native';\nimport axios from 'axios';\n\nconst BookRoomPage = () => {\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [selectedTime, setSelectedTime] = useState('');\n  const [notification, setNotification] = useState({ visible: false, message: '', theme: 'light' });\n\n  const showNotification = (message, theme = 'light') => {\n    setNotification({ visible: true, message, theme });\n    setTimeout(() => {\n      setNotification({ visible: false, message: '', theme: 'light' });\n    }, 3000); // hide after 3 seconds\n  };\n\n  const onRoomClick = (roomId) => {\n    console.log('room clicked');\n    var roomName = document.getElementById(roomId).getAttribute('data-room');\n    setSelectedRoom(roomName);\n    setModalVisible(true);\n  };\n\n  // method to check if room is available or not\n  const fetchRoomData = async (room, time) => {\n    try {\n      const response = await axios.get(`http://localhost:3001/auth/rooms/${room}/times/${time}`);\n      console.log(response.data);\n\n      // Return the relevant data, e.g., response.data.booked\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching ${room} data:`, error);\n      // Handle error appropriately\n      return false; // Return false in case of an error\n    }\n  };\n\n  const attachRoomClickListeners = () => {\n    const rooms = [\n      'meeting-room-1',\n      'meeting-room-2',\n      'conference-room',\n      'cafeteria',\n      'meeting-room-3',\n      'meeting-room-4',\n      'open-workspace',\n      'meeting-room-5',\n      'meeting-room-6',\n      'meeting-room-7',\n    ];\n\n    rooms.forEach((roomId) => {\n      const roomElement = document.getElementById(roomId);\n      roomElement.addEventListener('click', () => onRoomClick(roomId));\n    });\n  };\n\n  useEffect(() => {\n    attachRoomClickListeners();\n  }, []);\n\n  const handleConfirmBooking = async (room, time) => {\n    try {\n      const { booked } = await fetchRoomData(room, time);\n\n      if (booked) {\n        console.log('Room is available for booking at this time');\n        setModalVisible(false);\n        await updateBookingStatus(room, time, false);\n        showNotification(`You have successfully booked ${room} for ${time}!`, 'green');\n\n        // Set a timeout to revert booking status after 1 minute\n        setTimeout(async () => {\n        await updateBookingStatus(room, time, true); // Revert to available\n        console.log(`Booking status reverted for ${room} at ${time}`);\n      }, 60000); // 60000 milliseconds = 1 minute\n\n\n      } else {\n        console.log('Not available for this time');\n        setModalVisible(false);\n        showNotification(`Booking UnSuccessful for ${room} at ${time}. Please book another timeslot!`, 'red');\n        Alert.alert(\n          'Booking UnSuccessful',\n          'Room is not available for booking at this time.',\n          [{ text: 'OK', onPress: () => console.log('OK Pressed') }],\n          { cancelable: false }\n        );\n      }\n    } catch (error) {\n      console.error('Error handling booking:', error);\n      showNotification('An error occurred while processing your booking. Please try again.', 'red');\n    }\n  };\n\n // Update to include a 'booked' parameter to control booking status\nconst updateBookingStatus = async (room, time, booked) => {\n  try {\n    // Update the request to reflect the desired status based on the 'booked' parameter\n    await axios.put(`http://localhost:3001/auth/rooms/${room}/times/${time}`, { booked });\n  } catch (error) {\n    console.error(`Error updating booking status for ${room} at ${time}:`, error);\n  }\n};\n  return (\n    <ScrollView\n      style={{ flex: 1 }}\n      horizontal={true}\n      contentContainerStyle={styles.contentContainerStyle}\n    >\n      <View style={styles.svgContainer}>\n        {/* SVG floor plan */}\n        <svg width=\"800\" height=\"600\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect x=\"10\" y=\"10\" width=\"780\" height=\"580\" fill=\"lightgrey\" stroke=\"black\" stroke-width=\"2\"/>\n\n\n<rect id=\"meeting-room-1\" data-room=\"Meeting Room 1\" x=\"20\" y=\"20\" width=\"150\" height=\"100\" fill=\"lightblue\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"30\" y=\"70\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 1</text>\n\n<rect id=\"meeting-room-2\" data-room=\"Meeting Room 2\" x=\"20\" y=\"130\" width=\"150\" height=\"100\" fill=\"lightblue\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"30\" y=\"180\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 2</text>\n\n<rect id=\"conference-room\" data-room=\"Conference Room\" x=\"180\" y=\"20\" width=\"250\" height=\"150\" fill=\"lightgreen\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"190\" y=\"95\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Conference Room</text>\n\n<rect id=\"cafeteria\" data-room=\"Cafeteria\" x=\"450\" y=\"20\" width=\"150\" height=\"100\" fill=\"peachpuff\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"460\" y=\"70\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Cafeteria</text>\n\n<rect id=\"meeting-room-3\" data-room=\"Meeting Room 3\" x=\"620\" y=\"20\" width=\"150\" height=\"100\" fill=\"lightcoral\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"630\" y=\"70\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 3</text>\n\n<rect id=\"meeting-room-4\" data-room=\"Meeting Room 4\" x=\"620\" y=\"130\" width=\"150\" height=\"100\" fill=\"lightcoral\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"630\" y=\"180\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 4</text>\n\n<rect id=\"open-workspace\" data-room=\"Open Workspace\" x=\"180\" y=\"200\" width=\"400\" height=\"150\" fill=\"khaki\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"190\" y=\"275\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Open Workspace</text>\n\n<rect id=\"meeting-room-5\" data-room=\"Meeting Room 5\" x=\"20\" y=\"450\" width=\"150\" height=\"100\" fill=\"lightcoral\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"30\" y=\"490\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 5</text>\n\n<rect id=\"meeting-room-6\" data-room=\"Meeting Room 6\" x=\"200\" y=\"450\" width=\"150\" height=\"100\" fill=\"lightcoral\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"210\" y=\"490\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 6</text>\n\n<rect id=\"meeting-room-7\" data-room=\"Meeting Room 7\" x=\"380\" y=\"450\" width=\"150\" height=\"100\" fill=\"lightcoral\" stroke=\"black\" stroke-width=\"1\"/>\n<text x=\"390\" y=\"490\" font-family=\"Verdana\" font-size=\"15\" fill=\"black\">Meeting Room 7</text>\n        </svg>\n\n\n        {/* Modal for Booking */}\n        <Modal\n          animationType=\"slide\"\n          transparent={true}\n          visible={modalVisible}\n          onRequestClose={() => {\n            setModalVisible(!modalVisible);\n          }}\n        >\n          <View style={styles.modalContainer}>\n            <Text style={styles.modalText}>Room Name: {selectedRoom}</Text>\n            <Text>Select Time:</Text>\n            <View style={styles.pickerContainer}>\n              <Picker\n                selectedValue={selectedTime}\n                onValueChange={(itemValue) => setSelectedTime(itemValue)}\n                style={styles.pickerStyle}\n              >\n                 <Picker.Item label=\"9:00 AM - 10:00 AM\" value=\"9:00 AM - 10:00 AM\" />\n                <Picker.Item label=\"10:00 AM - 11:00 AM\" value=\"10:00 AM - 11:00 AM\" />\n                <Picker.Item label=\"11:00 AM - 12:00 PM\" value=\"11:00 AM - 12:00 PM\" />\n                <Picker.Item label=\"12:00 PM - 1:00 PM\" value=\"12:00 PM - 1:00 PM\" />\n                <Picker.Item label=\"1:00 PM - 2:00 PM\" value=\"1:00 PM - 2:00 PM\" />\n                <Picker.Item label=\"2:00 PM - 3:00 PM\" value=\"2:00 PM - 3:00 PM\" />\n                <Picker.Item label=\"3:00 PM - 4:00 PM\" value=\"3:00 PM - 4:00 PM\" />\n                <Picker.Item label=\"4:00 PM - 5:00 PM\" value=\"4:00 PM - 5:00 PM\" />\n            \n              </Picker>\n            </View>\n            <Button title=\"Confirm Booking\" onPress={() => handleConfirmBooking(selectedRoom, selectedTime)} />\n          </View>\n        </Modal>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  contentContainerStyle: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  svgContainer: {\n    width: 800, // Width of your SVG\n    height: 600, // Height of your SVG\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  // Add other styles here as previously defined\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    margin: 10,\n  },\n  modalText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: 'white',\n  },\n  pickerContainer: {\n    width: '100%',\n    marginBottom: 10,\n  },\n  pickerStyle: {\n    height: 50,\n    width: '100%',\n    backgroundColor: 'white',\n    color: 'black',\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: 'gray',\n    paddingLeft: 10,\n    paddingRight: 10,\n  },\n  selectedRoomContainer: {\n    marginTop: 16,\n  },\n  selectedRoomText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'green',\n  },\n  button: {\n    marginTop: 8,\n    backgroundColor: 'blue',\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n  },\n  notification: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    padding: 20,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    zIndex: 1000,\n  },\n  notificationText: {\n    color: '#000',\n  },\n  closeButton: {\n    color: '#000',\n    fontWeight: 'bold',\n  },\n});\n\nexport default BookRoomPage;","import React from 'react';\nimport { Image, View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { Avatar } from 'react-native-paper';\n\nconst AccountPage = ({route}) => {\n  const navigation = useNavigation();\n  const {employeeName, employeePic} = route.params;\n  console.log(employeePic)\n\n  const handleLogout = () => {\n    navigation.navigate('Home');\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.header}>Account Page</Text>\n\n      <View style={styles.contentContainer}>\n        <View style={styles.section}>\n          <Text style={styles.sectionTitle}>User Information</Text>\n          <Text>Email: {employeeName}@deskSynergy.com</Text>\n          {/* Add more user-related information here */}\n        </View>\n\n        <View style={styles.avatarContainer}>\n          <Avatar.Image\n            size={90}\n            // source={{ uri: 'https://avataaars.io/?avatarStyle=Transparent&topType=LongHairStraight&accessoriesType=Blank&hairColor=BrownDark&facialHairType=Blank&clotheType=BlazerShirt&eyeType=Default&eyebrowType=Default&mouthType=Default&skinColor=Light' }}\n            source={{ uri: employeePic }}\n\n          />\n        </View>\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.sectionTitle}>Account Actions</Text>\n        <TouchableOpacity style={styles.button}>\n          <Text style={styles.buttonText}>Change Password</Text>\n        </TouchableOpacity>\n        <TouchableOpacity style={styles.logoutButton} onPress={handleLogout}>\n          <Text style={styles.buttonText}>Logout</Text>\n        </TouchableOpacity>\n        {/* Add more account-related actions here */}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n  contentContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 16,\n  },\n  header: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16,\n  },\n  section: {\n    flex: 1,\n    marginRight: 16,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  avatarContainer: {\n    marginRight: 20,\n    marginTop: -10,\n  },\n  button: {\n    backgroundColor: '#3498db',\n    padding: 12,\n    borderRadius: 8,\n    marginTop: 8,\n  },\n  logoutButton: {\n    backgroundColor: 'red',\n    padding: 12,\n    borderRadius: 8,\n    marginTop: 8,\n  },\n  buttonText: {\n    color: '#ffffff',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n});\n\nexport default AccountPage;\n","import React, { useState, useEffect } from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\nimport axios from \"axios\";\n\nconst TemperaturesPage = ({ route }) => {\n  const [tempValue, setTempValue] = useState(10);\n  const [tempColor, setTempColor] = useState(\"cold\");\n  const empid = route.params.employeeId;\n\n  useEffect(() => {\n    getTemperature();\n  }, []);\n\n  const getTemperature = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3001/auth/temperature\");\n      setTempValue(response.data);\n      if (response.data >= 15) {\n        setTempColor(\"hot\");\n      } else {\n        setTempColor(\"cold\");\n      }\n    } catch (error) {\n      console.error(`Error fetching temperature: ${error}`);\n    }\n  };\n\n  const increaseTemp = () => {\n    if (tempValue < 30) {\n      const newTemp = tempValue + 1;\n      setTempValue(newTemp);\n      if (newTemp > 14) {\n        setTempColor(\"hot\");\n      }\n    }\n  };\n\n  const decreaseTemp = () => {\n    if (tempValue > 1) {\n      const newTemp = tempValue - 1;\n      setTempValue(newTemp);\n      if (newTemp < 15) {\n        setTempColor(\"cold\");\n      }\n    }\n  };\n\n  const saveTemp = async (currentTemp) => {\n    try {\n      const response = await axios.post(\"http://localhost:3001/auth/savetemperature\", { temperature: currentTemp });\n      setTempValue(response.data.temperature);\n    } catch (error) {\n      console.error(`Error saving temperature: ${error}`);\n    }\n  };\n\n  return (\n    <View style={styles.appContainer}>\n      <View style={styles.temperatureDisplayContainer}>\n        <View style={[styles.temperatureDisplay, tempColor === \"hot\" ? styles.hot : styles.cold]}>\n          <Text style={styles.temperatureText}>{tempValue}</Text>\n        </View>\n      </View>\n      {empid === \"admin\" && (\n        <>\n          <View style={styles.buttonContainer}>\n            <TouchableOpacity style={styles.button} onPress={increaseTemp}>\n              <Text>+</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.button} onPress={decreaseTemp}>\n              <Text>-</Text>\n            </TouchableOpacity>\n          </View>\n          <View style={styles.buttonContainer}>\n            <TouchableOpacity style={styles.button} onPress={() => saveTemp(tempValue)}>\n              <Text>Maintain</Text>\n            </TouchableOpacity>\n          </View>\n        </>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  appContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  temperatureDisplayContainer: {\n    alignItems: \"center\",\n    marginBottom: 20,\n  },\n  temperatureDisplay: {\n    borderRadius: 110,\n    height: 220,\n    width: 220,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: 48,\n    color: \"#04040A\",\n  },\n  temperatureText: {\n    fontSize: 48,\n    color: \"#04040A\",\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n  button: {\n    padding: 20,\n    margin: 20,\n  },\n  cold: {\n    shadowColor: \"#3737CD\",\n    shadowOffset: { width: 5, height: 10 },\n    shadowRadius: 75,\n    shadowOpacity: 1,\n  },\n  hot: {\n    shadowColor: \"#ff0000\",\n    shadowOffset: { width: 5, height: 10 },\n    shadowRadius: 75,\n    shadowOpacity: 1,\n  },\n});\n\nexport default TemperaturesPage;\n\n","import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport PMPage from './PMPage';\nimport BookRoomPage from './BookRoomPage';\nimport AccountPage from './AccountPage';\nimport TemperaturesPage from './TemperaturesPage'; // Import TemperaturesPage\n\nconst Tab = createBottomTabNavigator();\n\nconst BottomTabNavigator = ({ route }) => {\n  const { employeeId, employeeName, employeePic } = route.params;\n\n  console.log(\"Employee pic:\", employeePic);\n\n  return (\n    <Tab.Navigator\n      tabBarOptions={{\n        activeTintColor: '#3498db',\n        inactiveTintColor: 'gray',\n        labelStyle: {\n          fontSize: 14,\n          fontWeight: 'bold',\n        },\n        style: {\n          backgroundColor: '#f2f2f2',\n        },\n      }}\n    >\n      <Tab.Screen\n        name=\"PM Tracking\"\n        component={PMPage}\n        initialParams={{ employeeId: employeeId, employeeName: employeeName }}\n        options={{\n          tabBarIcon: ({ color, size }) => <Icon name=\"track-changes\" size={size} color={color} />,\n        }}\n      />\n      <Tab.Screen\n        name=\"Book a Room\"\n        component={BookRoomPage}\n        options={{\n          tabBarIcon: ({ color, size }) => <Icon name=\"event-available\" size={size} color={color} />,\n        }}\n      />\n      <Tab.Screen\n        name=\"Temperatures\" // New screen name for TemperaturesPage\n        component={TemperaturesPage} // Link to TemperaturesPage component\n        initialParams={{employeeId: employeeId}}\n        options={{\n          tabBarIcon: ({ color, size }) => <Icon name=\"thermostat\" size={size} color={color} />, // Example icon\n        }}\n      />\n      <Tab.Screen\n        name=\"Account\"\n        component={AccountPage}\n        initialParams={{ employeeName: employeeName, employeePic: employeePic }}\n        options={{\n          tabBarIcon: ({ color, size }) => <Icon name=\"account-circle\" size={size} color={color} />,\n        }}\n      />\n    </Tab.Navigator>\n  );\n};\n\nexport default BottomTabNavigator;\n","import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, TextInput, StyleSheet } from 'react-native';\nimport { Button, Card, Title, Paragraph, IconButton } from 'react-native-paper';\nimport BottomTabNavigator from './BottomTabNavigator';\nimport { useNavigation } from '@react-navigation/native';\nimport axios from 'axios';\nimport colors from './colors';  // Assuming colors.js is in the same directory\n\n\n\nconst COLORS = {\n  primary: '#075eec',\n  secondary: '#222',\n  white: '#fff',\n};\n\nconst LoginScreen = ({ navigation }) => {\n  const [employeeId, setEmployeeId] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [error, setError] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const handleLogin = async () => {\n    try {\n      const loginData = { employeeId, password };\n      const response = await axios.post('https://capstone-cmml.onrender.com/auth/login', loginData);\n    //  const response = await axios.post('http://localhost:3001/auth/login', loginData);\n\n      if (employeeId === 'admin' && password === 'admin') {\n        navigation.navigate('Account', { employeeID: employeeId });\n        setIsAdmin(true);\n      }\n\n      console.log(response);\n      console.log('Login successful:', response.data);\n      setLoggedIn(true);\n      \n       // Extracting employeeId and employeeName directly from response.data\n       const { id, name: employeeName, pic: employeePic } = response.data;\n\n       // Logging the extracted values\n       console.log('Employee ID:', id);\n       console.log('Employee Name:', employeeName);\n \n       // Navigating to BottomTabNav with employeeId and employeeName as parameters\n       navigation.navigate('BottomTabNav', { employeeId: id, employeeName: employeeName, employeePic: employeePic });\n \n\n    } catch (error) {\n      console.error('Error logging in:', error);\n      setError('Incorrect user information. Please try again.');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n\n    {/* Icon added above the Card */}\n    <IconButton\n        icon=\"login-variant\"\n        color={COLORS.primary}\n        size={70}\n        onPress={() => console.log('Icon pressed')}\n        style={styles.icon}\n      />\n\n      <Card style={styles.card}>\n        <Card.Content>\n          <Title style={styles.title}>Login</Title>\n          <Paragraph style={styles.subtitle}>Manage your workspace here</Paragraph>\n\n          <TextInput\n            autoCapitalize=\"none\"\n            autoCorrect={false}\n            keyboardType=\"email-address\"\n            onChangeText={(email) => setEmployeeId(email)}\n            placeholder=\"Email address\"\n            placeholderTextColor=\"#6b7280\"\n            style={styles.inputControl}\n            value={employeeId}\n          />\n\n          <TextInput\n            autoCorrect={false}\n            onChangeText={(pwd) => setPassword(pwd)}\n            placeholder=\"Password\"\n            placeholderTextColor=\"#6b7280\"\n            style={styles.inputControl}\n            secureTextEntry={true}\n            value={password}\n          />\n\n          <Button\n            mode=\"contained\"\n            onPress={handleLogin}\n            style={styles.btn}\n            labelStyle={styles.btnText}\n          >\n            Sign in\n          </Button>\n\n          <TouchableOpacity onPress={() => navigation.navigate('Register')} style={styles.formFooter}>\n            <Text style={styles.formFooterText}>\n              Don't have an account? <Text style={styles.formFooterLink}>Sign up</Text>\n            </Text>\n          </TouchableOpacity>\n\n          {error !== '' && <Text style={styles.errorMessage}>{error}</Text>}\n        </Card.Content>\n      </Card>\n\n      \n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#e8ecf4',\n  },\n  card: {\n    width: '80%',\n    padding: 16,\n    borderRadius: 12,\n    backgroundColor: '#fff',\n    elevation: 4,\n    height: '60%',\n  },\n  title: {\n    fontSize: 27,\n    fontWeight: '700',\n    color: COLORS.secondary,\n    marginBottom: 6,\n    textAlign: 'center',\n  },\n  subtitle: {\n    fontSize: 15,\n    fontWeight: '500',\n    color: '#929292',\n    textAlign: 'center',\n    marginBottom: 24,\n  },\n  inputControl: {\n    height: 44,\n    backgroundColor: '#f1f5f9',\n    marginBottom: 16,\n    paddingHorizontal: 16,\n    borderRadius: 12,\n    fontSize: 15,\n    fontWeight: '500',\n    color: COLORS.secondary,\n  },\n  btn: {\n    borderRadius: 8,\n    marginBottom: 24,\n    backgroundColor: COLORS.primary,\n  },\n  btnText: {\n    fontSize: 18,\n    lineHeight: 26,\n    fontWeight: '600',\n    color: COLORS.white,\n  },\n  formFooter: {\n    marginTop: 'auto',\n    alignItems: 'center',\n  },\n  formFooterText: {\n    fontSize: 17,\n    fontWeight: '600',\n    color: COLORS.secondary,\n    textAlign: 'center',\n    letterSpacing: 0.15,\n  },\n  formFooterLink: {\n    textDecorationLine: 'underline',\n  },\n  errorMessage: {\n    color: COLORS.primary,\n    marginTop: 10,\n  },\n  icon: {\n    position: 'absolute',\n    top: 30,\n    right: 135,\n  },  \n});\n\nexport default LoginScreen;\n","import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, TextInput, StyleSheet } from 'react-native';\nimport axios from 'axios';\nimport { Button, Card, Title, IconButton } from 'react-native-paper';\n\nconst COLORS = {\n  primary: '#007aff',\n  background: '#fff',\n  text: '#222',\n  error: 'red',\n};\n\nconst RegisterScreen = ({ navigation }) => {\n  const [employeeName, setEmployeeName] = useState('');\n  const [employeeId, setEmployeeId] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleHome = () => {\n    navigation.navigate('Home');\n  };\n\n  const handleRegister = async () => {\n    try {\n      const registrationData = { employeeName, employeeId, password };\n      const response = await axios.post('http://18.216.105.223:3001/auth/register', registrationData);\n      console.log('User registered successfully:', response.data);\n      navigation.navigate('Login');\n    } catch (error) {\n      console.error('Error registering user:', error);\n      setError('Registration failed. Please try again.');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      {/* Icon added above the Card */}\n      <IconButton\n        icon=\"account-check-outline\"\n        color={COLORS.primary}\n        size={70}\n        onPress={() => console.log('Icon pressed')}\n        style={styles.icon}\n      />\n\n      <Card style={styles.card}>\n        <Card.Content>\n          <Text style={styles.title}>Registration</Text>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Employee Name\"\n            value={employeeName}\n            onChangeText={(text) => setEmployeeName(text)}\n          />\n          <TextInput\n            style={styles.input}\n            placeholder=\"Employee ID\"\n            value={employeeId}\n            onChangeText={(text) => setEmployeeId(text)}\n          />\n          <TextInput\n            style={styles.input}\n            placeholder=\"Password\"\n            secureTextEntry\n            value={password}\n            onChangeText={(text) => setPassword(text)}\n          />\n          <TouchableOpacity style={styles.btn} onPress={handleRegister}>\n            <Text style={styles.btnText}>Register</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.btn} onPress={handleHome}>\n            <Text style={styles.btnText}>Home</Text>\n          </TouchableOpacity>\n          {error !== '' && <Text style={styles.errorMessage}>{error}</Text>}\n        </Card.Content>\n      </Card>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#e8ecf4',\n  },\n  icon: {\n    position: 'absolute',\n    top: 30,\n    right: 135,\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    alignSelf: 'center',\n    color: COLORS.text,\n    marginBottom: 20,\n  },\n  input: {\n    marginBottom: 16,\n    height: 44,\n    width: '100%', // Changed width to 100%\n    backgroundColor: '#f1f5f9',\n    paddingHorizontal: 16,\n    borderRadius: 12,\n    fontSize: 15,\n    fontWeight: '500',\n    color: COLORS.text,\n    borderColor: COLORS.primary,\n    borderBottomWidth: 1,\n  },\n  btn: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 8,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderWidth: 1,\n    backgroundColor: COLORS.primary,\n    borderColor: COLORS.primary,\n    marginBottom: 16,\n    width: '100%', // Changed width to 100%\n  },\n  btnText: {\n    fontSize: 17,\n    lineHeight: 24,\n    fontWeight: '600',\n    color: COLORS.background,\n  },\n  errorMessage: {\n    color: COLORS.error,\n    marginTop: 10,\n  },\n  card: {\n    padding: 5,\n  },\n});\n\nexport default RegisterScreen;\n","import React from 'react';\nimport { View, Text, Image, TouchableOpacity, StyleSheet } from 'react-native';\n\nconst COLORS = {\n  primary: '#075eec', // Adjusted primary color for consistency\n  background: '#e8ecf4', // Adjusted background color for consistency\n  text: '#1d1d1d', // Adjusted text color for consistency\n};\n\nconst Homepage = ({ navigation }) => {\n  const handleLoginClick = () => {\n    navigation.navigate('Login');\n  };\n\n  const handleRegisterClick = () => {\n    navigation.navigate('Register');\n  };\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={require('./images/desk-synergy.png')} // Adjust the path based on your project structure\n        style={styles.logo}\n      />\n      <Text style={styles.title}>DeskSynergy</Text>\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity style={styles.btn} onPress={handleLoginClick}>\n          <Text style={styles.btnText}>Login</Text>\n        </TouchableOpacity>\n        <TouchableOpacity style={styles.btn} onPress={handleRegisterClick}>\n          <Text style={styles.btnText}>Register</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: COLORS.background,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: COLORS.text,\n    marginBottom: 20,\n  },\n  logo: {\n    width: 200,\n    height: 200,\n    marginBottom: 20,\n  },\n  buttonContainer: {\n    width: '80%',\n    marginTop: 20,\n  },\n  btn: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 8,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderWidth: 1,\n    backgroundColor: COLORS.primary,\n    borderColor: COLORS.primary,\n    marginBottom: 16,\n    width: '100%',\n  },\n  btnText: {\n    fontSize: 17,\n    lineHeight: 24,\n    fontWeight: '600',\n    color: '#fff',\n  },\n});\n\nexport default Homepage;\n","import React from 'react';\nimport { View, Text, StyleSheet, Dimensions } from 'react-native';\nimport Onboarding from 'react-native-onboarding-swiper';\nimport LottieView from 'lottie-react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nconst { width } = Dimensions.get('window');\n\nexport default function OnboardScreen() {\n  const navigation = useNavigation();\n\n  const handleDone = () => {\n    navigation.navigate('Home');\n  };\n\n  return (\n    <View style={styles.container}>\n      <Onboarding\n        onDone={handleDone}\n        onSkip={handleDone}\n        //nextLabel={handleDone}\n        containerStyles={{ paddingHorizontal: 15 }}\n        pages={[\n\n          {\n            backgroundColor: '#40E0D0',\n            image: (\n              <View style={styles.lottieContainer}>\n                <LottieView source={require('./animations/arrow.json')} autoPlay loop />\n                <Text style={styles.titleText}>Welcome to DeskSynergy</Text>\n              </View>\n            ),\n          },\n          {\n            backgroundColor: '#40E0D0',\n            \n            image: (\n              <View style={styles.lottieContainer}>\n                <LottieView source={require('./animations/happy.json')} autoPlay loop />\n                <Text style={styles.titleText}>Boost Productivity</Text>\n                <Text style={styles.smallText}>Have seamless workforce collaborataion</Text>\n              </View>\n            ),\n          },\n          {\n            backgroundColor: '#fef37c',\n            image: (\n              <View style={styles.lottieContainer}>\n                <LottieView source={require('./animations/WorkEnvironment.json')} autoPlay loop />\n                <Text style={styles.titleText}>Work Seemingly</Text>\n                <Text style={styles.smallText}>Handle office functions in one place</Text>\n              </View>\n            ),\n          },\n          {\n            backgroundColor: \"#800080\",\n            image: (\n              <View style={styles.lottieContainer}>\n                <LottieView source={require('./animations/rocket.json')} autoPlay loop />\n                <Text style={styles.titleText}>Achieve Higher Goals</Text>\n                <Text style={styles.smallText}>Manage Better, Perform Better!</Text>\n              </View>\n            ),\n          },\n          \n        ]}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n  },\n  lottieContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  titleText: {\n    marginTop: 20,\n    fontSize: 27,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  smallText: {\n    marginTop: 10, // Adjust the spacing as needed\n    fontSize: 21, // Adjust the font size as needed\n    color: 'white',\n  },\n  title: {\n    marginTop: 10,\n    fontSize: 21,\n    color: 'white',\n  }\n});","// App.js\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LoginScreen from './LoginScreen';\nimport RegisterScreen from './RegisterScreen';\nimport homepage from './homepage';\nimport PMPage from './PMPage';\nimport BottomTabNavigator from './BottomTabNavigator';\nimport BookRoomPage from './BookRoomPage';\nimport OnboardingScreen from './OnboardScreen'; // Import the OnboardingScreen component\nimport AccountPage from './AccountPage';\nimport AddProject from './AddProjectPage';\nimport AddNotification from './AddNotification';\n\n\nconst Stack = createStackNavigator();\n\nconst App = () => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Login\">\n        <Stack.Screen\n          name=\"Onboarding\"\n          component={OnboardingScreen}\n          options={{ headerShown: false }}\n        />\n\n        <Stack.Screen\n          name=\"Register\"\n          component={RegisterScreen}\n          options={{ headerShown: false }}\n        />\n\n        <Stack.Screen\n          name=\"Login\"\n          component={LoginScreen}\n          options={{ headerShown: false }}\n        />\n\n        <Stack.Screen\n          name=\"Home\"\n          component={homepage}\n          options={{ headerShown: false }}\n        />\n\n        <Stack.Screen\n          name=\"PMPage\"\n          component={PMPage}\n          options={{ headerShown: false }}\n        />\n\n        <Stack.Screen\n          name=\"BottomTabNav\"\n          component={BottomTabNavigator}\n          options={{ headerShown: false }}\n        />\n\n        <Stack.Screen\n          name=\"BookRoomPage\"\n          component={BookRoomPage}\n          options={{ headerShown: true }}\n        />\n\n        <Stack.Screen\n          name=\"AccountPage\"\n          component={AccountPage} // Use a WebView component for home.html\n          options={{ headerShown: true }}\n        />\n\n      <Stack.Screen\n          name=\"AddNotification\"\n          component={AddNotification} // Use a WebView component for home.html\n          options={{ headerShown: true }}\n        />  \n        \n\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default App;","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [529], () => (__webpack_require__(8378)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["styles","StyleSheet","create","container","flex","alignItems","justifyContent","padding","title","fontSize","fontWeight","marginBottom","input","width","borderWidth","borderColor","borderRadius","notification","position","top","left","right","flexDirection","zIndex","notificationText","color","closeButton","_useState","useState","_useState2","_slicedToArray","projectName","setProjectName","_useState3","_useState4","percentageComplete","setPercentageComplete","_useState5","_useState6","team","setTeam","_useState7","_useState8","dueDate","setDueDate","_useState9","visible","message","theme","_useState10","setNotification","showNotification","arguments","length","undefined","setTimeout","handleAddProject","_ref","_asyncToGenerator","teamArray","split","map","item","trim","projectData","Name","Percentage_Complete","parseFloat","Due_Date","Team","axios","post","error","apply","_jsxs","View","style","children","backgroundColor","_jsx","Text","TouchableOpacity","onPress","TextInput","placeholder","value","onChangeText","keyboardType","Button","marginVertical","label","marginRight","statusText","marginLeft","isComplete","setIsComplete","Switch","trackColor","false","true","thumbColor","ios_backgroundColor","onValueChange","prevValue","height","borderBottomWidth","paddingLeft","setTitle","setMessage","time","setTime","employees","setEmployees","navigation","useNavigation","handleAddNotification","notificationData","targetEmployeeIds","createdAt","console","log","navigate","Alert","header","cardUnread","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","cardTitle","cardMessage","cardTime","marginTop","markAsReadButton","markAsReadButtonText","textAlign","cardRead","opacity","titleRow","deleteButton","refreshButton","alignSelf","addNotificationButton","route","notifications","setNotifications","employeeId","params","fetchNotifications","_ref2","response","get","data","useEffect","markAsRead","_ref3","notificationTitle","patch","n","readBy","includes","_objectSpread","concat","_toConsumableArray","_x","deleteNotification","_ref4","delete","filter","_x2","Icon","name","size","index","card","Date","toLocaleString","Tab","createMaterialTopTabNavigator","Stack","createStackNavigator","PHASES","percentage","Math","floor","random","TasksPage","_route$params2","phase","isModalVisible","setIsModalVisible","newTaskName","setNewTaskName","newTaskPhase","setNewTaskPhase","newTaskSize","setNewTaskSize","newTaskNumEmployees","setNewTaskNumEmployees","_useState11","_useState12","newTaskEmployees","setNewTaskEmployees","_useState13","_useState14","employeeInputs","setEmployeeInputs","_useState15","_useState16","projectTasks","setProjectTasks","_useState17","_useState18","newProjectName","setNewProjectName","fetchTasks","project","find","p","tasksForPhase","Tasks","t","taskPhase","handleUpdateSampleEmployees","user_Data","user_data","new_task_name","val","convertStringToJson","val_json","JSON","parse","lines","shift","line","_line$trim$split","_line$trim$split2","_toArray","id","slice","join","parseInt","EmployeeName","stringify","jsonOutput","handleSaveTask","_ref5","taskDetails","taskName","taskSize","handleCloseModal","mytext","addButton","addButtonText","FlatList","keyExtractor","toString","renderItem","_ref6","task","taskCard","TaskToggle","completionStatus","taskComplete","Modal","animationType","transparent","onRequestClose","modalContainer","splitScreenContainer","leftSide","modalTitle","inputField","text","updateButton","String","numEmployees","clampedNumEmployees","max","min","Array","fill","handleNumEmployeesChange","from","_","updatedInputs","handleEmployeeInputChange","rightSide","_ref7","sampleEmployee","modalButtons","buttonWrapper","renderProjectCard","teamText","projectCard","leftContent","duedate","cardText","separator","rightContent","percentText","CircularProgress","variant","ProjectDetailsScreen","_ref8","_route$params3","chartConfig","backgroundGradientFrom","backgroundGradientTo","labelColor","barPercentage","barStyle","formatYLabel","chartWidth","Dimensions","labels","datasets","ScrollView","_ref9","renderPhaseCard","scrollEnabled","BarChart","yAxisLabel","verticalLabelRotation","chart","AllScreen","_ref10","_useState19","_useState20","projects","setProjects","_useState21","_useState22","setError","employeeName","fetchProjects","_ref11","_ref12","OngoingScreen","_ref13","_useState23","_useState24","_ref14","ongoingProjects","_ref15","CompletedScreen","_ref16","_useState25","_useState26","_ref17","completedProjects","_ref18","PMTopTabNavigator","_ref19","_route$params4","Navigator","Screen","component","initialParams","phaseCardContainer","margin","phaseCard","phaseText","fontFamily","font","paddingHorizontal","paddingVertical","borderBottomColor","modalContent","overflow","maxWidth","marginHorizontal","saveButton","cancelButton","buttonText","phaseTitle","display","_route$params","setOptions","headerRight","initialRouteName","headerMode","AddProjectPage","NotificationBar","contentContainerStyle","flexGrow","svgContainer","modalText","pickerContainer","pickerStyle","paddingRight","selectedRoomContainer","selectedRoomText","button","selectedRoom","setSelectedRoom","modalVisible","setModalVisible","selectedTime","setSelectedTime","fetchRoomData","room","attachRoomClickListeners","forEach","roomId","document","getElementById","addEventListener","roomName","getAttribute","onRoomClick","handleConfirmBooking","booked","updateBookingStatus","alert","cancelable","_x3","_x4","put","_x5","_x6","_x7","horizontal","xmlns","x","y","stroke","Picker","selectedValue","itemValue","Item","contentContainer","section","sectionTitle","avatarContainer","logoutButton","employeePic","Avatar","source","uri","appContainer","temperatureDisplayContainer","temperatureDisplay","temperatureText","buttonContainer","cold","hot","tempValue","setTempValue","tempColor","setTempColor","empid","getTemperature","saveTemp","currentTemp","temperature","_Fragment","newTemp","createBottomTabNavigator","tabBarOptions","activeTintColor","inactiveTintColor","labelStyle","PMPage","options","tabBarIcon","BookRoomPage","TemperaturesPage","AccountPage","COLORS","subtitle","inputControl","btn","btnText","lineHeight","formFooter","formFooterText","letterSpacing","formFooterLink","textDecorationLine","errorMessage","icon","setEmployeeId","password","setPassword","setLoggedIn","setIsAdmin","handleLogin","loginData","employeeID","_response$data","pic","IconButton","Card","Content","Title","Paragraph","autoCapitalize","autoCorrect","email","placeholderTextColor","pwd","secureTextEntry","mode","setEmployeeName","handleRegister","registrationData","logo","Image","require","OnboardScreen","handleDone","Onboarding","onDone","onSkip","containerStyles","pages","image","lottieContainer","LottieView","autoPlay","loop","titleText","smallText","NavigationContainer","OnboardingScreen","headerShown","RegisterScreen","LoginScreen","homepage","BottomTabNavigator","AddNotification","registerRootComponent","App","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","this","then","ns","def","current","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","g","globalThis","Function","e","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}